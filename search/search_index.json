{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"<p>\u6b22\u8fce\u6765\u5230\u9648\u963f\u660e\u7684\u7b14\u8bb0\u7a7a\u95f4\uff01</p> <p>\u4f60\u53ef\u4ee5\u5728\u8be5\u7f51\u7ad9\u68c0\u7d22\u9648\u963f\u660e\u7684\uff1a 1. \u5b66\u4e60\u7b14\u8bb0 2. \u4e2a\u4eba\u7b80\u5386 3. \u9879\u76ee\u7ecf\u5386 4. \u4e2a\u4eba\u535a\u5ba2</p> <p></p> <p>\u5e0c\u671b\u5927\u5bb6\u5171\u540c\u8fdb\u6b65\uff01</p>"},{"location":"SpecializedCourse/computerzuchen/c/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":"<p>\u5c0f\u4e3b\u8bf7\u7a0d\u7b49\uff0c\u7f51\u7ad9\u6b63\u5728\u5168\u901f\u5efa\u8bbe\u4e2d!</p>"},{"location":"SpecializedCourse/datastructure/xulun/","title":"\u7b2c\u4e00\u7ae0 \u7eea\u8bba","text":"<ul> <li>\u65e9\u671f\u7684\u8ba1\u7b97\u673a\u4e3b\u8981\u7528\u4e8e\u6570\u503c\u8ba1\u7b97</li> <li>\u73b0\u5728\u8ba1\u7b97\u673a\u4e3b\u8981\u7528\u4e8e\u975e\u6570\u503c\u8ba1\u7b97\uff0c\u5305\u62ec\u5904\u7406\u5b57\u7b26\u3001\u8868\u683c\u548c\u56fe\u50cf\u7b49\u5177\u6709\u4e00\u5b9a\u7ed3\u6784\u7684\u6570\u636e<ul> <li>\u8fd9\u4e9b\u6570\u636e\u5185\u5bb9\u5b58\u5728\u7740\u67d0\u79cd\u8054\u7cfb\uff0c\u53ea\u6709\u5206\u6e05\u6570\u636e\u7684\u5185\u5728\u8054\u7cfb\uff0c\u5408\u7406\u5730\u7ec4\u7ec7\u6570\u636e\uff0c\u624d\u80fd\u5bf9\u4ed6\u4eec\u8fdb\u884c\u6709\u6548\u7684\u5904\u7406\uff0c\u8bbe\u8ba1\u51fa\u9ad8\u6548\u7684\u7b97\u6cd5</li> <li>\u5982\u4f55\u5408\u7406\u5730\u7ec4\u7ec7\u6570\u636e\u3001\u9ad8\u6548\u7684\u5904\u7406\u6570\u636e\uff0c\u8fd9\u5c31\u662f\"\u6570\u636e\u7ed3\u6784\"\u4e3b\u8981\u7814\u7a76\u7684\u95ee\u9898</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#11","title":"1.1 \u6570\u636e\u7ed3\u6784\u7684\u7814\u7a76\u5185\u5bb9","text":"<p>\u8ba1\u7b97\u673a\u4e3b\u8981\u7528\u4e8e\u6570\u503c\u8ba1\u7b97\u65f6\uff0c\u4e00\u822c\u8981\u7ecf\u8fc7\u5982\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u9996\u5148\u4ece\u5177\u4f53\u95ee\u9898\u62bd\u8c61\u51fa\u6570\u5b66\u6a21\u578b</li> <li>\u7136\u540e\u8bbe\u8ba1\u4e00\u4e2a\u89e3\u6b64\u6570\u5b66\u6a21\u578b\u7684\u7b97\u6cd5</li> <li>\u6700\u540e\u7f16\u5199\u7a0b\u5e8f\uff0c\u8fdb\u884c\u6d4b\u8bd5\u3001\u8c03\u8bd5\uff0c\u76f4\u5230\u89e3\u51b3\u95ee\u9898\u3002</li> </ol> <p>\u5728\u6b64\u8fc7\u7a0b\u4e2d\u5bfb\u6c42\u6570\u5b66\u6a21\u578b\u7684\u5b9e\u8d28\u662f==\u5206\u6790\u95ee\u9898==\uff0c\u4ece\u4e2d\u63d0\u53d6\u64cd\u4f5c\u7684\u5bf9\u8c61\uff0c\u5e76\u627e\u51fa\u8fd9\u4e9b\u64cd\u4f5c\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7136\u540e\u7528\u6570\u5b66\u8bed\u8a00\u52a0\u4ee5\u63cf\u8ff0\uff0c\u5373\u5efa\u7acb\u76f8\u5e94\u7684\u6570\u5b66\u65b9\u7a0b\u3002</p> <ul> <li>\u4f8b\u5982\uff0c\u7528\u8ba1\u7b97\u673a\u8fdb\u884c\u5168\u7403\u5929\u6c14\u9884\u62a5\u65f6\uff0c\u5c31\u9700\u8981\u6c42\u89e3\u4e00\u7ec4\u7403\u9762\u5750\u6807\u7cfb\u4e0b\u7684\u4e8c\u9636\u692d\u5706\u504f\u5fae\u5206\u65b9\u7a0b\u3002</li> <li>\u9884\u6d4b\u4eba\u53e3\u589e\u957f\u60c5\u51b5\u7684\u6570\u5b66\u6a21\u578b\u4e3a\u5e38\u5fae\u5206\u65b9\u7a0b\u3002</li> <li>\u6c42\u89e3\u8fd9\u4e9b\u6570\u5b66\u65b9\u7a0b\u7684\u7b97\u6cd5\u662f\u8ba1\u7b97\u6570\u5b66\u7814\u7a76\u7684\u8303\u7574\uff0c\u5982\u9ad8\u65af\u6d88\u5143\u6cd5\u3001\u5dee\u5206\u6cd5\u3001\u6709\u9650\u5143\u6cd5\u7b49\u7b97\u6cd5\u3002</li> <li>\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u7814\u7a76\u975e\u6570\u503c\u8ba1\u7b97\u95ee\u9898\uff0c\u975e\u6570\u503c\u8ba1\u7b97\u95ee\u9898\u65e0\u6cd5\u7528\u6570\u5b66\u65b9\u7a0b\u5efa\u7acb\u6570\u5b66\u6a21\u578b\uff0c\u4e0b\u9762\u901a\u8fc7\u4e09\u4e2a\u5b9e\u4f8b\u52a0\u4ee5\u8bf4\u660e\u3002</li> </ul> <p>[\u4f8b1.1] \u5b66\u751f\u5b66\u7c4d\u7ba1\u7406\u7cfb\u7edf </p> <ul> <li>\u6bcf\u4e2a\u5b66\u751f\u7684\u57fa\u672c\u4fe1\u606f\u8bb0\u5f55\u6309\u987a\u5e8f\u53f7\u6392\u5217\uff0c\u5f62\u6210\u4e86\u5b66\u751f\u57fa\u672c\u4fe1\u606f\u8bb0\u5f55\u7684\u7ebf\u6027\u5e8f\u5217\uff0c\u5448\u4e00\u79cd\u7ebf\u6027\u5173\u7cfb\u3002</li> <li>\u8bf8\u5982\u6b64\u7c7b\u7684\u7ebf\u6027\u8868\u7ed3\u6784\u8fd8\u6709\u56fe\u4e66\u9986\u7684\u4e66\u76ee\u7ba1\u7406\u7cfb\u7edf\u3001\u5e93\u5b58\u7ba1\u7406\u7cfb\u7edf\u7b49\u3002</li> <li>\u5728\u6b64\u7c7b\u95ee\u9898\u4e2d\uff0c\u8ba1\u7b97\u673a\u5904\u7406\u7684\u5bf9\u8c61\u662f\u5404\u79cd\u8868\uff0c\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u7b80\u5355\u4e00\u5bf9\u4e00\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u56e0\u6b64\u8fd9\u7c7b\u95ee\u9898\u7684\u6570\u5b66\u6a21\u578b\u5c31\u662f\u5404\u79cd\u7ebf\u6027\u8868\uff0c\u65bd\u52a0\u4e8e\u5bf9\u8c61\u4e0a\u7684\u64cd\u4f5c\u6709\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u7b49\u3002</li> <li>\u8fd9\u7c7b\u6570\u5b66\u6a21\u578b\u79f0\u4e3a\u201c\u7ebf\u6027\u201d\u7684\u6570\u636e\u7ed3\u6784\u3002</li> </ul> <p>[\u4f8b1.2]  \u4eba\u673a\u5bf9\u5f08\u95ee\u9898 - \u8ba1\u7b97\u673a\u4e4b\u6240\u4ee5\u80fd\u548c\u4eba\u5bf9\u5f08\u662f\u56e0\u4e3a\u5df2\u7ecf\u5c06\u5bf9\u5f08\u7684\u7b56\u7565\u5728\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u597d\u3002 - \u7531\u4e8e\u5bf9\u5f08\u7684\u8fc7\u7a0b\u662f\u5728\u4e00\u5b9a\u89c4\u5219\u4e0b\u968f\u673a\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\uff0c\u4e3a\u4f7f\u8ba1\u7b97\u673a\u80fd\u7075\u6d3b\u5bf9\u5f08\uff0c\u5c31\u5fc5\u987b\u628a\u5bf9\u5f08\u8fc7\u7a0b\u4e2d\u6240\u6709\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5\u53ca\u76f8\u5e94\u7684\u5bf9\u7b56\u90fd\u52a0\u4ee5\u8003\u8651\u3002 - \u4ee5\u6700\u7b80\u5355\u7684\u4e95\u5b57\u68cb\u4e3a\u4f8b\uff0c\u521d\u59cb\u72b6\u6001\u662f\u4e00\u4e2a\u7a7a\u7684\u671f\u76d8\u683c\u5c40\u3002\u5bf9\u5f08\u5f00\u59cb\u540e\uff0c\u6bcf\u4e0b\u4e00\u6b65\u68cb\uff0c\u5219\u6784\u6210\u4e00\u4e2a\u65b0\u7684\u68cb\u76d8\u683c\u5c40\uff0c\u4e14\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u4e2a\u68cb\u76d8\u683c\u5c40\u7684\u53ef\u80fd\u9009\u62e9\u53ef\u4ee5\u6709\u591a\u79cd\u5f62\u5f0f\uff0c\u56e0\u800c\u6574\u4e2a\u5bf9\u5f08\u8fc7\u7a0b\u5c31\u5982\u540c\u56fe1.1\u6240\u793a\u7684\u201c\u4e00\u68f5\u5012\u957f\u7684\u6811\u201d\u3002</p> <p> - \u5728\u8fd9\u68f5\u201c\u6811\u201d\u4e2d\uff0c\u4ece\u521d\u59cb\u72b6\u6001\uff08\u6839\uff09\u5230\u67d0\u4e00\u6700\u7ec8\u683c\u5c40\uff08\u53f6\u5b50\uff09\u7684\u4e00\u6761\u8def\u5f84\uff0c\u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u5f08\u8fc7\u7a0b\u3002 - \u4eba\u673a\u5bf9\u5f08\u95ee\u9898\u7684\u6570\u5b66\u6a21\u578b\u5c31\u662f\u5982\u4f55\u7528\u6811\u7ed3\u6784\u8868\u793a\u68cb\u76d8\u548c\u68cb\u5b50\u7b49\uff0c\u7b97\u6cd5\u662f\u535a\u5f08\u7684\u89c4\u5219\u548c\u7b56\u7565\u3002 - \u8bf8\u5982\u6b64\u7c7b\u7684\u6811\u7ed3\u6784\u8fd8\u6709\u8ba1\u7b97\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u3001\u4e00\u4e2a\u5355\u4f4d\u7684\u7ec4\u7ec7\u673a\u6784\u7b49\u3002 - \u5728\u8fd9\u7c7b\u95ee\u9898\u4e2d\uff0c\u8ba1\u7b97\u673a\u5904\u7406\u7684\u5bf9\u8c61\u662f\u6811\u7ed3\u6784\uff0c\u5143\u7d20\u4e4b\u95f4\u662f\u4e00\u5bf9\u591a\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u65bd\u52a0\u4e8e\u5bf9\u8c61\u4e0a\u7684\u64cd\u4f5c\u6709\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u7b49\u3002 - \u8fd9\u7c7b\u6570\u5b66\u6a21\u578b\u79f0\u4e3a\u201c\u6811\u201d\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>[\u4f8b1.3\u3011  \u6700\u77ed\u8def\u5f84\u95ee\u9898 - \u4ece\u57ce\u5e02A\u5230\u57ce\u5e02B\u6709\u591a\u6761\u7ebf\u8def\uff0c\u4f46\u6bcf\u6761\u7ebf\u8def\u7684\u4ea4\u901a\u8d39\u4e0d\u540c\uff0c\u90a3\u4e48\uff0c\u5982\u4f55\u9009\u62e9\u4e00\u6761\u7ebf\u8def\uff0c\u4f7f\u5f97\u4ece\u57ce\u5e02A\u5230\u57ce\u5e02B\u7684\u4ea4\u901a\u8d39\u7528\u6700\u5c11\u5462\uff1f - \u89e3\u51b3\u7684\u65b9\u6cd5\u662f\uff0c\u53ef\u4ee5\u628a\u8fd9\u7c7b\u95ee\u9898\u62bd\u8c61\u4e3a\u56fe\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\u3002\u5982\u56fe1.2\u6240\u793a\uff0c</p> <p> - \u56fe\u4e2d\u7684\u9876\u70b9\u4ee3\u8868\u57ce\u5e02\uff0c\u6709\u5411\u8fb9\u4ee3\u8868\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u901a\u8def\uff0c\u8fb9\u4e0a\u7684\u6743\u503c\u4ee3\u8868\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u4ea4\u901a\u8d39\u3002 - \u6c42\u89e3A\u5230B\u7684\u6700\u5c11\u4ea4\u901a\u8d39\u7528\uff0c\u5c31\u662f\u8981\u5728\u6709\u5411\u56fe\u4e2dA\u70b9\uff08\u6e90\u70b9\uff09\u5230\u8fbeB\u70b9\uff08\u7ec8\u70b9\uff09\u7684\u591a\u6761\u8def\u5f84\u4e2d\uff0c\u5bfb\u627e\u4e00\u6761\u5404\u8fb9\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u7684\u8def\u5f84\uff0c\u5373\u6700\u77ed\u8def\u5f84\u3002 - \u6700\u77ed\u8def\u5f84\u95ee\u9898\u7684\u6570\u5b66\u6a21\u578b\u5c31\u662f\u56fe\u7ed3\u6784\uff0c\u7b97\u6cd5\u662f\u6c42\u89e3\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002 - \u8bf8\u5982\u6b64\u7c7b\u7684\u56fe\u7ed3\u6784\u8fd8\u6709\u7f51\u7edc\u5de5\u7a0b\u56fe\u548c\u7f51\u7edc\u901a\u4fe1\u56fe\u7b49\uff0c\u5728\u8fd9\u7c7b\u95ee\u9898\u4e2d\uff0c\u5143\u7d20\u4e4b\u95f4\u662f\u591a\u5bf9\u591a\u7684\u7f51\u72b6\u5173\u7cfb\uff0c\u65bd\u52a0\u4e8e\u5bf9\u8c61\u4e0a\u7684\u64cd\u4f5c\u4f9d\u7136\u6709\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u7b49\u3002 - \u8fd9\u7c7b\u6570\u5b66\u6a21\u578b\u79f0\u4e3a\u201c\u56fe\u201d\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u4ece\u4e0a\u9762\u4e09\u4e2a\u5b9e\u4f8b\u53ef\u4ee5\u770b\u51fa\uff0c\u975e\u6570\u503c\u8ba1\u7b97\u95ee\u9898\u7684\u6570\u5b66\u6a21\u578b\u4e0d\u518d\u662f\u6570\u5b66\u65b9\u7a0b\uff0c\u800c\u662f\u8bf8\u5982\u7ebf\u6027\u8868\u3001\u6811\u548c\u56fe\u7684\u6570\u636e\u7ed3\u6784\u3002 \u56e0\u6b64\uff0c\u7b80\u5355\u5730\u8bf4\uff0c\u6570\u636e\u7ed3\u6784\u662f\u4e00\u95e8\u7814\u7a76\u975e\u6570\u503c\u8ba1\u7b97\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u7684\u64cd\u4f5c\u5bf9\u8c61\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u64cd\u4f5c\u7684\u5b66\u79d1\u3002</p> <ul> <li>20\u4e16\u7eaa60\u5e74\u4ee3\u521d\u671f\uff0c\u201c\u6570\u636e\u7ed3\u6784\u201d\u6709\u5173\u7684\u5185\u5bb9\u6563\u89c1\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f16\u8bd1\u539f\u7406\u7b49\u8bfe\u7a0b\u4e2d\u3002</li> <li>1968\u5e74\uff0c\u6570\u636e\u7ed3\u6784\u4f5c\u4e3a\u4e00\u95e8\u72ec\u7acb\u7684\u8bfe\u7a0b\u88ab\u5217\u5165\u7f8e\u56fd\u4e00\u4e9b\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\u7684\u6559\u5b66\u8ba1\u5212\uff0c</li> <li>\u6570\u636e\u7ed3\u6784\u7684\u7814\u7a76\u4e0d\u4ec5\u6d89\u53ca\u8ba1\u7b97\u673a\u786c\u4ef6\uff08\u7279\u522b\u662f\u7f16\u7801\u7406\u8bba\u3001\u5b58\u50a8\u88c5\u7f6e\u548c\u5b58\u53d6\u65b9\u6cd5\uff09\u7684\u7814\u7a76\u8303\u56f4\uff0c\u800c\u4e14\u548c\u8ba1\u7b97\u673a\u8f6f\u4ef6\u7684\u7814\u7a76\u6709\u7740\u5bc6\u5207\u7684\u5173\u7cfb\uff0c\u65e0\u8bba\u662f\u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u64cd\u4f5c\u7cfb\u7edf\u90fd\u6d89\u53ca\u6570\u636e\u5143\u7d20\u5728\u5b58\u50a8\u5668\u4e2d\u7684\u5206\u914d\u95ee\u9898\u3002</li> <li>\u5728\u7814\u7a76\u4fe1\u606f\u68c0\u7d22\u65f6\u4e5f\u5fc5\u987b\u8003\u8651\u5982\u4f55\u7ec4\u7ec7\u6570\u636e\uff0c\u4ee5\u4f7f\u67e5\u627e\u548c\u5b58\u53d6\u6570\u636e\u5143\u7d20\u66f4\u4e3a\u65b9\u4fbf\u3002</li> <li>\u56e0\u6b64\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u6570\u636e\u7ed3\u6784\u662f\u4ecb\u4e8e\u6570\u5b66\u3001\u8ba1\u7b97\u673a\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e09\u8005\u4e4b\u95f4\u7684\u4e00\u95e8\u6838\u5fc3\u8bfe\u7a0b\u3002</li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#12","title":"1.2 \u57fa\u672c\u6982\u5ff5\u548c\u672f\u8bed","text":""},{"location":"SpecializedCourse/datastructure/xulun/#121","title":"1.2.1 \u6570\u636e\u3001\u6570\u636e\u5143\u7d20\u3001\u6570\u636e\u9879\u548c\u6570\u636e\u5bf9\u8c61","text":"<ul> <li> <p>\u6570\u636e\uff08Data\uff09\u662f\u5ba2\u89c2\u4e8b\u7269\u7684\u7b26\u53f7\u8868\u793a\uff0c\u662f\u6240\u6709\u80fd\u8f93\u5165\u5230\u8ba1\u7b97\u673a\u4e2d\u5e76\u88ab\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5904\u7406\u7684\u7b26\u53f7\u7684\u603b\u79f0\u3002</p> <ul> <li>\u5982\u6570\u5b66\u8ba1\u7b97\u4e2d\u7528\u5230\u7684\u6574\u6570\u548c\u5b9e\u6570\uff0c\u6587\u672c\u7f16\u8f91\u4e2d\u7528\u5230\u7684\u5b57\u7b26\u4e32\uff0c\u591a\u5a92\u4f53\u7a0b\u5e8f\u5904\u7406\u7684\u56fe\u5f62\u3001\u56fe\u50cf\u3001\u58f0\u97f3\u53ca\u52a8\u753b\u7b49\u901a\u8fc7\u7279\u6b8a\u7f16\u7801\u5b9a\u4e49\u540e\u7684\u6570\u636e\u3002</li> </ul> </li> <li> <p>\u6570\u636e\u5143\u7d20\uff08Data Element\uff09\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\u901a\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u8003\u8651\u548c\u5904\u7406\u3002</p> <ul> <li>\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5143\u7d20\u4e5f\u79f0\u4e3a==\u5143\u7d20==\u3001==\u8bb0\u5f55==\u7b49\u3002</li> <li>\u6570\u636e\u5143\u7d20\u7528\u4e8e\u5b8c\u6574\u5730\u63cf\u8ff0\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5982\u524d\u4e00\u8282\u793a\u4f8b\u4e2d\u7684\u4e00\u540d\u5b66\u751f\u8bb0\u5f55\uff0c\u6811\u4e2d\u68cb\u76d8\u7684\u4e00\u4e2a\u683c\u5c40\uff08\u72b6\u6001\uff09\uff0c\u4ee5\u53ca\u56fe\u4e2d\u7684\u4e00\u4e2a\u9876\u70b9\u7b49\u3002</li> </ul> </li> <li> <p>\u6570\u636e\u9879\uff08Data Item\uff09\u662f\u7ec4\u6210\u6570\u636e\u5143\u7d20\u7684\u3001\u6709\u72ec\u7acb\u542b\u4e49\u7684\u3001\u4e0d\u53ef\u5206\u5272\u7684\u6700\u5c0f\u5355\u4f4d\u3002</p> <ul> <li>\u4f8b\u5982\uff0c\u5b66\u751f\u57fa\u672c\u4fe1\u606f\u8868\u4e2d\u7684\u5b66\u53f7\u3001\u59d3\u540d\u3001\u6027\u522b\u7b49\u90fd\u662f\u6570\u636e\u9879\u3002</li> </ul> </li> <li> <p>\u6570\u636e\u5bf9\u8c61\uff08Data Object\uff09\u662f\u6027\u8d28\u76f8\u540c\u7684\u6570\u636e\u5143\u7d20\u7684==\u96c6\u5408==\uff0c\u662f\u6570\u636e\u7684\u4e00\u4e2a\u5b50\u96c6\u3002</p> <ul> <li>\u4f8b\u5982\uff1a\u6574\u6570\u6570\u636e\u5bf9\u8c61\u662f\u96c6\u5408N={0,\u00b11,\u00b12...}\uff0c</li> <li>\u5b57\u6bcd\u5b57\u7b26\u6570\u636e\u5bf9\u8c61\u662f\u96c6\u5408C={'A','B',...,'Z','a','b',...'z'}</li> <li>\u5b66\u751f\u57fa\u672c\u4fe1\u606f\u8868\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61</li> <li>\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0d\u8bba\u6570\u636e\u5143\u7d20\u96c6\u5408\u662f\u65e0\u9650\u96c6\uff08\u5982\u6574\u6570\u96c6\uff09\uff0c\u6216\u662f\u6709\u9650\u96c6\uff08\u5982\u5b57\u6bcd\u5b57\u7b26\u96c6\uff09\uff0c\u8fd8\u662f\u7531\u591a\u4e2a\u6570\u636e\u9879\u7ec4\u6210\u7684\u590d\u5408\u6570\u636e\u5143\u7d20\uff08\u5982\u5b66\u751f\u8868\uff09\u7684\u96c6\u5408\uff0c\u53ea\u8981\u96c6\u5408\u5185\u5143\u7d20\u7684\u6027\u8d28\u5747\u76f8\u540c\uff0c\u90fd\u53ef\u79f0\u4e4b\u4e3a\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\u3002</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#122","title":"1.2.2 \u6570\u636e\u7ed3\u6784","text":"<ul> <li>\u6570\u636e\u7ed3\u6784\u662f\u76f8\u4e92\u4e4b\u95f4\u5b58\u5728\u4e00\u79cd\u6216\u591a\u79cd\u7279\u5b9a\u5173\u7cfb\u7684\u6570\u636e\u5143\u7d20\u7684\u96c6\u5408\u3002</li> <li>\u6362\u53e5\u8bdd\u8bf4\uff0c\u6570\u636e\u7ed3\u6784\u662f\u5e26\u201c\u7ed3\u6784\u201d\u7684\u6570\u636e\u5143\u7d20\u7684\u96c6\u5408\uff0c\u201c\u7ed3\u6784\u201d\u5c31\u662f\u6307\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u7684\u5173\u7cfb\u3002</li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#1","title":"1.\u903b\u8f91\u7ed3\u6784","text":"<ul> <li>\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u4ece\u903b\u8f91\u5173\u7cfb\u4e0a\u63cf\u8ff0\u6570\u636e\uff0c\u5b83\u4e0e\u6570\u636e\u7684\u5b58\u50a8\u65e0\u5173\uff0c\u662f\u72ec\u7acb\u4e8e\u8ba1\u7b97\u673a\u7684\u3002</li> <li>\u56e0\u6b64\uff0c\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u53ef\u4ee5\u770b\u4f5c\u662f\u4ece\u5177\u4f53\u95ee\u9898\u62bd\u8c61\u51fa\u6765\u7684\u6570\u5b66\u6a21\u578b\u3002</li> <li>\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u6709\u4e24\u4e2a\u8981\u7d20\uff1a<ul> <li>\u6570\u636e\u5143\u7d20</li> <li>\u5173\u7cfb</li> </ul> </li> <li>\u6570\u636e\u5143\u7d20\u7684\u542b\u4e49\u5982\u524d\u6240\u8ff0\uff0c\u5173\u7cfb\u662f\u6307\u6570\u636e\u5143\u7d20\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002</li> <li>\u6839\u636e\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5173\u7cfb\u7684\u4e0d\u540c\u7279\u6027\uff0c\u901a\u5e38\u6709\u56db\u7c7b\u57fa\u672c\u7ed3\u6784\uff0c\u5982\u56fe1.3</li> <li>\u5b83\u4eec\u7684\u590d\u6742\u7a0b\u5e8f\u4f9d\u6b21\u9012\u8fdb </li> </ul> <p>\u4e0b\u9762\u56db\u79cd\u7ed3\u6784\u4e2d\u6240\u4e3e\u7684\u793a\u4f8b\u662f\u4ee5\u67d0\u73ed\u7ea7\u5b66\u751f\u4f5c\u4e3a\u6570\u636e\u5bf9\u8c61\uff08\u6570\u636e\u5143\u7d20\u662f\u5b66\u751f\u7684\u5b66\u7c4d\u6863\u6848\u8bb0\u5f55\uff09\uff0c\u6765\u5206\u522b\u8003\u5bdf\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \uff081\uff09\u96c6\u5408\u7ed3\u6784 - \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u9664\u4e86\u201c\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\u201d\u7684\u5173\u7cfb\u5916\uff0c\u522b\u65e0\u5176\u4ed6\u5173\u7cfb\u3002 - \u4f8b\u5982\uff0c\u786e\u5b9a\u4e00\u540d\u5b66\u751f\u662f\u5426\u4e3a\u73ed\u7ea7\u6210\u5458\uff0c\u53ea\u9700\u5c06\u73ed\u7ea7\u770b\u505a\u4e00\u4e2a\u96c6\u5408\u7ed3\u6784\u3002 \uff082\uff09\u7ebf\u6027\u7ed3\u6784 - \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff0c - \u4f8b\u5982\uff0c\u5c06\u5b66\u751f\u4fe1\u606f\u6570\u636e\u6309\u7167\u5176\u5165\u5b66\u62a5\u5230\u7684\u65f6\u95f4\u5148\u540e\u987a\u5e8f\u8fdb\u884c\u6392\u5217\uff0c\u5c06\u7ec4\u6210\u4e00\u4e2a\u7ebf\u6027\u7ed3\u6784\u3002 \uff083\uff09\u6811\u7ed3\u6784 - \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u3002 - \u4f8b\u5982\uff0c\u5728\u73ed\u7ea7\u7684\u7ba1\u7406\u4f53\u7cfb\u4e2d\uff0c\u73ed\u957f\u7ba1\u7406\u591a\u4e2a\u7ec4\u957f\uff0c\u6bcf\u4f4d\u7ec4\u957f\u7ba1\u7406\u591a\u540d\u7ec4\u5458\uff0c\u4ece\u800c\u6784\u6210\u6811\u5f62\u7ed3\u6784\u3002 \uff084\uff09\u56fe\u7ed3\u6784\u6216\u7f51\u72b6\u7ed3\u6784 - \u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u3002 - \u4f8b\u5982\uff0c\u591a\u4f4d\u540c\u5b66\u4e4b\u95f4\u7684\u670b\u53cb\u5173\u7cfb\uff0c\u4efb\u4f55\u4e24\u4f4d\u540c\u5b66\u90fd\u53ef\u4ee5\u662f\u670b\u53cb\uff0c\u4ece\u800c\u6784\u6210\u56fe\u72b6\u7ed3\u6784\u6216\u7f51\u72b6\u7ed3\u6784\u3002</p> <p>\u5176\u4e2d\u96c6\u5408\u7ed3\u6784\u3001\u6811\u7ed3\u6784\u548c\u56fe\u7ed3\u6784\u90fd\u5c5e\u4e8e\u975e\u7ebf\u6027\u7ed3\u6784\u3002</p> <p>\u7ebf\u6027\u7ed3\u6784\u5305\u62ec</p> <ul> <li>\u7ebf\u6027\u8868\uff08\u5178\u578b\u7684\u7ebf\u6027\u7ed3\u6784\uff0c\u5982\u4f8b1.1\u4e2d\u7684\u5b66\u751f\u57fa\u672c\u4fe1\u606f\u8868\uff09</li> <li>\u6808\u548c\u961f\u5217\uff08\u5177\u6709\u7279\u6b8a\u9650\u5236\u7684\u7ebf\u6027\u8868\uff0c\u6570\u636e\u64cd\u4f5c\u53ea\u80fd\u5728\u8868\u7684\u4e00\u7aef\u6216\u4e24\u7aef\u8fdb\u884c\uff09</li> <li>\u5b57\u7b26\u4e32\uff08\u4e5f\u662f\u7279\u6b8a\u7684\u7ebf\u6027\u8868\uff0c\u5176\u7279\u6b8a\u6027\u8868\u73b0\u5728\u5b83\u7684\u6570\u636e\u5143\u7d20\u4ec5\u7531\u4e00\u4e2a\u5b57\u7b26\u7ec4\u6210\uff09</li> <li>\u6570\u7ec4\uff08\u662f\u7ebf\u6027\u8868\u7684\u63a8\u5e7f\uff0c\u5b83\u7684\u6570\u636e\u5143\u7d20\u662f\u4e00\u4e2a\u7ebf\u6027\u8868\uff09</li> <li>\u5e7f\u4e49\u8868\uff08\u4e5f\u662f\u7ebf\u6027\u8868\u7684\u63a8\u5e7f\uff0c\u5b83\u7684\u6570\u636e\u5143\u7d20\u662f\u4e00\u4e2a\u7ebf\u6027\u8868\uff0c\u4f46\u4e0d\u540c\u6784\uff0c\u5373\u6216\u8005\u662f\u5355\u5143\u7d20\uff0c\u6216\u8005\u662f\u7ebf\u6027\u8868\uff09\u3002</li> </ul> <p>\u975e\u7ebf\u6027\u7ed3\u6784\u5305\u62ec</p> <ul> <li>\u6811\uff08\u5177\u6709\u591a\u4e2a\u5206\u652f\u7684\u5c42\u6b21\u7ed3\u6784\uff09</li> <li>\u4e8c\u53c9\u6811\uff08\u5177\u6709\u4e24\u4e2a\u5206\u652f\u7684\u5c42\u6b21\u7ed3\u6784\uff09</li> <li>\u6709\u5411\u56fe\uff08\u4e00\u79cd\u56fe\u7ed3\u6784\uff0c\u8fb9\u662f\u9876\u70b9\u7684\u6709\u5e8f\u5bf9\uff09</li> <li>\u65e0\u5411\u56fe\uff08\u53e6\u4e00\u79cd\u56fe\u7ed3\u6784\uff0c\u8fb9\u662f\u9876\u70b9\u7684\u65e0\u5e8f\u5bf9\uff09</li> </ul> <p>\u8fd9\u51e0\u79cd\u903b\u8f91\u7ed3\u6784\u53ef\u4ee5\u7528\u4e00\u4e2a\u5c42\u6b21\u56fe\u63cf\u8ff0\uff0c\u5982\u56fe1.4 </p>"},{"location":"SpecializedCourse/datastructure/xulun/#2","title":"2.\u5b58\u50a8\u7ed3\u6784","text":"<ul> <li>\u6570\u636e\u5bf9\u8c61\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u8868\u793a\u79f0\u4e3a\u6570\u636e\u7684==\u5b58\u50a8\u7ed3\u6784==\uff0c\u4e5f\u79f0\u4e3a==\u7269\u7406\u7ed3\u6784==\u3002</li> <li>\u628a\u6570\u636e\u5bf9\u8c61\u5b58\u50a8\u5230\u8ba1\u7b97\u673a\u65f6\uff0c\u901a\u5e38\u8981\u6c42\u65e2\u8981\u5b58\u50a8\u5404\u6570\u636e\u5143\u7d20\u7684\u6570\u636e\uff0c\u53c8\u8981\u5b58\u50a8\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u6570\u636e\u5143\u7d20\u5728\u8ba1\u7b97\u673a\u5185\u7528\u4e00\u4e2a\u7ed3\u70b9\u6765\u8868\u793a\u3002</li> <li>\u6570\u636e\u5143\u7d20\u5728\u8ba1\u7b97\u673a\u4e2d\u6709\u4e24\u79cd\u57fa\u672c\u7684\u5b58\u50a8\u7ed3\u6784\uff0c\u5206\u522b\u662f\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u548c\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u3002</li> </ul> <p>\uff081\uff09\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784 - \u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u662f\u501f\u52a9\u5143\u7d20\u5728\u5b58\u50a8\u5668\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u6765\u8868\u793a\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u901a\u5e38\u501f\u52a9\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u6570\u7ec4\u7c7b\u578b\u6765\u63cf\u8ff0\u3002 - \u5bf9\u4e8e\u524d\u9762\u7684\u201c\u5b66\u751f\u57fa\u672c\u4fe1\u606f\u8868\u201d\uff0c\u5047\u5b9a\u6bcf\u4e2a\u7ed3\u70b9\uff08\u5b66\u751f\u8bb0\u5f55\uff09\u5360\u752850\u4e2a\u5b58\u50a8\u5355\u5143\uff0c\u6570\u636e\u4ece0\u53f7\u5355\u5143\u5f00\u59cb\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u65b9\u5411\u5b58\u50a8\uff0c\u5bf9\u5e94\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u5982\u88681.2\u6240\u793a </p> <p>\uff082\uff09\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784 - \u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u901a\u5e38\u501f\u52a9\u4e8e\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u6307\u9488\u7c7b\u578b\u6765\u63cf\u8ff0\u3002 - \u5047\u5b9a\u7ed9\u524d\u9762\u7684\u201c\u5b66\u751f\u57fa\u672c\u4fe1\u606f\u8868\u201d\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u9644\u52a0\u4e00\u4e2a\u201c\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u5730\u5740\u201d\uff0c\u5373\u540e\u7ee7\u6307\u9488\u5b57\u6bb5\uff0c\u7528\u4e8e\u5b58\u653e\u540e\u7ee7\u7ed3\u70b9\u7684\u9996\u5730\u5740\uff0c\u5219\u53ef\u5f97\u5230\u5982\u88681.3\u6240\u793a\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u3002 </p> <ul> <li>\u4ece\u8868\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u5360\u7528\u4e24\u4e2a\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\uff0c\u4e00\u4e2a\u5b58\u653e\u7ed3\u70b9\u7684\u4fe1\u606f\uff0c\u53e6\u4e00\u4e2a\u5b58\u653e\u540e\u7ee7\u7ed3\u70b9\u7684\u9996\u5730\u5740\u3002</li> <li>\u4e3a\u4e86\u66f4\u6e05\u695a\u5730\u53cd\u6620\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\uff0c\u53ef\u91c7\u7528\u66f4\u76f4\u89c2\u7684\u56fe\u793a\u6765\u8868\u793a\uff0c\u5982\u201c\u5b66\u751f\u57fa\u672c\u4fe1\u606f\u8868\u201d\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u53ef\u7528\u5982\u56fe1.5\u6240\u793a\u7684\u65b9\u5f0f\u8868\u793a\u3002 </li> </ul> <p>\uff083\uff09\u7d22\u5f15\u5b58\u50a8 - \u5728\u5b58\u50a8\u5143\u7d20\u4fe1\u606f\u7684\u540c\u65f6\uff0c\u8fd8\u5efa\u7acb\u9644\u52a0\u7684\u7d22\u5f15\u8868 - \u7d22\u5f15\u8868\u4e2d\u7684\u6bcf\u9879\u79f0\u4e3a\u7d22\u5f15\u9879\uff0c\u7d22\u5f15\u9879\u7684\u4e00\u822c\u5f62\u5f0f\u662f\uff08\u5173\u952e\u5b57\uff0c\u5730\u5740\uff09 - \u5176\u4f18\u70b9\u662f\u68c0\u7d22\u901f\u5ea6\u5feb\uff1b\u7f3a\u70b9\u662f\u9644\u52a0\u7684\u7d22\u5f15\u8868\u989d\u5916\u5360\u7528\u5b58\u50a8\u7a7a\u95f4 - \u53e6\u5916\uff0c\u589e\u52a0\u548c\u5220\u9664\u6570\u636e\u65f6\u4e5f\u8981\u4fee\u6539\u7d22\u5f15\u8868\uff0c\u56e0\u800c\u4f1a\u82b1\u8d39\u8f83\u591a\u7684\u65f6\u95f4</p> <p>\uff084\uff09\u6563\u5217\u5b58\u50a8 - \u6839\u636e\u5143\u7d20\u7684\u5173\u952e\u5b57\u76f4\u63a5\u8ba1\u7b97\u51fa\u8be5\u5143\u7d20\u7684\u5b58\u50a8\u5730\u5740\uff0c\u53c8\u79f0\u54c8\u5e0cHash\u5b58\u50a8 - \u5176\u4f18\u70b9\u662f\u68c0\u7d22\u3001\u589e\u52a0\u548c\u5220\u9664\u8282\u70b9\u7684\u64cd\u4f5c\u90fd\u5f88\u5feb - \u7f3a\u70b9\u662f\u82e5\u6563\u5217\u51fd\u6570\u4e0d\u597d\uff0c\u5219\u53ef\u80fd\u51fa\u73b0\u5143\u7d20\u5b58\u50a8\u5355\u5143\u7684\u51b2\u7a81\uff0c\u800c\u89e3\u51b3\u51b2\u7a81\u4f1a\u589e\u52a0\u65f6\u95f4\u548c\u7a7a\u95f4\u5f00\u9500</p>"},{"location":"SpecializedCourse/datastructure/xulun/#3","title":"3. \u6570\u636e\u7684\u8fd0\u7b97","text":"<ul> <li>\u65bd\u52a0\u5728\u6570\u636e\u4e0a\u7684\u8fd0\u7b97\u5305\u62ec\u8fd0\u7b97\u7684\u5b9a\u4e49\u548c\u5b9e\u73b0</li> <li>\u8fd0\u7b97\u7684\u5b9a\u4e49\u662f\u9488\u5bf9\u903b\u8f91\u7ed3\u6784\u7684\uff0c\u6307\u51fa\u8fd0\u7b97\u7684\u529f\u80fd</li> <li>\u8fd0\u7b97\u7684\u5b9e\u73b0\u662f\u9488\u5bf9\u5b58\u50a8\u7ed3\u6784\u7684\uff0c\u6307\u51fa\u8fd0\u7b97\u7684\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4</li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#123","title":"1.2.3 \u6570\u636e\u7c7b\u578b\u548c\u62bd\u8c61\u6570\u636e\u7c7b\u578b","text":""},{"location":"SpecializedCourse/datastructure/xulun/#1_1","title":"1.\u6570\u636e\u7c7b\u578b","text":"<ul> <li> <p>\u6570\u636e\u7c7b\u578b\uff08Data type\uff09\u662f\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u6982\u5ff5\uff0c\u524d\u9762\u63d0\u5230\u8fc7\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u53ef\u4ee5\u501f\u52a9\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u6570\u7ec4\u7c7b\u578b\u63cf\u8ff0\uff0c\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u53ef\u4ee5\u501f\u52a9\u6307\u9488\u7c7b\u578b\u63cf\u8ff0\uff0c\u6240\u4ee5\u6570\u636e\u7c7b\u578b\u548c\u6570\u636e\u7ed3\u6784\u7684\u6982\u5ff5\u5bc6\u5207\u76f8\u5173\u3002</p> </li> <li> <p>\u4e00\u65b9\u9762\uff0c\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u6570\u636e\u90fd\u5c5e\u4e8e\u67d0\u79cd\u6570\u636e\u7c7b\u578b\u3002</p> </li> <li>\u7c7b\u578b\u660e\u663e\u6216\u9690\u542b\u5730\u89c4\u5b9a\u4e86\u6570\u636e\u7684\u53d6\u503c\u8303\u56f4\u3001\u5b58\u50a8\u65b9\u5f0f\u4ee5\u53ca\u5141\u8bb8\u8fdb\u884c\u7684\u8fd0\u7b97\uff0c\u6570\u636e\u7c7b\u578b\u662f\u4e00\u4e2a\u503c\u7684\u96c6\u5408\u548c\u5b9a\u4e49\u5728\u8fd9\u4e2a\u503c\u96c6\u4e0a\u7684\u4e00\u7ec4\u64cd\u4f5c\u7684\u603b\u79f0\u3002<ul> <li>\u4f8b\u5982\uff0cC\u8bed\u8a00\u4e2d\u7684\u6574\u578b\u53d8\u91cf\uff0c\u5176\u503c\u96c6\u4e3a\u67d0\u4e2a\u533a\u95f4\u4e0a\u7684\u6574\u6570\uff08\u533a\u95f4\u5927\u5c0f\u4f9d\u8d56\u4e8e\u4e0d\u540c\u7684\u673a\u5668\uff09\uff0c\u5b9a\u4e49\u5728\u5176\u4e0a\u7684\u64cd\u4f5c\u4e3a\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u548c\u53d6\u6a21\u7b49\u7b97\u672f\u8fd0\u7b97\uff1b</li> <li>\u800c\u5b9e\u578b\u53d8\u91cf\u4e5f\u6709\u81ea\u5df1\u7684\u53d6\u503c\u8303\u56f4\u548c\u76f8\u5e94\u8fd0\u7b97\uff0c\u6bd4\u5982\u53d6\u6a21\u8fd0\u7b97\u662f\u4e0d\u80fd\u7528\u4e8e\u5b9e\u578b\u53d8\u91cf\u7684\u3002</li> <li>\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u5141\u8bb8\u7528\u6237\u76f4\u63a5\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u7531\u5177\u4f53\u8bed\u8a00\u51b3\u5b9a\uff0c\u6570\u636e\u7c7b\u578b\u53cd\u6620\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u6570\u636e\u63cf\u8ff0\u548c\u5904\u7406\u80fd\u529b\u3002</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#2_1","title":"2.\u62bd\u8c61\u6570\u636e\u7c7b\u578b","text":"<ul> <li>\u62bd\u8c61\u5c31\u662f\u62bd\u53d6\u51fa\u5b9e\u9645\u95ee\u9898\u7684\u672c\u8d28\u3002\u5728\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\u6570\u636e\uff0c\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\u5219\u53ef\u7ed9\u51fa\u5404\u79cd\u6570\u636e\u7684\u5341\u8fdb\u5236\u8868\u793a\uff0c\u4ed6\u4eec\u662f\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u62bd\u8c61\uff0c\u4f7f\u7528\u8005\u5728\u7f16\u7a0b\u65f6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u4e0d\u5fc5\u8003\u8651\u5b9e\u73b0\u7ec6\u8282\u3002</li> <li> <p>\u5728\u9ad8\u7ea7\u8bed\u8a00\u4e2d\uff0c\u5219\u7ed9\u51fa\u66f4\u9ad8\u4e00\u7ea7\u7684\u62bd\u8c61\uff0c\u51fa\u73b0\u4e86\u6570\u636e\u7c7b\u578b\uff0c\u5982\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u578b\u7b49\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5229\u7528\u8fd9\u4e9b\u7c7b\u578b\u6784\u9020\u51fa\u7ebf\u6027\u8868\u3001\u6808\u3001\u961f\u5217\u3001\u6811\u3001\u56fe\u7b49\u590d\u6742\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u3002</p> </li> <li> <p>\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff08Abstract Data Type\uff0cADT\uff09\u4e00\u822c\u6307\u7531\u7528\u6237\u5b9a\u4e49\u7684\u3001\u8868\u793a\u5e94\u7528\u95ee\u9898\u7684\u6570\u5b66\u6a21\u578b\uff0c\u4ee5\u53ca\u5b9a\u4e49\u5728\u8fd9\u4e2a\u6a21\u578b\u4e0a\u7684\u4e00\u7ec4\u64cd\u4f5c\u7684\u603b\u79f0\uff0c\u5177\u4f53\u5305\u62ec\u4e09\u90e8\u5206\uff1a</p> <ul> <li>\u6570\u636e\u5bf9\u8c61</li> <li>\u6570\u636e\u5bf9\u8c61\u4e0a\u5173\u7cfb\u7684\u96c6\u5408</li> <li>\u5bf9\u6570\u636e\u5bf9\u8c61\u7684\u57fa\u672c\u64cd\u4f5c\u7684\u96c6\u5408</li> </ul> </li> </ul> <p>\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u7684\u5b9a\u4e49\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>ADT \u62bd\u8c61\u6570\u636e\u7c7b\u578b\u540d{\n  \u6570\u636e\u5bf9\u8c61:&lt;\u6570\u636e\u5bf9\u8c61\u7684\u5b9a\u4e49&gt;\n  \u6570\u636e\u5173\u7cfb:&lt;\u6570\u636e\u5173\u7cfb\u7684\u5b9a\u4e49&gt;\n  \u57fa\u672c\u64cd\u4f5c:&lt;\u57fa\u672c\u64cd\u4f5c\u7684\u5b9a\u4e49&gt;\n}ADT \u62bd\u8c61\u6570\u636e\u7c7b\u578b\u540d\n</code></pre> <p>\u5176\u4e2d\uff0c\u6570\u636e\u5bf9\u8c61\u548c\u6570\u636e\u5173\u7cfb\u7684\u5b9a\u4e49\u91c7\u7528\u6570\u5b66\u7b26\u53f7\u548c\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\uff0c\u57fa\u672c\u64cd\u4f5c\u7684\u5b9a\u4e49\u683c\u5f0f\u4e3a\uff1a</p> <pre><code>\u57fa\u672c\u64cd\u4f5c\u540d(\u53c2\u6570\u8868)\n  \u521d\u59cb\u6761\u4ef6:&lt;\u521d\u59cb\u6761\u4ef6\u63cf\u8ff0&gt;\n  \u64cd\u4f5c\u7ed3\u679c:&lt;\u64cd\u4f5c\u7ed3\u679c\u63cf\u8ff0&gt;\n</code></pre> <ul> <li>\u57fa\u672c\u64cd\u4f5c\u6709\u4e24\u79cd\u53c2\u6570\uff1a<ul> <li>\u8d4b\u503c\u53c2\u6570\u53ea\u4e3a\u64cd\u4f5c\u63d0\u4f9b\u8f93\u5165\u503c\uff1b</li> <li>\u5f15\u7528\u53c2\u6570\u4ee5\u201c&amp;\u201d\u6253\u5934\uff0c\u9664\u53ef\u63d0\u4f9b\u8f93\u5165\u503c\u5916\uff0c\u8fd8\u5c06\u8fd4\u56de\u64cd\u4f5c\u7ed3\u679c\u3002</li> </ul> </li> <li>\u201c\u521d\u59cb\u6761\u4ef6\u201d\u63cf\u8ff0\u4e86\u64cd\u4f5c\u6267\u884c\u4e4b\u524d\u6570\u636e\u7ed3\u6784\u548c\u53c2\u6570\u5e94\u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u82e5\u521d\u59cb\u6761\u4ef6\u4e3a\u7a7a\uff0c\u5219\u7701\u7565\u3002</li> <li>\u201c\u64cd\u4f5c\u7ed3\u679c\u201d\u8bf4\u660e\u4e86\u64cd\u4f5c\u6b63\u5e38\u5b8c\u6210\u4e4b\u540e\uff0c\u6570\u636e\u7ed3\u6784\u7684\u53d8\u5316\u72b6\u51b5\u548c\u8fd4\u56de\u7684\u7ed3\u679c\u3002</li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#13","title":"1.3 \u62bd\u8c61\u6570\u636e\u7c7b\u578b\u7684\u8868\u793a\u4e0e\u5b9e\u73b0","text":"<ul> <li> <p>\u8fd0\u7528\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u63cf\u8ff0\u6570\u636e\u7ed3\u6784\uff0c\u6709\u52a9\u4e8e\u5728\u8bbe\u8ba1\u4e00\u4e2a\u8f6f\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4e0d\u5fc5\u9996\u5148\u8003\u8651\u5176\u4e2d\u5305\u542b\u7684\u6570\u636e\u5bf9\u8c61\uff0c\u4ee5\u53ca\u64cd\u4f5c\u5728\u4e0d\u540c\u5904\u7406\u5668\u4e2d\u7684\u8868\u793a\u548c\u5b9e\u73b0\u7ec6\u8282\uff0c\u800c\u662f\u5728\u6784\u6210\u8f6f\u4ef6\u7cfb\u7edf\u7684\u6bcf\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u6a21\u5757\u4e0a\u5b9a\u4e49\u4e00\u7ec4\u6570\u636e\u548c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u628a\u8fd9\u4e9b\u6570\u636e\u7684\u8868\u793a\u548c\u64cd\u4f5c\u7ec6\u8282\u7559\u5728\u6a21\u5757\u5185\u90e8\u89e3\u51b3\uff0c\u5728\u66f4\u9ad8\u7684\u5c42\u6b21\u4e0a\u8fdb\u884c\u8f6f\u4ef6\u7684\u5206\u6790\u548c\u8bbe\u8ba1\uff0c\u4ece\u800c\u63d0\u9ad8\u8f6f\u4ef6\u7684\u6574\u4f53\u6027\u80fd\u548c\u5229\u7528\u7387\u3002</p> </li> <li> <p>\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u7684\u6982\u5ff5\u4e0e\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u7684\u601d\u60f3\u662f\u4e00\u81f4\u7684\u3002</p> </li> <li>\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u72ec\u7acb\u4e8e\u5177\u4f53\u5b9e\u73b0\uff0c\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u4f7f\u5f97\u7528\u6237\u7a0b\u5e8f\u53ea\u80fd\u901a\u8fc7\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u7684\u67d0\u4e9b\u64cd\u4f5c\u6765\u8bbf\u95ee\u5176\u4e2d\u7684\u6570\u636e\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u4fe1\u606f\u9690\u85cf\u3002</li> <li>\u5728C++\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u7684\u58f0\u660e\u8868\u793a\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u7528\u7c7b\u7684\u5b9e\u73b0\u6765\u5b9e\u73b0\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u3002</li> <li> <p>\u56e0\u6b64\uff0cC++\u4e2d\u5b9e\u73b0\u7684\u7c7b\u76f8\u5f53\u4e8e\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u53ca\u5176\u5728\u5b58\u50a8\u7ed3\u6784\u4e0a\u5b9e\u73b0\u7684\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u3002</p> </li> <li> <p>\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u548c\u7c7b\u7684\u6982\u5ff5\u5b9e\u9645\u4e0a\u53cd\u6620\u4e86\u7a0b\u5e8f\u6216\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u4e24\u5c42\u62bd\u8c61\uff1a</p> <ul> <li>\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u76f8\u5f53\u4e8e\u5728\u6982\u5ff5\u5c42\uff08\u6216\u79f0\u4e3a\u62bd\u8c61\u5c42\uff09\u4e0a\u63cf\u8ff0\u95ee\u9898\uff0c</li> <li>\u800c\u7c7b\u76f8\u5f53\u4e8e\u5728\u5b9e\u73b0\u5c42\u63cf\u8ff0\u95ee\u9898\u3002</li> </ul> </li> <li>\u6b64\u5916\uff0cC++\u4e2d\u7684\u7c7b\u53ea\u662f\u4e00\u4e2a\u7531\u7528\u6237\u5b9a\u4e49\u7684\u666e\u901a\u7c7b\u578b\uff0c\u53ef\u7528\u5b83\u6765\u5b9a\u4e49\u53d8\u91cf\uff08\u79f0\u4e3a\u5bf9\u8c61\u6216\u7c7b\u7684\u5b9e\u4f8b\uff09\u3002</li> <li> <p>\u56e0\u6b64\uff0c\u5728C++\u4e2d\uff0c\u6700\u7ec8\u662f\u901a\u8fc7\u64cd\u4f5c\u5bf9\u8c61\u6765\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u5c06\u8be5\u5c42\u6b21\u770b\u4f5c\u662f\u5e94\u7528\u5c42\u3002</p> <ul> <li>\u4f8b\u5982\uff0cmain\u7a0b\u5e8f\u5c31\u53ef\u770b\u4f5c\u662f\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</li> </ul> </li> <li> <p>\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u7ec8\u8868\u793a\u548c\u5b9e\u73b0\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u6700\u597d\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c</p> <ul> <li>\u6bd4\u5982\u7528C++\u8bed\u8a00\u7684\u7c7b\u63cf\u8ff0\u6bd4\u8f83\u65b9\u4fbf\u3001\u6709\u6548\uff0c\u4f46\u672c\u8bfe\u7a0b\u5927\u90fd\u5728\u5927\u5b66\u4f4e\u5e74\u7ea7\u5f00\u8bbe\uff0c\u7528C\u8bed\u8a00\u7684\u63cf\u8ff0\u65b9\u6cd5\u66f4\u7b26\u5408\u5b66\u751f\u7684\u5b9e\u9645\u60c5\u51b5\u3002</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#14","title":"1.4\u7b97\u6cd5\u548c\u7b97\u6cd5\u5206\u6790","text":""},{"location":"SpecializedCourse/datastructure/xulun/#141","title":"1.4.1 \u7b97\u6cd5\u7684\u5b9a\u4e49\u53ca\u7279\u6027","text":"<ul> <li>\u7b97\u6cd5\u662f\u4e3a\u4e86\u89e3\u51b3\u67d0\u7c7b\u95ee\u9898\u800c\u89c4\u5b9a\u7684\u4e00\u4e2a\u6709\u9650\u957f\u7684\u64cd\u4f5c\u5e8f\u5217\u3002</li> <li>\u4e00\u4e2a\u7b97\u6cd5\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e94\u4e2a\u91cd\u8981\u7279\u6027 \uff081\uff09\u6709\u7a77\u6027 \uff082\uff09\u786e\u5b9a\u6027 \uff083\uff09\u53ef\u884c\u6027 \uff084\uff09\u8f93\u5165 \uff085\uff09\u8f93\u51fa</li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#142","title":"1.4.2 \u8bc4\u4ef7\u7b97\u6cd5\u4f18\u52a3\u7684\u57fa\u672c\u6807\u51c6","text":"<ul> <li>\u6b63\u786e\u6027</li> <li>\u53ef\u8bfb\u6027</li> <li>\u5065\u58ee\u6027</li> <li>\u9ad8\u6548\u6027</li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#143","title":"1.4.3 \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u8861\u91cf\u7b97\u6cd5\u6548\u7387\u7684\u65b9\u6cd5\u4e3b\u8981\u6709\u4e24\u7c7b\uff1a<ul> <li>\u4e8b\u540e\u7edf\u8ba1\u6cd5<ul> <li>\u4e8b\u540e\u7edf\u8ba1\u6cd5\u9700\u8981\u5148\u5c06\u7b97\u6cd5\u5b9e\u73b0\uff0c\u7136\u540e\u6d4b\u7b97\u5176\u65f6\u95f4\u548c\u7a7a\u95f4\u5f00\u9500\u3002</li> <li>\u8fd9\u79cd\u65b9\u6cd5\u7684\u7f3a\u9677\u5f88\u663e\u7136\uff0c\u4e00\u662f\u5fc5\u987b\u628a\u7b97\u6cd5\u8f6c\u6362\u6210\u53ef\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u4e8c\u662f\u65f6\u7a7a\u5f00\u9500\u7684\u6d4b\u7b97\u7ed3\u679c\u4f9d\u8d56\u4e8e\u8ba1\u7b97\u673a\u7684\u8f6f\u786c\u4ef6\u7b49\u73af\u5883\u56e0\u7d20\uff0c\u8fd9\u5bb9\u6613\u63a9\u76d6\u7b97\u6cd5\u672c\u8eab\u7684\u4f18\u52a3\u3002</li> </ul> </li> <li>\u4e8b\u524d\u5206\u6790\u4f30\u7b97\u6cd5<ul> <li>\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u91c7\u7528\u4e8b\u524d\u5206\u6790\u4f30\u7b97\u6cd5\uff0c\u901a\u8fc7\u8ba1\u7b97\u7b97\u6cd5\u7684\u6e10\u8fdb\u590d\u6742\u5ea6\u6765\u8861\u91cf\u7b97\u6cd5\u7684\u6548\u7387\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#1_2","title":"1.\u95ee\u9898\u89c4\u6a21\u548c\u8bed\u53e5\u9891\u5ea6","text":"<ul> <li>\u4e0d\u8003\u8651\u8ba1\u7b97\u673a\u7684\u8f6f\u786c\u4ef6\u7b49\u73af\u5883\u56e0\u7d20\uff0c\u5f71\u54cd\u7b97\u6cd5\u65f6\u95f4\u4ee3\u4ef7\u7684\u6700\u4e3b\u8981\u56e0\u7d20\u662f\u95ee\u9898\u89c4\u6a21\u3002</li> <li>\u95ee\u9898\u89c4\u6a21\u662f\u7b97\u6cd5\u6c42\u89e3\u95ee\u9898\u8f93\u5165\u91cf\u7684\u591a\u5c11\uff0c\u662f\u95ee\u9898\u5927\u5c0f\u7684\u672c\u8d28\u8868\u793a\uff0c\u4e00\u822c\u7528\u6574\u6570n\u8868\u793a\u3002</li> <li>\u95ee\u9898\u89c4\u6a21n\u5bf9\u4e0d\u540c\u7684\u95ee\u9898\u542b\u4e49\u4e0d\u540c\uff0c<ul> <li>\u4f8b\u5982\uff0c\u5728\u6392\u5e8f\u8fd0\u7b97\u4e2dn\u4e3a\u53c2\u52a0\u6392\u5e8f\u7684\u8bb0\u5f55\u6570\uff0c</li> <li>\u5728\u77e9\u9635\u8fd0\u7b97\u4e2dn\u4e3a\u77e9\u9635\u7684\u9636\u6570\uff0c</li> <li>\u5728\u591a\u9879\u5f0f\u8ba1\u7b97\u4e2dn\u4e3a\u591a\u9879\u5f0f\u7684\u9879\u6570\uff0c</li> <li>\u5728\u96c6\u5408\u8fd0\u7b97\u4e2dn\u4e3a\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\uff0c</li> <li>\u5728\u6811\u7684\u6709\u5173\u8fd0\u7b97\u4e2dn\u4e3a\u6811\u7684\u7ed3\u70b9\u4e2a\u6570\uff0c</li> <li>\u5728\u56fe\u7684\u6709\u5173\u8fd0\u7b97\u4e2dn\u4e3a\u56fe\u7684\u9876\u70b9\u6570\u6216\u8fb9\u6570\u3002</li> <li>\u663e\u7136\uff0cn\u8d8a\u5927\u7b97\u6cd5\u7684\u6267\u884c\u65f6\u95f4\u8d8a\u957f\u3002</li> </ul> </li> <li>\u4e00\u4e2a\u7b97\u6cd5\u7684\u6267\u884c\u65f6\u95f4\u5927\u81f4\u4e0a\u7b49\u4e8e\u5176\u6240\u6709\u8bed\u53e5\u6267\u884c\u65f6\u95f4\u7684\u603b\u548c\uff0c\u800c\u8bed\u53e5\u7684\u6267\u884c\u65f6\u95f4\u5219\u4e3a\u8be5\u6761\u8bed\u53e5\u7684\u91cd\u590d\u6267\u884c\u6b21\u6570\u548c\u6267\u884c\u4e00\u6b21\u6240\u9700\u65f6\u95f4\u7684\u4e58\u79ef\u3002</li> <li>\u4e00\u6761\u8bed\u53e5\u7684\u91cd\u590d\u6267\u884c\u6b21\u6570\u79f0\u4f5c\u8bed\u53e5\u9891\u5ea6\uff08Frequency Count\uff09</li> <li>\u7531\u4e8e\u8bed\u53e5\u7684\u6267\u884c\u8981\u7531\u6e90\u7a0b\u5e8f\u7ecf\u7f16\u8bd1\u7a0b\u5e8f\u7ffb\u8bd1\u6210\u76ee\u6807\u4ee3\u7801\uff0c\u76ee\u6807\u4ee3\u7801\u7ecf\u88c5\u914d\u518d\u6267\u884c\uff0c\u56e0\u6b64\u8bed\u53e5\u6267\u884c\u4e00\u6b21\u5b9e\u9645\u6240\u9700\u7684\u5177\u4f53\u65f6\u95f4\u662f\u4e0e\u673a\u5668\u7684\u8f6f\u3001\u786c\u4ef6\u73af\u5883\uff08\u5982\u673a\u5668\u901f\u5ea6\u3001\u7f16\u8bd1\u7a0b\u5e8f\u8d28\u91cf\u7b49\uff09\u5bc6\u5207\u76f8\u5173\u7684\u3002</li> <li> <p>\u6240\u4ee5\uff0c\u6240\u8c13\u7684\u7b97\u6cd5\u5206\u6790\u5e76\u975e\u7cbe\u786e\u7edf\u8ba1\u7b97\u6cd5\u5b9e\u9645\u6267\u884c\u6240\u9700\u65f6\u95f4\uff0c\u800c\u662f\u9488\u5bf9\u7b97\u6cd5\u4e2d\u8bed\u53e5\u7684\u6267\u884c\u6b21\u6570\u505a\u51fa\u4f30\u8ba1\uff0c\u4ece\u4e2d\u5f97\u5230\u7b97\u6cd5\u6267\u884c\u65f6\u95f4\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>\u8bbe\u6bcf\u6761\u8bed\u53e5\u6267\u884c\u4e00\u6b21\u6240\u9700\u7684\u65f6\u95f4\u5747\u662f\u5355\u4f4d\u65f6\u95f4\uff0c\u5219\u4e00\u4e2a\u7b97\u6cd5\u7684\u6267\u884c\u65f6\u95f4\u53ef\u7528\u8be5\u7b97\u6cd5\u4e2d\u6240\u6709\u8bed\u53e5\u9891\u5ea6\u4e4b\u548c\u6765\u5ea6\u91cf\u3002</p> </li> </ul>"},{"location":"SpecializedCourse/datastructure/xulun/#2_2","title":"2. \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5b9a\u4e49","text":""},{"location":"SpecializedCourse/datastructure/xulun/#3_1","title":"3. \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\u4e3e\u4f8b","text":""},{"location":"SpecializedCourse/datastructure/xulun/#4","title":"4. \u6700\u597d\u3001\u6700\u574f\u548c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6","text":""},{"location":"SpecializedCourse/datastructure/xulun/#144","title":"1.4.4 \u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6","text":""},{"location":"SpecializedCourse/datastructure/xulun/#_2","title":"\u4f8b\u9898","text":"<ol> <li>\u53ef\u4ee5\u7528\uff08\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff09\u6765\u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u7ed3\u6784</li> <li> <p>\u62bd\u8c61\u6570\u636e\u7c7b\u578bADT\u63cf\u8ff0\u4e86\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u548c\u62bd\u8c61\u8fd0\u7b97\uff0c\u901a\u5e38\u7528\uff08\u6570\u636e\u5bf9\u8c61\uff0c\u6570\u636e\u5173\u7cfb\uff0c\u57fa\u672c\u64cd\u4f5c\u96c6\uff09\u8fd9\u6837\u7684\u4e09\u5143\u7ec4\u6765\u8868\u793a\uff0c\u4ece\u800c\u53ef\u6784\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49</p> </li> <li> <p>\u4ee5\u4e0b\u5c5e\u4e8e\u903b\u8f91\u7ed3\u6784\u7684\u662f\uff08\u6709\u5e8f\u8868\uff09</p> </li> <li>\u6709\u5e8f\u8868\u662f\u6307\u5173\u952e\u5b57\u6709\u5e8f\u7684\u7ebf\u6027\u8868\uff0c\u4ec5\u63cf\u8ff0\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u5b83\u65e2\u53ef\u4ee5\u94fe\u5f0f\u5b58\u50a8\uff0c\u53c8\u53ef\u4ee5\u987a\u5e8f\u5b58\u50a8\uff0c\u6240\u4ee5\u5c5e\u4e8e\u903b\u8f91\u7ed3\u6784</li> <li> <p>\u987a\u5e8f\u8868\u3001\u54c8\u5e0c\u8868\u548c\u5355\u94fe\u8868\u662f\u4e09\u79cd\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u65e2\u63cf\u8ff0\u903b\u8f91\u7ed3\u6784\uff0c\u53c8\u63cf\u8ff0\u5b58\u50a8\u7ed3\u6784\u548c\u6570\u636e\u8fd0\u7b97</p> </li> <li> <p>\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u4ece\u9762\u5411\u5b9e\u9645\u95ee\u9898\u7684\u89d2\u5ea6\u51fa\u53d1\u7684\uff0c\u53ea\u91c7\u7528\u62bd\u8c61\u8868\u8fbe\u65b9\u5f0f\uff0c\u72ec\u7acb\u4e8e\u5b58\u50a8\u7ed3\u6784\uff0c\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u6709\u591a\u79cd\u4e0d\u540c\u7684\u9009\u62e9</p> </li> <li>\u800c\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u662f\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u4e0a\u7684\u6620\u5c04\uff0c\u5b83\u4e0d\u80fd\u72ec\u7acb\u4e8e\u903b\u8f91\u7ed3\u6784\u800c\u5b58\u5728</li> <li> <p>\u6570\u636e\u7ed3\u6784\u5305\u62ec\u4e09\u4e2a\u8981\u7d20</p> <ul> <li>\u903b\u8f91\u7ed3\u6784</li> <li>\u5b58\u50a8\u7ed3\u6784</li> <li>\u6570\u636e\u7684\u8fd0\u7b97 </li> </ul> </li> <li> <p>\u5bf9\u4e8e\u4e24\u79cd\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u903b\u8f91\u7ed3\u6784\u6216\u7269\u7406\u7ed3\u6784\u4e00\u5b9a\u4e0d\u76f8\u540c\u5417\uff1f</p> <ul> <li>\u5e94\u8be5\u6ce8\u610f\u5230\uff0c\u6570\u636e\u7684\u8fd0\u7b97\u4e5f\u662f\u6570\u636e\u7ed3\u6784\u7684\u4e00\u4e2a\u91cd\u8981\u65b9\u9762</li> <li>\u5bf9\u4e8e\u4e24\u79cd\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u4eec\u7684\u903b\u8f91\u7ed3\u6784\u548c\u7269\u7406\u7ed3\u6784\u5b8c\u5168\u6709\u53ef\u80fd\u76f8\u540c</li> <li>\u6bd4\u5982\u4e8c\u53c9\u6811\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u4e8c\u53c9\u6392\u5e8f\u6811\u53ef\u4ee5\u91c7\u7528\u4e8c\u53c9\u6811\u7684\u903b\u8f91\u8868\u793a\u548c\u5b58\u50a8\u65b9\u5f0f\uff0c\u524d\u8005\u901a\u5e38\u7528\u4e8e\u8868\u793a\u5c42\u6b21\u5173\u7cfb\uff0c\u800c\u540e\u8005\u901a\u5e38\u7528\u4e8e\u6392\u5e8f\u548c\u67e5\u627e</li> <li>\u867d\u7136\u5b83\u4eec\u7684\u8fd0\u7b97\u90fd\u6709\u5efa\u7acb\u6811\u3001\u63d2\u5165\u7ed3\u70b9\u3001\u5220\u9664\u7ed3\u70b9\u548c\u67e5\u627e\u7ed3\u70b9\u7b49\u529f\u80fd\uff0c\u4f46\u5bf9\u4e8e\u4e8c\u53c9\u6811\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u7684\u5b9a\u4e49\u662f\u4e0d\u540c\u7684\uff0c\u4ee5\u67e5\u627e\u7ed3\u70b9\u4e3a\u4f8b\uff0c\u4e8c\u53c9\u6811\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u800c\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(\\(log_2\\)n)</li> </ul> </li> </ol>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/","title":"2.1 Principles of Network Applications","text":"<p>\u5f15\u7528\u4e8eComputer Networking: A Top-Down Approach  8<sup>th</sup> edition\u00a0\u00a0\u00a0n  Jim Kurose, Keith Ross Pearson, 2020     \u5f15\u7528\u4e8e\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u90d1\u70c7\u8ba1\u7b97\u673a\u7f51\u7edc\u8bfe\u4ef6     \u5f15\u7528\u4e8e\u54c8\u5c14\u6ee8\u5de5\u4e1a\u5927\u5b66\u8ba1\u7b97\u673a     \u5f15\u7528\u4e8e\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\uff1a\u5434\u529f\u5b9c\u300b</p> <ol> <li>\u7f51\u7edc\u5e94\u7528\u6709\u54ea\u4e9b\u7279\u70b9\uff1f</li> <li>\u4e0e\u5355\u673a\u5e94\u7528\u6709\u54ea\u4e9b\u672c\u8d28\u6027\u7684\u4e0d\u540c\uff1f</li> <li>\u7f51\u7edc\u5e94\u7528\u5e94\u91c7\u53d6\u4ec0\u4e48\u6837\u7684\u4f53\u7cfb\u7ed3\u6784\uff1f</li> <li>\u4ece\u4e92\u8054\u7f51\u5e94\u7528\u7cfb\u7edf\u7684\u5de5\u4f5c\u6a21\u5f0f\u89d2\u5ea6\uff0c\u7f51\u7edc\u5e94\u7528\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1aC/S\u6a21\u5f0f\u4e0eP2P\u6a21\u5f0f</li> </ol>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#_1","title":"\u7f51\u7edc\u5e94\u7528\u6a21\u578b","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#211-network-application-architectures","title":"2.1.1 Network Application Architectures","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#_2","title":"\u7f51\u7edc\u5e94\u7528\u7684\u4f53\u7cfb\u7ed3\u6784\uff08\u53ef\u80fd\u7684\u5e94\u7528\u67b6\u6784\uff09\uff1a","text":"<ol> <li>\u5ba2\u6237-\u670d\u52a1\u5668\u7ed3\u6784(client-server architecture)</li> <li>\u5bf9\u7b49\u6a21\u5f0f(p2p architecture)peer to peer</li> <li>\u6df7\u5408\u4f53\uff1a\u5ba2\u6237-\u670d\u52a1\u5668\u548c\u5bf9\u7b49\u4f53\u7cfb\u7ed3\u6784hybrid</li> </ol>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#csclient-server-paradigm","title":"C/S\u4f53\u7cfb\u7ed3\u6784(Client-server paradigm)","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#server","title":"server\uff08\u670d\u52a1\u5668\uff09:","text":"<ul> <li>always-on host\u4e00\u76f4\u8fd0\u884c</li> <li>permanent IP address\u56fa\u5b9a\u7684IP\u5730\u5740\u548c\u5468\u77e5\u7684\u7aef\u53e3\u53f7\uff08\u7ea6\u5b9a\uff09</li> <li>often in data centers, for scaling \u6269\u5c55\u6027\uff1a\u670d\u52a1\u5668\u573a\uff0c\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u6269\u5c55\uff0c\u6269\u5c55\u6027\u5dee</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#clients","title":"clients\uff08\u5ba2\u6237\u7aef\uff09:","text":"<ul> <li>contact, communicate with server\u4e3b\u52a8\u4e0e\u670d\u52a1\u5668\u901a\u4fe1</li> <li>may be intermittently connected\u4e0e\u4e92\u8054\u7f51\u6709\u95f4\u6b47\u6027\u7684\u8fde\u63a5</li> <li>may have dynamic IP addresses\u53ef\u80fd\u662f\u52a8\u6001IP\u5730\u5740</li> <li>do not communicate directly with each other\u4e0d\u76f4\u63a5\u4e0e\u5176\u5b83\u5ba2\u6237\u7aef\u901a\u4fe1</li> <li>examples:Web[[2.2 The Web and HTTP]],HTTP,IMAP,FTP</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#peer-peer-architecture","title":"peer-peer architecture","text":"<ul> <li>no always-on server\uff08\u51e0\u4e4e\uff09\u6ca1\u6709\u4e00\u76f4\u8fd0\u884c\u7684\u670d\u52a1\u5668</li> <li>arbitrary and sysyems directly communicate\u4efb\u610f\u7aef\u7cfb\u7edf\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u901a\u4fe1</li> <li>peers request service from other peers, provide service in return to other peers\u6bcf\u4e00\u4e2a\u8282\u70b9\u65e2\u662f\u5ba2\u6237\u7aef\u53c8\u662f\u670d\u52a1\u5668<ul> <li>self scalability-new peers bring new service capacity,as well as new service demands</li> <li>\u81ea\u6269\u5c55\u6027-\u65b0peer\u8282\u70b9\u5e26\u6765\u65b0\u7684\u670d\u52a1\u80fd\u529b\uff0c\u5f53\u7136\u4e5f\u5e26\u6765\u65b0\u7684\u670d\u52a1\u8bf7\u6c42\uff08\u9ad8\u5ea6\u53ef\u4f38\u7f29\uff09</li> </ul> </li> <li>peers are intermittently connected and change IP addresses\u53c2\u4e0e\u7684\u4e3b\u673a\u95f4\u6b47\u6027\u8fde\u63a5\u4e14\u53ef\u4ee5\u6539\u53d8IP\u5730\u5740<ul> <li>complex management\u96be\u4ee5\u7ba1\u7406</li> </ul> </li> <li>example:P2P file sharing [BitTorrent[[2.5 Peer-to-Peer File Distribution]]],Gnutella,\u8fc5\u96f7</li> <li>P2P\u7f51\u7edc\u662f\u5728\u4e92\u8054\u7f51\u4e0a\u6784\u5efa\u7684\u4e00\u79cd\u8986\u76d6\u7f51\uff08overlay network\uff09</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#csp2p","title":"C/S\u548cP2P\u4f53\u7cfb\u7ed3\u6784\u7684\u6df7\u5408\u4f53","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#napster","title":"Napster","text":"<ul> <li>\u6587\u4ef6\u641c\u7d22\uff1a\u96c6\u4e2d<ul> <li>\u4e3b\u673a\u5728\u4e2d\u5fc3\u670d\u52a1\u5668\u4e0a\u6ce8\u518c\u5176\u8d44\u6e90</li> <li>\u4e3b\u673a\u5411\u4e2d\u5fc3\u670d\u52a1\u5668\u67e5\u8be2\u8d44\u6e90\u4f4d\u7f6e</li> </ul> </li> <li>\u6587\u4ef6\u4f20\u8f93\uff1aP2P<ul> <li>\u4efb\u610fpeer\u8282\u70b9\u4e4b\u95f4</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#_3","title":"\u5373\u65f6\u901a\u4fe1","text":"<ul> <li>\u5728\u7ebf\u68c0\u6d4b\uff1a\u96c6\u4e2d<ul> <li>\u5f53\u7528\u6237\u4e0a\u7ebf\u65f6\uff0c\u5411\u4e2d\u5fc3\u670d\u52a1\u5668\u6ce8\u518c\u5176IP\u5730\u5740</li> <li>\u7528\u6237\u4e0e\u4e2d\u5fc3\u670d\u52a1\u5668\u8054\u7cfb\uff0c\u4ee5\u627e\u5230\u5176\u5728\u7ebf\u597d\u53cb\u7684\u4f4d\u7f6e</li> </ul> </li> <li>\u4e24\u4e2a\u7528\u6237\u4e4b\u95f4\u804a\u5929\uff1aP2P</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#_4","title":"\u5206\u5e03\u5f0f\u8fdb\u7a0b\u901a\u4fe1","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#212-processes-communicating","title":"2.1.2 Processes Communicating","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#processes-communicating","title":"processes communicating\u8fdb\u7a0b\u901a\u4fe1","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#processprogram-running-within-a-host","title":"process:program running within a host","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#_5","title":"\u8fdb\u7a0b\uff1a\u5728\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f","text":"<ul> <li>within same host,two processes communicate using inter-process communication (defined by OS)\u5728\u540c\u4e00\u4e2a\u4e3b\u673a\u5185\uff0c\u4f7f\u7528\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u901a\u4fe1\uff08\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\uff09</li> <li>processes in different hosts communicate by exchanging messages\u4e0d\u540c\u4e3b\u673a\uff0c\u901a\u8fc7\u4ea4\u6362\u62a5\u6587\uff08Message\uff09\u6765\u901a\u4fe1<ul> <li>\u4f7f\u7528OS\u63d0\u4f9b\u7684\u901a\u4fe1\u670d\u52a1</li> <li>\u6309\u7167\u5e94\u7528\u534f\u8bae\u4ea4\u6362\u62a5\u6587<ul> <li>\u501f\u52a9\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1</li> </ul> </li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#clientsservers","title":"clients,servers","text":"<ul> <li>client process:process that initiates communication<ul> <li>\u5ba2\u6237\u7aef\u8fdb\u7a0b\uff1a\u53d1\u8d77\u901a\u4fe1\u7684\u8fdb\u7a0b</li> </ul> </li> <li>server process:process that waits to be contacted<ul> <li>\u670d\u52a1\u5668\u8fdb\u7a0b\uff1a\u7b49\u5f85\u8fde\u63a5\u7684\u8fdb\u7a0b</li> </ul> </li> </ul> Note <p>applications with P2P architectures have client processes&amp;server process</p>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#the-interface-between-the-process-and-the-computer-network","title":"The Interface Between the Process and the Computer Network","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#_6","title":"\u5206\u5e03\u5f0f\u8fdb\u7a0b\u901a\u4fe1\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898","text":"<ul> <li>\u95ee\u98981\uff1a\u8fdb\u7a0b\u6807\u793a\u548c\u5bfb\u5740\u95ee\u9898\uff08\u670d\u52a1\u7528\u6237\uff09</li> <li>\u95ee\u98982\uff1a\u4f20\u8f93\u5c42-\u5e94\u7528\u5c42\u63d0\u4f9b\u670d\u52a1\u662f\u5982\u4f55\uff08\u670d\u52a1\uff09<ul> <li>\u4f4d\u7f6e\uff1a\u5c42\u95f4\u754c\u9762\u7684SAP\uff08TCP/IP: socket\uff09</li> <li>\u5f62\u5f0f\uff1a\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3API\uff08TCP/IP: socket API\uff09</li> </ul> </li> <li>\u95ee\u98983\uff1a\u5982\u4f55\u4f7f\u7528\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u5b9e\u73b0\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u7684\u62a5\u6587\u4ea4\u6362\uff0c\u5b9e\u73b0\u5e94\u7528\uff08\u7528\u6237\u4f7f\u7528\u670d\u52a1\uff09<ul> <li>\u5b9a\u4e49\u5e94\u7528\u5c42\u534f\u8bae\uff1a\u62a5\u6587\u683c\u5f0f\uff0c\u89e3\u91ca\uff0c\u65f6\u5e8f\u7b49</li> <li>\u7f16\u5236\u7a0b\u5e8f\uff0c\u4f7f\u7528OS\u63d0\u4f9b\u7684API\uff0c\u8c03\u7528\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u901a\u4fe1\u670d\u52a1\u4f20\u62a5\u6587\uff0c\u5b9e\u73b0\u5e94\u7528\u65f6\u5e8f\u7b49\uff1b</li> </ul> </li> </ul> <ul> <li>\u95ee\u98981\uff1a\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u7f16\u5740\uff08addressing\uff09</li> <li>to receive messages,process must have identifier\u8fdb\u7a0b\u4e3a\u4e86\u63a5\u6536\u62a5\u6587\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u6807\u8bc6\uff0c\u5373\uff1aSAP\uff08\u53d1\u9001\u4e5f\u9700\u8981\u6807\u8bc6\uff09<ul> <li>host device has unique 32-bit IP address\u4e3b\u673a\uff1a\u552f\u4e00\u768432\u4f4dIP\u5730\u5740<ul> <li>\u4ec5\u4ec5\u6709IP\u5730\u5740\u4e0d\u80fd\u591f\u552f\u4e00\u6807\u793a\u4e00\u4e2a\u8fdb\u7a0b\uff1b\u5728\u4e00\u53f0\u7aef\u7cfb\u7edf\u4e0a\u6709\u5f88\u591a\u5e94\u7528\u8fdb\u7a0b\u5728\u8fd0\u884c</li> </ul> </li> <li>\u6240\u91c7\u7528\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff1aTCP or UDP</li> <li>\u7aef\u53e3\u53f7\uff08Port Numbers\uff09</li> </ul> </li> <li>example port numbers\u4e00\u4e9b\u77e5\u540d\u7aef\u53e3\u53f7\u7684\u4f8b\u5b50\uff1a<ul> <li>HTTP server: TCP 80</li> <li>Mail server: TCP 25</li> <li>ftp: TCP 2</li> </ul> </li> <li>\u4e00\u4e2a\u8fdb\u7a0b\uff1a\u7528IP+port\u6807\u793a\u7aef\u8282\u70b9</li> <li>\u672c\u8d28\u4e0a\uff0c\u4e00\u5bf9\u4e3b\u673a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u75312\u4e2a\u7aef\u8282\u70b9\u6784\u6210</li> <li>to send HTTP message to gaia.cs.umass.edu web server<ul> <li>IP address: 128.119.245.12</li> <li>TCP</li> <li>port number: 80</li> </ul> </li> </ul> <ul> <li>\u95ee\u98982\uff1a\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1-\u9700\u8981\u7a7f\u8fc7\u5c42\u95f4\u7684\u4fe1\u606f</li> <li>\u5c42\u95f4\u63a5\u53e3\u5fc5\u987b\u8981\u643a\u5e26\u7684\u4fe1\u606f<ul> <li>\u8981\u4f20\u8f93\u7684\u62a5\u6587\uff08\u5bf9\u4e8e\u672c\u5c42\u6765\u8bf4\uff0cSDU\uff09</li> <li>\u8c01\u4f20\u7684\uff1a\u53cc\u65b9\u7684\u5e94\u7528\u8fdb\u7a0b\u7684\u6807\u793a\uff1aIP+TCP(UDP) \u7aef\u53e3</li> <li>\u4f20\u7ed9\u8c01\uff1a\u5bf9\u65b9\u7684\u5e94\u7528\u8fdb\u7a0b\u7684\u6807\u793a\uff1a\u5bf9\u65b9\u7684IP+TCP(UDP)\u7aef\u53e3\u53f7</li> </ul> </li> <li> <p>\u4f20\u8f93\u5c42\u5b9e\u4f53\uff08tcp\u6216\u8005udp\u5b9e\u4f53\uff09\u6839\u636e\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884cTCP\u62a5\u6587\u6bb5\uff08UDP\u6570\u636e\u62a5\uff09\u7684\u5c01\u88c5</p> <ul> <li>\u6e90\u7aef\u53e3\u53f7\uff0c\u76ee\u6807\u7aef\u53e3\u53f7\uff0c\u6570\u636e\u7b49</li> <li>\u5c06IP\u5730\u5740\u5f80\u4e0b\u4ea4IP\u5b9e\u4f53\uff0c\u7528\u4e8e\u5c01\u88c5IP\u6570\u636e\u62a5\uff1a\u6e90IP\uff0c\u76ee\u6807IP</li> </ul> </li> <li> <p>\u95ee\u98982\uff1a\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1-\u5c42\u95f4\u4fe1\u606f\u7684\u4ee3\u8868</p> </li> <li>\u5982\u679cSocket API\uff08Application Programming Interface (API)\uff09\u6bcf\u6b21\u4f20\u8f93\u62a5\u6587\uff0c\u90fd\u643a\u5e26\u5982\u6b64\u591a\u7684\u4fe1\u606f\uff0c\u592a\u7e41\u7410\u6613\u9519\uff0c\u4e0d\u4fbf\u4e8e\u7ba1\u7406</li> <li>\u7528\u4e2a\u4ee3\u53f7\u6807\u793a\u901a\u4fe1\u7684\u53cc\u65b9\u6216\u8005\u5355\u65b9\uff1asocket</li> <li>\u5c31\u50cfOS\u6253\u5f00\u6587\u4ef6\u8fd4\u56de\u7684\u53e5\u67c4\u4e00\u6837<ul> <li>\u5bf9\u53e5\u67c4\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c</li> </ul> </li> <li>TCP socket<ul> <li>TCP\u670d\u52a1\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u9700\u8981\u4e4b\u524d\u8981\u5efa\u7acb\u8fde\u63a5<ul> <li>\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u4f1a\u6301\u7eed\u4e00\u6bb5\u4e8b\u4ef6\uff0c\u901a\u4fe1\u5173\u7cfb\u7a33\u5b9a</li> </ul> </li> <li>\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u6570\u6807\u793a\u4e24\u4e2a\u5e94\u7528\u5b9e\u4f53\u4e4b\u95f4\u7684\u901a\u4fe1\u5173\u7cfb\uff0c\u672c\u5730\u6807\u793a</li> <li>\u7a7f\u8fc7\u5c42\u95f4\u63a5\u53e3\u7684\u4fe1\u606f\u6700\u5c0f</li> <li>TCP socket\uff1a\u6e90IP\uff0c\u6e90\u7aef\u53e3\uff0c\u76ee\u6807IP\uff0c\u76ee\u6807\u7aef\u53e3</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#tcpsocket","title":"TCP\u4e4b\u4e0a\u7684\u5957\u63a5\u5b57\uff08socket\uff09","text":"<ul> <li>\u5bf9\u4e8e\u4f7f\u7528\u9762\u5411\u8fde\u63a5\u670d\u52a1\uff08TCP\uff09\u7684\u5e94\u7528\u800c\u8a00\uff0c\u5957\u63a5\u5b57\u662f4\u5143\u7ec4\u7684\u4e00\u4e2a\u5177\u6709\u672c\u5730\u610f\u4e49\u7684\u6807\u793a<ul> <li>4\u5143\u7ec4\uff1a\uff08\u6e90IP\uff0c\u6e90port\uff0c\u76ee\u6807IP\uff0c\u76ee\u6807port\uff09</li> <li>\u552f\u4e00\u7684\u6307\u5b9a\u4e86\u4e00\u4e2a\u4f1a\u8bdd\uff082\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u4f1a\u8bdd\u5173\u7cfb\uff09</li> <li>\u5e94\u7528\u4f7f\u7528\u8fd9\u4e2a\u6807\u793a\uff0c\u4e0e\u8fdc\u7a0b\u7684\u5e94\u7528\u8fdb\u7a0b\u901a\u4fe1</li> <li>\u4e0d\u5fc5\u5728\u6bcf\u4e00\u4e2a\u62a5\u6587\u7684\u53d1\u9001\u90fd\u8981\u6307\u5b9a\u8fd94\u5143\u7ec4</li> <li>\u5c31\u50cf\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0cOS\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u53e5\u67c4\u4e00\u6837\uff0c\u4ee5\u540e\u4f7f\u7528\u8fd9\u4e2a\u6587\u4ef6\u53e5\u67c4\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u8fd9\u4e2a\u6587\u4ef6\u7684\u76ee\u5f55\u540d\u3001\u6587\u4ef6\u540d</li> <li>\u7b80\u5355\uff0c\u4fbf\u4e8e\u7ba1\u7406</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#ucp-socket","title":"UCP socket","text":"<ul> <li>UDP\u670d\u52a1\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u9700\u8981\u4e4b\u524d\u65e0\u9700\u5efa\u7acb\u8fde\u63a5<ul> <li>\u6bcf\u4e2a\u62a5\u6587\u90fd\u662f\u72ec\u7acb\u4f20\u8f93\u7684</li> <li>\u524d\u540e\u62a5\u6587\u53ef\u80fd\u7ed9\u4e0d\u540c\u7684\u5206\u5e03\u5f0f\u8fdb\u7a0b</li> </ul> </li> <li>\u56e0\u6b64\uff0c\u53ea\u80fd\u7528\u4e00\u4e2a\u6574\u6570\u8868\u793a\u672c\u5e94\u7528\u5b9e\u4f53\u7684\u6807\u793a<ul> <li>\u56e0\u4e3a\u8fd9\u4e2a\u62a5\u6587\u53ef\u80fd\u4f20\u7ed9\u53e6\u5916\u4e00\u4e2a\u5206\u5e03\u5f0f\u8fdb\u7a0b</li> </ul> </li> <li>\u7a7f\u8fc7\u5c42\u95f4\u63a5\u53e3\u7684\u4fe1\u606f\u5927\u5c0f\u6700\u5c0f</li> <li>UDP socket\uff1a\u672cIP\uff0c\u672c\u7aef\u53e3</li> <li>\u4f46\u662f\u4f20\u8f93\u62a5\u6587\u65f6\uff1a\u5fc5\u987b\u8981\u63d0\u4f9b\u5bf9\u65b9IP\uff0cport<ul> <li>\u63a5\u6536\u62a5\u6587\u65f6\uff0c\u4f20\u8f93\u5c42\u9700\u8981\u4e0a\u4f20\u5bf9\u65b9\u7684IP\uff0cport</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#udpsocket","title":"UDP\u4e4b\u4e0a\u7684\u5957\u63a5\u5b57\uff08socket\uff09","text":"<ul> <li>\u5bf9\u4e8e\u4f7f\u7528\u65e0\u8fde\u63a5\u670d\u52a1\uff08UDP\uff09\u7684\u5e94\u7528\u800c\u8a00\uff0c\u5957\u63a5\u5b57\u662f2\u5143\u7ec4\u7684\u4e00\u4e2a\u5177\u6709\u672c\u5730\u610f\u4e49\u7684\u6807\u793a<ul> <li>2\u5143\u7ec4\uff1aIP\uff0cport\uff08\u6e90\u7aef\u6307\u5b9a\uff09</li> <li>UDP\u5957\u63a5\u5b57\u6307\u4ee4\u6d41\u5e94\u7528\u6240\u5728\u7684\u4e00\u4e2a\u7aef\u8282\u70b9\uff08end point\uff09</li> <li>\u5728\u53d1\u9001\u6570\u636e\u62a5\u65f6\uff0c\u91c7\u7528\u521b\u5efa\u597d\u7684\u672c\u5730\u5957\u63a5\u5b57\uff08\u6807\u793aID\uff09\uff0c\u5c31\u4e0d\u5fc5\u5728\u53d1\u9001\u6bcf\u4e2a\u62a5\u6587\u4e2d\u6307\u660e\u81ea\u5df1\u6240\u91c7\u7528\u7684IP\u548cport</li> <li>\u4f46\u662f\u5728\u53d1\u9001\u62a5\u6587\u65f6\uff0c\u5fc5\u987b\u8981\u6307\u5b9a\u5bf9\u65b9\u7684ip\u548cudp port\uff08\u53e6\u5916\u4e00\u4e2a\u7aef\u8282\u70b9\uff09 </li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#sockets","title":"Sockets\u5957\u63a5\u5b57","text":"<ul> <li>peocess sends/receives messages to/from its socket\u8fdb\u7a0b\u5411\u5957\u63a5\u5b57\u53d1\u9001\u62a5\u6587\u6216\u4ece\u5957\u63a5\u5b57\u63a5\u6536\u62a5\u6587</li> <li>socket analogous to door\u5957\u63a5\u5b57&lt;-&gt;\u95e8\u6237<ul> <li>sending process shoves message out door\u53d1\u9001\u8fdb\u7a0b\u5c06\u62a5\u6587\u63a8\u51fa\u95e8\u6237</li> <li>sending process relies on transport infrastructure on other side of door to deliver message to socket at receiving process\u53d1\u9001\u8fdb\u7a0b\u4f9d\u8d56\u4e8e\u4f20\u8f93\u5c42\u8bbe\u65bd\u5728\u53e6\u5916\u4e00\u4fa7\u7684\u95e8\u5c06\u62a5\u6587\u4ea4\u4ed8\u7ed9\u63a5\u6536\u8fdb\u7a0b</li> <li>two sockets involved:one on each side</li> </ul> </li> <li>\u4f20\u8f93\u57fa\u7840\u8bbe\u65bd\u5411\u8fdb\u7a0b\u63d0\u4f9bAPI<ul> <li>\u4f20\u8f93\u534f\u8bae\u7684\u9009\u62e9</li> <li>\u53c2\u6570\u7684\u8bbe\u7f6e</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#3","title":"\u95ee\u98983\uff1a\u5982\u4f55\u4f7f\u7528\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1\u5b9e\u73b0\u5e94\u7528","text":"<ul> <li>\u5b9a\u4e49\u5e94\u7528\u5c42\u534f\u8bae\uff1a\u62a5\u6587\u683c\u5f0f\uff0c\u89e3\u91ca\uff0c\u65f6\u5e8f\u7b49</li> <li>\u7f16\u5236\u7a0b\u5e8f\uff0c\u901a\u8fc7API\u8c03\u7528\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u901a\u4fe1\u670d\u52a1\u4f20\u62a5\u6587\uff0c\u89e3\u6790\u62a5\u6587\uff0c\u5b9e\u73b0\u5e94\u7528\u65f6\u5e8f\u7b49</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#an-application-layer-protocol-defines","title":"An application-layer protocol defines:\u5e94\u7528\u5c42\u534f\u8bae","text":"<ul> <li>\u5b9a\u4e49\u4e86\uff0c\u8fd0\u884c\u5728\u4e0d\u540c\u7aef\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\u8fdb\u7a0b\u5982\u4f55\u76f8\u4e92\u4ea4\u6362\u62a5\u6587<ul> <li>types of messages exchanged\u4ea4\u6362\u7684\u62a5\u6587\u7c7b\u578b<ul> <li>e.g., request, response\u8bf7\u6c42\u548c\u5e94\u7b54\u62a5\u6587</li> </ul> </li> <li>message syntax\u5404\u79cd\u62a5\u6587\u7c7b\u578b\u7684\u8bed\u6cd5<ul> <li>what fields in messages &amp; how fields are delineated\u62a5\u6587\u4e2d\u7684\u5404\u4e2a\u5b57\u6bb5\u53ca\u5176\u63cf\u8ff0</li> </ul> </li> <li>message semantics\u5b57\u6bb5\u7684\u8bed\u4e49<ul> <li>meaning of information in fields\u5373\u5b57\u6bb5\u53d6\u503c\u7684\u542b\u4e49</li> </ul> </li> <li>rules for when and how processes send &amp; respond to messages\u8fdb\u7a0b\u4f55\u65f6\u3001\u5982\u4f55\u53d1\u9001\u62a5\u6587\u53ca\u5bf9\u62a5\u6587\u8fdb\u884c\u54cd\u5e94\u7684\u89c4\u5219</li> </ul> </li> <li>\u5e94\u7528\u534f\u8bae\u4ec5\u4ec5\u662f\u5e94\u7528\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206<ul> <li>Web\u5e94\u7528\uff1aHTTP\u534f\u8bae\uff0cweb\u5ba2\u6237\u7aef\uff0cweb\u670d\u52a1\u5668\uff0cHTML</li> </ul> </li> <li>open protocols\u516c\u5f00\u534f\u8bae<ul> <li>defined in RFCs, everyone has access to protocol definition\u7531RFC\u6587\u6863\u5b9a\u4e49</li> <li>allows for interoperability\u5141\u8bb8\u4e92\u64cd\u4f5c</li> <li>e.g., HTTP, SMTP</li> </ul> </li> <li>proprietary protocols\u4e13\u7528\uff08\u79c1\u6709\uff09\u534f\u8bae<ul> <li>e.g., Skype, Zoom</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#213-transport-services-available-to-applications","title":"2.1.3 Transport Services Available to Applications","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#what-transport-service-does-an-app-need","title":"what transport service does an app need?\uff08\u7f51\u7edc\u5e94\u7528\u7684\u670d\u52a1\u9700\u6c42\uff09","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#data-integrityreliability","title":"data integrity\u6570\u636e\u4e22\u5931\u7387reliability","text":"<ul> <li>some apps(eg.,file transfer,web transactions)require 100% reliable data transfer\u6709\u4e9b\u5e94\u7528\u5219\u8981\u6c42100%\u7684\u53ef\u9760\u6570\u636e\u4f20\u8f93\uff08\u5982\u6587\u4ef6\uff09</li> <li>other apps(e.g.,audio)can tolerate some loss\u6709\u4e9b\u5e94\u7528\uff08\u5982\u97f3\u9891\uff09\u80fd\u5bb9\u5fcd\u4e00\u5b9a\u6bd4\u4f8b\u4ee5\u4e0b\u7684\u6570\u636e\u4e22\u5931</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#throughput","title":"Throughput\u541e\u5410","text":"<ul> <li>some apps(e.g.,multimedia)require minimum amount of throughput to be \"effective\"\u4e00\u4e9b\u5e94\u7528\uff08\u5982\u591a\u5a92\u4f53\uff09\u5fc5\u987b\u9700\u8981\u6700\u5c0f\u9650\u5ea6\u7684\u541e\u5410\uff0c\u4ece\u800c\u4f7f\u5f97\u5e94\u7528\u80fd\u591f\u6709\u6548\u8fd0\u8f6c</li> <li>other apps(\"elastic apps\")make use of whatever throughput they get\u4e00\u4e9b\u5e94\u7528\u80fd\u5145\u5206\u5229\u7528\u53ef\u4f9b\u4f7f\u7528\u7684\u541e\u5410\uff08\u5f39\u6027\u5e94\u7528\uff09</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#timingdelay","title":"Timing\u5ef6\u8fdfdelay","text":"<ul> <li>some apps(sg.,Internet telephony,interactive games)require low delay to be \"effective\"\u4e00\u4e9b\u5e94\u7528\u5904\u4e8e\u6709\u6548\u6027\u8003\u8651\uff0c\u5bf9\u6570\u636e\u4f20\u8f93\u6709\u4e25\u683c\u7684\u65f6\u95f4\u9650\u5236\uff08Internet\u7535\u8bdd\u3001\u4ea4\u4e92\u5f0f\u6e38\u620f</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#security","title":"Security\u5b89\u5168\u6027","text":"<ul> <li>encryption,data integrity</li> <li>\u673a\u5bc6\u6027</li> <li>\u5b8c\u6574\u6027</li> <li>\u53ef\u8ba4\u8bc1\u6027\uff08\u9274\u522b\uff09</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#bandwidth","title":"bandwidth","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#214-transport-services-provided-by-the-internetinternet","title":"2.1.4 Transport Services Provided by the Internet\uff0cInternet\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1","text":""},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#tcp-services","title":"TCP Services","text":"<ul> <li>reliable transport between sending and receiving process</li> <li>flow control:sender won't overwhelm receiver\u6d41\u91cf\u63a7\u5236\uff0c\u53d1\u9001\u65b9\u4e0d\u4f1a\u6df9\u6ca1\u63a5\u6536\u65b9</li> <li>congestion control:throttle sender when network overloaded\u62e5\u585e\u63a7\u5236\uff0c\u5f53\u7f51\u7edc\u51fa\u73b0\u62e5\u585e\u65f6\uff0c\u80fd\u6291\u5236\u53d1\u9001\u65b9</li> <li>connection-oriented:setup required between client and server processes\u9762\u5411\u8fde\u63a5\uff0c\u8981\u6c42\u5728\u5ba2\u6237\u7aef\u8fdb\u7a0b\u548c\u670d\u52a1\u5668\u7aef\u8fdb\u7a0b\u4e4b\u95f4\u5efa\u7acb\u8fde\u63a5</li> <li>does not provide:timing,minimum throughput guarantee,security\u4e0d\u80fd\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u65f6\u95f4\u4fdd\u8bc1\uff0c\u6700\u5c0f\u541e\u5410\u4fdd\u8bc1\u548c\u5b89\u5168</li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#udp-services","title":"UDP Services","text":"<ul> <li>unreliable data transfer between sending and receiving process</li> <li>does not provide: reliability, flow control, congestion control,timing,throughput guarantee,security,or connection setup.</li> </ul> \u7279\u6b8a\u60c5\u51b5 <p>why bother?why is there a UDP?</p>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#udp","title":"UDP\u5b58\u5728\u7684\u5fc5\u8981\u6027","text":"<ul> <li>\u80fd\u591f\u533a\u5206\u4e0d\u540c\u7684\u8fdb\u7a0b\uff0c\u800cIP\u670d\u52a1\u4e0d\u80fd<ul> <li>\u5728IP\u63d0\u4f9b\u7684\u4e3b\u673a\u5230\u4e3b\u673a\u7aef\u5230\u7aef\u529f\u80fd\u7684\u57fa\u7840\u4e0a\uff0c\u533a\u5206\u4e86\u4e3b\u673a\u7684\u5e94\u7528\u8fdb\u7a0b</li> </ul> </li> <li>\u65e0\u9700\u5efa\u7acb\u8fde\u63a5\uff0c\u7701\u53bb\u4e86\u5efa\u7acb\u8fde\u63a5\u65f6\u95f4\uff0c\u9002\u5408\u4e8b\u52a1\u6027\u7684\u5e94\u7528</li> <li>\u4e0d\u505a\u53ef\u9760\u6027\u7684\u5de5\u4f5c\uff0c\u4f8b\u5982\u68c0\u9519\u91cd\u53d1\uff0c\u9002\u5408\u90a3\u4e9b\u5bf9\u5b9e\u65f6\u6027\u8981\u6c42\u6bd4\u8f83\u9ad8\u800c\u5bf9\u6b63\u786e\u6027\u8981\u6c42\u4e0d\u9ad8\u7684\u5e94\u7528<ul> <li>\u56e0\u4e3a\u4e3a\u4e86\u5b9e\u73b0\u53ef\u9760\u6027\uff08\u51c6\u786e\u6027\u3001\u4fdd\u5e8f\u7b49\uff09\uff0c\u5fc5\u987b\u4ed8\u51fa\u65f6\u95f4\u4ee3\u4ef7\uff08\u68c0\u9519\u91cd\u53d1\uff09</li> </ul> </li> <li>\u6ca1\u6709\u62e5\u585e\u63a7\u5236\u548c\u6d41\u91cf\u63a7\u5236\uff0c\u5e94\u7528\u80fd\u591f\u6309\u7167\u8bbe\u5b9a\u7684\u901f\u5ea6\u53d1\u9001\u6570\u636e<ul> <li>\u800c\u5728TCP\u4e0a\u9762\u7684\u5e94\u7528\uff0c\u5e94\u7528\u53d1\u9001\u6570\u636e\u7684\u901f\u5ea6\u548c\u4e3b\u673a\u5411\u7f51\u7edc\u53d1\u9001\u7684\u5b9e\u9645\u901f\u5ea6\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u56e0\u4e3a\u6709\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/2.1%20Principles%20of%20Network%20Applications/#_7","title":"\u7279\u5b9a\u7f51\u7edc\u5e94\u7528\u53ca\u534f\u8bae","text":""},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/","title":"2.2 The Web and HTTP","text":"<p>world wide web:Tim Berners-Lee</p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#221-overview-of-http","title":"2.2.1 Overview of HTTP","text":"<ul> <li>web page consists of objects, each of which can be stored on different Web servers</li> <li>web\u9875\u7531\u4e00\u4e9b\u5bf9\u8c61\u7ec4\u6210</li> <li>object can be HTML file, JPEG image, Java applet, audio file,\u2026</li> <li>web page consists of base HTML-file which includes several referenced objects, each addressable by a URL, e.g.,</li> <li>web\u9875\u542b\u6709\u4e00\u4e2a\u57fa\u672c\u7684HTML\u6587\u4ef6\uff0c\u8be5\u57fa\u672cHTML\u6587\u4ef6\u53c8\u5305\u542b\u82e5\u5e72\u5bf9\u8c61\u7684\u5f15\u7528\uff08\u94fe\u63a5\uff09</li> <li>\u901a\u8fc7URL(Uniform Resouce Locator)\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u8fdb\u884c\u5f15\u7528<ul> <li>\u8bbf\u95ee\u534f\u8bae\uff0c\u7528\u6237\u540d\uff0c\u53e3\u4ee4\u5b57\uff0c\u7aef\u53e3\u7b49</li> </ul> </li> <li>URL\uff08\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u5668\uff09\u683c\u5f0f\uff1a</li> </ul> <p>HTTP: hypertext transfer protocol\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae - Web\u2019s application-layer protocol - client/server model:     - client: browser that requests, receives, (using HTTP protocol) and \u201cdisplays\u201d Web objects     - server: Web server sends (using HTTP protocol) objects in response to requests - HTTP uses TCP:     - client initiates TCP connection (creates socket) to server,\u00a0 port 80     - server accepts TCP connection from client     - HTTP messages (application-layer protocol messages) exchanged between browser (HTTP client) and Web server (HTTP server)     - TCP connection closed - HTTP is \u201cstateless\u201d     - server maintains no information about past client requests - HTTP 1.0:RFC 1945 - HTTP 1.1:RFC 2068</p> <p>[!NOTE] protocols that maintain \u201cstate\u201d are complex! </p> <ul> <li>past history (state) must be maintained</li> <li>if server/client crashes, their views of \u201cstate\u201d may be inconsistent, must be reconciled</li> </ul> <p>\u65e0\u72b6\u6001\u7684\u670d\u52a1\u5668\u80fd\u591f\u652f\u6301\u66f4\u591a\u7684\u5ba2\u6237\u7aef</p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#222-http-connectionstwo-types","title":"2.2.2 HTTP Connections:two types","text":"<p>Non-persistent HTTP - 1.TCP connection opened - 2.at most one object sent over TCP connection - 3.TCP connection closed downloading multiple objects required multiple connections HTTP/1.0\u4f7f\u7528\u975e\u6301\u4e45\u8fde\u63a5</p> <p>Persistent HTTP - TCP connection opened to a server - multiple objects can be sent over single TCP connection between client, and that server - TCP connection closed HTTP/1.1\u9ed8\u8ba4\u4f7f\u7528\u6301\u4e45\u8fde\u63a5</p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#http-with-non-persistent-connections","title":"HTTP with Non-Persistent Connections","text":""},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#non-persistent-http-example","title":"Non-persistent HTTP: example","text":"<p>User enters URL:www.someSchool.edu/someDepartment/home.index (containing text, references to 10 jpeg images)</p> <p>1a. HTTP client initiates TCP connection to HTTP server (process) at www.someSchool.edu on port 80 1b. HTTP server at host www.someSchool.edu waiting for TCP connection at port 80\u00a0 \u201caccepts\u201d connection, notifying client 2.HTTP client sends HTTP request message (containing URL) into TCP connection socket. Message indicates that client wants object someDepartment/home.index 3.HTTP server receives request message, forms response message containing requested object, and sends message into its socket 4.HTTP server closes TCP connection. 5.HTTP client receives response message containing html file, displays html.\u00a0 Parsing html file, finds 10 referenced jpeg\u00a0 objects 6.Steps 1-5 repeated for each of 10 jpeg objects</p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#non-persistent-http-response-time","title":"Non-persistent HTTP: response time","text":"<p>RTT (definition): time for a small packet to travel from client to server and back \u5f80\u8fd4\u65f6\u95f4RTT\uff08round-trip time\uff09\uff1a\u4e00\u4e2a\u5c0f\u7684packet\u4ece\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\uff0c\u518d\u56de\u5230\u5ba2\u6237\u7aef\u7684\u65f6\u95f4\uff08\u4f20\u8f93\u65f6\u95f4\u5ffd\u7565\uff09</p> <p>HTTP response time (per object): - one RTT to initiate TCP connection - one RTT for HTTP request and first few bytes of HTTP response to return - object/file transmission time</p> <p>Non-persistent HTTP response time =\u00a0 2RTT+ file transmission\u00a0 time</p> <p></p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#http-with-persistent-connections","title":"HTTP with Persistent Connections","text":"<p>Non-persistent HTTP issues: - requires 2 RTTs per object - OS overhead for each TCP connection - browsers often open multiple parallel TCP connections to fetch referenced objects in parallel</p> <p>Persistent\u00a0 HTTP (HTTP1.1): - server leaves connection open after sending response - subsequent HTTP messages\u00a0 between same client/server sent over open connection - client sends requests as soon as it encounters a referenced object - as little as one RTT for all the referenced objects (cutting response time in half)\u5bf9\u4e8e\u6240\u6709\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u53ea\u9700\u4e00\u4e2aRTT(\u5c06\u54cd\u5e94\u65f6\u95f4\u7f29\u77ed\u4e00\u534a)</p> <p>\u975e\u6d41\u6c34\u65b9\u5f0f(without pipelining)\u7684\u6301\u4e45HTTP - \u5ba2\u6237\u7aef\u53ea\u80fd\u5728\u6536\u5230\u524d\u4e00\u4e2a\u54cd\u5e94\u540e\u624d\u80fd\u53d1\u51fa\u65b0\u7684\u8bf7\u6c42 - \u6bcf\u4e2a\u5f15\u7528\u5bf9\u8c61\u82b1\u8d39\u4e00\u4e2aRTT</p> <p>\u6d41\u6c34\u65b9\u5f0f(pipelining)\u7684\u6301\u4e45HTTP - HTTP/1.1\u7684\u9ed8\u8ba4\u6a21\u5f0f - \u5ba2\u6237\u7aef\u9047\u5230\u4e00\u4e2a\u5f15\u7528\u5bf9\u8c61\u5c31\u7acb\u5373\u4ea7\u751f\u4e00\u4e2a\u8bf7\u6c42 - \u6240\u6709\u5f15\u7528\uff08\u5c0f\uff09\u5bf9\u8c61\u53ea\u82b1\u8d39\u4e00\u4e2aRTT\u662f\u53ef\u80fd\u7684</p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#223-http-message-format","title":"2.2.3 HTTP Message Format","text":""},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#http-request-message","title":"HTTP Request Message","text":"<p>two types of HTTP messages: request, response - HTTP request message: - ASCII (human-readable format)</p> <p>GET /somedir/page.html HTTP/1.1 Host: www.someschool.edu Connection: close User-agent: Mozilla/5.0 Accept-language: fr</p> <p> request line (GET, POST,HEAD commands) carriage return character  line-feed character carriage return, line feed at start of line indicates end of header lines</p> <p></p> <p>POST method: - web page often includes form input\u7f51\u9875\u7ecf\u5e38\u586b\u5199\u8868\u683c - user input sent from client to server in entity body of HTTP POST request message GET method (for sending data to server): - include user data in URL field of HTTP GET request message (following a \u2018?\u2019): www.somesite.com/animalsearch?monkeys&amp;banana HEAD method: - requests headers (only) that would be returned if specified URL were requested\u00a0 with an HTTP GET method. - \u8bf7Server\u4e0d\u8981\u5c06\u6240\u8bf7\u6c42\u7684\u5bf9\u8c61\u653e\u5165\u54cd\u5e94\u6d88\u606f\u4e2d PUT method: - uploads new file (object) to server - completely replaces file that exists at specified URL with content in entity body of POST HTTP request message - \u5c06\u6d88\u606f\u4f53\u4e2d\u7684\u6587\u4ef6\u4e0a\u4f20\u5230URL\u5b57\u6bb5\u6240\u6307\u5b9a\u7684\u8def\u5f84 DELETE - \u5220\u9664URL\u5b57\u6bb5\u6240\u6307\u5b9a\u7684\u6587\u4ef6</p> <p>HTTP/1.0 - GET - POST - HEAD HTTP/1.1 - GET - POST - HEAD - PUT - DELETE</p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#http-response-message","title":"HTTP Response Message","text":"<p>HTTP/1.1 200 OK Connection: close Date: Tue, 18 Aug 2015 15:44:04 GMT Server: Apache/2.2.3 (CentOS) Last-Modified: Tue, 18 Aug 2015 15:11:03 GMT Content-Length: 6821 Content-Type: text/html (data data data data data ...)</p> <p>status line (protocol status code status phrase)</p> <p></p> <p></p> <p>HTTP response status codes - status code appears in 1<sup>st</sup> line in server-to-client response message. - some sample codes:     - 200 OK         - request succeeded, requested object later in this message     - 301 Moved Permanently         - requested object moved, new location specified later in this message (in Location: field)         - \u5ba2\u6237\u7aef\u8f6f\u4ef6\u81ea\u52a8\u7528\u65b0\u7684URL\u53bb\u83b7\u53d6\u5bf9\u8c61     - 400 Bad Request         - request msg not understood by server     - 404 Not Found         - requested document not found on this server     - 505 HTTP Version Not Supported</p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#224-user-server-interaction-cookies","title":"2.2.4 User-Server Interaction: Cookies","text":"<p>Maintaining user/server state: cookies</p> <p>Recall:\u00a0 HTTP GET/response interaction is stateless - no notion of multi-step exchanges of HTTP messages to complete a Web \u201ctransaction\u201d\u6ca1\u6709HTTP\u6d88\u606f\u7684\u591a\u6b65\u4ea4\u6362\u4ee5\u5b8c\u6210Web\u201c\u4e8b\u52a1\u201d\u7684\u6982\u5ff5\u3002     - no need for client/server to track \u201cstate\u201d of multi-step exchange\u4e0d\u9700\u8981\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u8ddf\u8e2a\u591a\u6b65\u4ea4\u6362\u7684\u201c\u72b6\u6001\u201d     - all HTTP requests are independent of each other\u6240\u6709\u7684HTTP\u8bf7\u6c42\u76f8\u4e92\u72ec\u7acb     - no need for client/server to \u201crecover\u201d from a partially-completed-but-never-completely-completed transaction\u5ba2\u6237\u673a/\u670d\u52a1\u5668\u4e0d\u9700\u8981\u4ece\u90e8\u5206\u5b8c\u6210\u4f46\u4ece\u672a\u5b8c\u5168\u5b8c\u6210\u7684\u4e8b\u52a1\u4e2d\u201c\u6062\u590d\u201d</p> <p>[!question] what happens if network connection or client crashes at t\u2019 ? a stateful protocol: client makes two changes to X, or none at all</p> <p>Web sites and client browser\u00a0use cookies to maintain some state between transactions</p> <p>four components:</p> <p>1) cookie header line of HTTP response message</p> <p>2) cookie header line in next HTTP request message</p> <p>3) cookie file kept on user\u2019s host, managed by user\u2019s browser</p> <p>4) back-end database at Web site</p> <p>Example: - Susan uses browser on laptop, visits specific e-commerce site for first time - when initial HTTP requests arrives at site, site creates:     - unique ID (aka \u201ccookie\u201d)     - entry in backend database for ID - subsequent HTTP requests from Susan to this site will contain cookie ID value, allowing site to \u201cidentify\u201d Susan</p> <p></p> <p>HTTP cookies: comments</p> <p>What cookies can be used for: - authorization - shopping carts - recommendations - user session state (Web e-mail) Challenge: How to keep state? - at protocol endpoints: maintain state at sender/receiver over multiple transactions - in messages: cookies in HTTP messages carry state cookies and privacy: - cookies permit sites to learn a lot about you on their site. - third party persistent cookies (tracking cookies) allow common identity (cookie value) to be tracked across multiple web sites\u7b2c\u4e09\u65b9\u6301\u4e45cookie(\u8ddf\u8e2acookie)\u5141\u8bb8\u8de8\u591a\u4e2a\u7f51\u7ad9\u8ddf\u8e2a\u516c\u5171\u8eab\u4efd(cookie\u503c)</p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#225-web-cachingproxy-server","title":"2.2.5 Web Caching(proxy server)","text":"<p>Goal: satisfy client requests without involving origin server - user configures browser to point to a (local) Web cache - browser sends all HTTP requests to cache     - if object in cache: cache returns object to client     - else cache requests object from origin server, caches received object, then returns object to client</p> <p></p> <p>Web caches (aka proxy servers) - Web cache acts as both client and server     - server for original requesting client     - client to origin server - server tells cache about object\u2019s allowable caching in response header:     - Cache-Control: max-age=&lt; seconds&gt;     - Cache-Control: no-cache</p> <p>Why Web caching? - reduce response time for client request     - cache is closer to client - reduce traffic on an institution\u2019s access link - Internet is dense with caches     - enables \u201cpoor\u201d content providers to more effectively deliver content</p> <p>Caching example Scenario: - access link rate: 1.54 Mbps - RTT from institutional router to server: 2 sec - web object size: 100K bits - average request rate from browsers to origin servers: 15/sec     - avg data rate to browsers: 1.50 Mbps</p> <p>Performance: - access link utilization = .97 - LAN utilization: .0015 - end-end delay\u00a0 =\u00a0 Internet delay + access link delay + LAN delay =\u00a0 2 sec + minutes + usecs problem: large queueing delays at high utilization!</p> <p>Option 1: buy a faster access link Cost: faster access link (expensive!)</p> <p></p> <p>Option 2: install a web cache How to compute link utilization, delay?</p> <p></p>"},{"location":"SpecializedCourse/internet/2.2%20The%20Web%20and%20HTTP/#the-conditional-get","title":"The Conditional GET","text":"<p>Browser caching: Conditional GET</p> <ul> <li>Goal: don\u2019t send object if browser has up-to-date cached version<ul> <li>no object transmission delay (or use of network resources)</li> </ul> </li> <li>client: specify date of browser-cached copy in HTTP request<ul> <li>If-modified-since: &lt; date&gt;</li> </ul> </li> <li>server: response contains no object if browser-cached copy is up-to-date:<ul> <li>HTTP/1.0 304 Not Modified</li> </ul> </li> </ul> <p></p>"},{"location":"SpecializedCourse/internet/2.3%20Electronic%20Mail%20in%20the%20Internet/","title":"2.3 Electronic Mail in the Internet","text":"<p>Three major components: - user agents - mail servers - Simple Mail Transfer Protocol : SMTP</p> <p>User Agent - a.k.a. \u201cmail reader\u201d - composing, editing, reading mail messages - e.g., Outlook, iPhone mail client - outgoing, incoming messages stored on server</p> <p>mail servers: - mailbox contains incoming messages for user - message queue of outgoing (to be sent) mail messages</p> <p>SMTP protocol between mail servers to send email messages - client: sending mail server - \u201cserver\u201d: receiving mail server</p>"},{"location":"SpecializedCourse/internet/2.3%20Electronic%20Mail%20in%20the%20Internet/#231-smtp","title":"2.3.1 SMTP","text":"<p>SMTP RFC (5321) - uses TCP to reliably transfer email message from client (mail server initiating connection) to server, port 25     - direct transfer: sending server (acting like client) to receiving server - three phases of transfer     - SMTP handshaking (greeting)     - SMTP transfer of messages     - SMTP closure - command/response interaction (like HTTP)     - commands: ASCII text     - response: status code and phrase</p> <p></p> <p>Scenario: Alice sends e-mail to Bob 1) Alice uses UA(user agent) to compose e-mail message \u201cto\u201d bob@someschool.edu 2) Alice\u2019s UA sends message to her mail server using SMTP; message placed in message queue 3) client side of SMTP at mail server opens TCP connection with Bob\u2019s mail server 4) SMTP client sends Alice\u2019s message over the TCP connection 5) Bob\u2019s mail server places the message in Bob\u2019s mailbox 6) Bob invokes his user agent to read message</p> <p>Sample SMTP interaction S: 220 hamburger.edu C: HELO crepes.fr S: 250 Hello crepes.fr, pleased to meet you C: MAIL FROM: alice@crepes.fr S: 250 alice@crepes.fr... Sender ok C: RCPT TO: bob@hamburger.edu S: 250 bob@hamburger.edu ... Recipient ok C: DATA S: 354 Enter mail, end with \".\" on a line by itself C: Do you like ketchup? C: How about pickles? C: . S: 250 Message accepted for delivery C: QUIT S: 221 hamburger.edu closing connection</p> <p>SMTP: observations</p> <p>comparison with HTTP: - HTTP: client pull - SMTP: client push - both have ASCII command/response interaction, status codes - HTTP: each object encapsulated in its own response message - SMTP: multiple objects sent in multipart message</p> <ul> <li>SMTP uses persistent connections</li> <li>SMTP requires message (header &amp; body) to be in 7-bit ASCII</li> <li>SMTP server uses CRLF.CRLF to determine end of message</li> </ul>"},{"location":"SpecializedCourse/internet/2.3%20Electronic%20Mail%20in%20the%20Internet/#232-mail-message-formats","title":"2.3.2 Mail Message Formats","text":"<p>SMTP: protocol for exchanging e-mail messages, defined in RFC 5321 (like RFC 7231 defines HTTP) RFC 2822 defines syntax for e-mail message itself (like HTML defines syntax for web documents)</p> <p></p> <ul> <li>header lines, e.g.,<ul> <li>To:</li> <li>From:</li> <li>Subject: these lines, within the body of the email message area different from SMTP MAIL FROM:, RCPT TO: commands!</li> </ul> </li> <li>Body: <ul> <li>the \u201cmessage\u201d , ASCII characters only</li> </ul> </li> </ul> <p>\u62a5\u6587\u683c\u5f0f\uff1a\u591a\u5a92\u4f53\u6269\u5c55(Multipurpose Internet Mail Extension) - MIME\uff1a\u591a\u5a92\u4f53\u90ae\u4ef6\u6269\u5c55\uff08multimedia mail extension\uff09, RFC 2045,2056 - \u5728\u62a5\u6587\u9996\u90e8\u7528\u989d\u5916\u7684\u884c\u58f0\u660eMIME\u5185\u5bb9\u7c7b\u578b</p> <p>From: alice@crepes.fr To: bob@hamburger.edu Subject: Picture of yummy crepe. MIME-Version: 1.0 Content-Transfer-Encoding: base64 Content-Type: image/jpeg base64 encoded data ..... ......................... ......base64 encoded data</p>"},{"location":"SpecializedCourse/internet/2.3%20Electronic%20Mail%20in%20the%20Internet/#233-mail-access-protocols","title":"2.3.3 Mail Access Protocols","text":"<p>Retrieving email: mail access protocols - SMTP: delivery/storage of e-mail messages to receiver\u2019s server - mail access protocol: retrieval from server     - POP\uff1a\u90ae\u5c40\u8bbf\u95ee\u534f\u8bae\uff08Post Office Protocol\uff09[RFC 1939]         - \u7528\u6237\u8eab\u4efd\u786e\u8ba4\uff08\u4ee3\u7406\u2194\u670d\u52a1\u5668\uff09\u5e76\u4e0b\u8f7d     - IMAP: Internet Mail Access Protocol [RFC 3501]: messages stored on server, IMAP provides retrieval, deletion, folders of stored messages on server - HTTP: gmail, Hotmail, Yahoo!Mail, etc. provides web-based interface on top of STMP (to send), IMAP (or POP) to retrieve e-mail messages</p> <p>POP3\u534f\u8bae</p> <p>\u7528\u6237\u786e\u8ba4\u9636\u6bb5 S: +OK POP3 server ready C: user bob S: +OK C: pass hungry S: +OK user successfully logged on</p> <p>\u4e8b\u7269\u5904\u7406\u9636\u6bb5 C: list S: 1 498 S: 2 912 S: . C: retr 1 S:  S: . C: dele 1 C: retr 2 S:  S: . C: dele 2 C: quit S: +OK POP3 server signing off <p>\u7528\u6237\u786e\u8ba4\u9636\u6bb5 - \u5ba2\u6237\u7aef\u547d\u4ee4     - user\uff1a\u58f0\u660e\u7528\u6237\u540d     - pass\uff1a\u53e3\u4ee4 - \u670d\u52a1\u5668\u54cd\u5e94     - +OK     - -ERR \u4e8b\u7269\u5904\u7406\u9636\u6bb5\uff0c\u5ba2\u6237\u7aef\uff1a - List\uff1a\u62a5\u6587\u6bb5\u5217\u8868 - retr\uff1a\u6839\u636e\u62a5\u6587\u53f7\u68c0\u7d22\u62a5\u6587 - dele\uff1a\u5220\u9664 - quit</p> <p>POP3\u4e0eIMAP POP3 - \u5148\u524d\u7684\u4f8b\u5b50\u4f7f\u7528\u201c\u4e0b\u8f7d\u5e76\u5220\u9664\u201d\u6a21\u5f0f     - \u5982\u679c\u6539\u53d8\u5ba2\u6237\u673a\uff0cBob\u4e0d\u80fd\u9605\u8bfb\u90ae\u4ef6 - \u4e0b\u8f7d\u5e76\u4fdd\u7559\uff1a\u4e0d\u540c\u5ba2\u6237\u673a\u4e0a\u4e3a\u62a5\u6587\u7684\u62f7\u8d1d - POP3\u5728\u4f1a\u8bdd\u4e2d\u662f\u65e0\u72b6\u6001\u7684 \u672c\u5730\u7ba1\u7406\u6587\u4ef6\u5939</p> <p>IMAP - \u6240\u6709\u6d88\u606f\u7edf\u4e00\u4fdd\u5b58\u5728\u4e00\u4e2a\u5730\u65b9\uff1a\u670d\u52a1\u5668 - IMAP\u670d\u52a1\u5668\u5c06\u6bcf\u4e2a\u62a5\u6587\u4e0e\u4e00\u4e2a\u6587\u4ef6\u5939\u8054\u7cfb\u8d77\u6765 - \u5141\u8bb8\u7528\u6237\u7528\u76ee\u5f55\u6765\u7ec4\u7ec7\u62a5\u6587 - \u5141\u8bb8\u7528\u6237\u8bfb\u53d6\u62a5\u6587\u7ec4\u4ef6 - IMAP\u5728\u4f1a\u8bdd\u8fc7\u7a0b\u4e2d\u4fdd\u7559\u7528\u6237\u72b6\u6001\uff1a     - \u76ee\u5f55\u540d\u3001\u62a5\u6587ID\u4e0e\u76ee\u5f55\u540d\u4e4b\u95f4\u6620\u5c04 \u8fdc\u7a0b\u7ba1\u7406\u6587\u4ef6\u5939</p>"},{"location":"SpecializedCourse/internet/2.4%20DNS---The%20Internet%27s%20Directory%20Service/","title":"2.4 DNS---The Internet's Directory Service","text":"<p>hostname IP address</p> <p>DNS: Domain Name System - people: many identifiers:     - SSN, name, passport # - Internet hosts, routers:     - IP address (32 bit) - used for addressing datagrams     - \u201cname\u201d, e.g., cs.umass.edu - used by humans</p> <p>Q: how to map between IP address and name, and vice versa ?</p> <p>DNS\u7684\u5fc5\u8981\u6027 - IP\u5730\u5740\u6807\u8bc6\u4e3b\u673a\u3001\u8def\u7531\u5668 - \u4f46IP\u5730\u5740\u4e0d\u597d\u8bb0\u5fc6\uff0c\u4e0d\u4fbf\u4e8e\u4eba\u7c7b\u4f7f\u7528\uff08\u6ca1\u6709\u610f\u4e49\uff09 - \u4eba\u7c7b\u4e00\u822c\u503e\u5411\u4e8e\u4f7f\u7528\u4e00\u4e9b\u6709\u610f\u4e49\u7684\u5b57\u7b26\u4e32\u6765\u6807\u8bc6Internet\u4e0a\u7684\u8bbe\u5907 \u4f8b\u5982\uff1a qzheng@ustc.edu.cn \u6240\u5728\u7684\u90ae\u4ef6\u670d\u52a1\u5668\uff0cwww.ustc.edu.cn \u6240\u5728\u7684web\u670d\u52a1\u5668 - \u5b58\u5728\u7740\u201c\u5b57\u7b26\u4e32\u201d-IP\u5730\u5740\u7684\u8f6c\u6362\u7684\u5fc5\u8981\u6027 - \u4eba\u7c7b\u7528\u6237\u63d0\u4f9b\u8981\u8bbf\u95ee\u673a\u5668\u7684\u201c\u5b57\u7b26\u4e32\u201d\u540d\u79f0 - \u7531DNS\u8d1f\u8d23\u8f6c\u6362\u6210\u4e3a\u4e8c\u8fdb\u5236\u7684\u7f51\u7edc\u5730\u5740</p> <p>DNS\u7cfb\u7edf\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898 - \u95ee\u98981\uff1a\u5982\u4f55\u547d\u540d\u8bbe\u5907(\u57df\u540d\u7a7a\u95f4)     - \u7528\u6709\u610f\u4e49\u7684\u5b57\u7b26\u4e32\uff1a\u597d\u8bb0\uff0c\u4fbf\u4e8e\u4eba\u7c7b\u7528\u4f7f\u7528     - \u89e3\u51b3\u4e00\u4e2a\u5e73\u9762\u547d\u540d\u7684\u91cd\u540d\u95ee\u9898\uff1a\u5c42\u6b21\u5316\u547d\u540d - \u95ee\u98982\uff1a\u5982\u4f55\u5b8c\u6210\u540d\u5b57\u5230IP\u5730\u5740\u7684\u8f6c\u6362(\u57df\u540d\u89e3\u6790\u7a0b\u5e8f(\u57df\u540d\u670d\u52a1\u5668))     - \u5206\u5e03\u5f0f\u7684\u6570\u636e\u5e93\u7ef4\u62a4\u548c\u54cd\u5e94\u540d\u5b57\u67e5\u8be2 - \u95ee\u98983\uff1a\u5982\u4f55\u7ef4\u62a4\uff1a\u589e\u52a0\u6216\u8005\u5220\u9664\u4e00\u4e2a\u57df\uff0c\u9700\u8981\u5728\u57df\u540d\u7cfb\u7edf\u4e2d\u505a\u54ea\u4e9b\u5de5\u4f5c</p> <p>DNS\u7684\u5386\u53f2 - ARPANET\u7684\u540d\u5b57\u89e3\u6790\u89e3\u51b3\u65b9\u6848     - \u4e3b\u673a\u540d\uff1a\u6ca1\u6709\u5c42\u6b21\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5e73\u9762\uff09     - \u5b58\u5728\u7740\u4e00\u4e2a\uff08\u96c6\u4e2d\uff09\u7ef4\u62a4\u7ad9\uff1a\u7ef4\u62a4\u7740\u4e00\u5f20\u4e3b\u673a\u540d-IP\u5730\u5740\u7684\u6620\u5c04\u6587\u4ef6\uff1aHosts.tet     - \u6bcf\u53f0\u4e3b\u673a\u5b9a\u65f6\u4ece\u7ef4\u62a4\u7ad9\u53d6\u6587\u4ef6 - ARPANET\u89e3\u51b3\u65b9\u6848\u7684\u95ee\u9898     - \u5f53\u7f51\u7edc\u4e2d\u4e3b\u673a\u6570\u91cf\u5f88\u5927\u65f6         - \u6ca1\u6709\u5c42\u6b21\u7684\u4e3b\u673a\u540d\u79f0\u5f88\u96be\u5206\u914d         - \u6587\u4ef6\u7684\u7ba1\u7406\u3001\u5206\u5e03\u3001\u67e5\u627e\u90fd\u5f88\u9ebb\u70e6</p> <p>[!question] Q: Why not centralize DNS? single point of failure traffic volume distant centralized database maintenance</p> <p>A: doesn\u2018t scale! - Comcast DNS servers alone: 600B DNS queries/day - Akamai DNS servers alone: 2.2T DNS queries/day</p> <p>DNS\u603b\u4f53\u601d\u8def\u548c\u76ee\u6807 - DNS\u7684\u4e3b\u8981\u601d\u8def     - \u5206\u5c42\u7684\u3001\u57fa\u4e8e\u57df\u7684\u547d\u540d\u673a\u5236     - \u82e5\u5e72\u5206\u5e03\u5f0f\u7684\u6570\u636e\u5e93\u5b8c\u6210\u540d\u5b57\u5230IP\u5730\u5740\u7684\u8f6c\u6362     - \u8fd0\u884c\u5728UDP\u4e4b\u4e0a\u7aef\u53e3\u53f7\u4e3a53\u7684\u5e94\u7528\u670d\u52a1     - distributed database implemented in hierarchy of many name servers     - application-layer protocol: hosts, DNS servers communicate to resolve names (address/name translation)         - note: core Internet function, implemented as application-layer protocol         - complexity at network\u2019s \u201cedge\u201d</p>"},{"location":"SpecializedCourse/internet/2.4%20DNS---The%20Internet%27s%20Directory%20Service/#241-services-provided-by-dns","title":"2.4.1 Services Provided by DNS","text":"<p>DNS: services, structure</p> <p>DNS services: - hostname-to-IP-address translation - Host aliasing\u4e3b\u673a\u540d\u5b57\u5230\u89c4\u8303\u540d\u5b57\u7684\u8f6c\u6362     - canonical, alias names - Mail server aliasing\u90ae\u4ef6\u670d\u52a1\u5668\u522b\u540d\u5230\u90ae\u4ef6\u670d\u52a1\u5668\u6b63\u89c4\u540d\u5b57\u7684\u8f6c\u6362 - Load distribution     - replicated Web servers: many IP addresses correspond to one name</p>"},{"location":"SpecializedCourse/internet/2.4%20DNS---The%20Internet%27s%20Directory%20Service/#242-overview-of-how-dns-works","title":"2.4.2 Overview of How DNS Works","text":"<p>Thinking about the DNS - humongous distributed database:     - ~ billion records, each simple - handles many trillions of queries/day:     - many more reads than writes     - performance matters:\u00a0 almost every Internet transaction interacts with DNS - msecs count! - organizationally, physically decentralized:     - millions of different organizations responsible for their records - \u201cbulletproof\u201d: reliability, security</p>"},{"location":"SpecializedCourse/internet/2.4%20DNS---The%20Internet%27s%20Directory%20Service/#a-distributed-hierarchical-database","title":"A Distributed, Hierarchical Database","text":"<ul> <li>Root DNS servers</li> <li>Top-level domain(TLD) servers</li> <li>Authoritative DNS servers</li> </ul> <p>Client wants IP address for www.amazon.com; 1<sup>st</sup> approximation: - client queries root server to find .com DNS server - client queries .com DNS server to get amazon.com DNS server - client queries amazon.com DNS server to get\u00a0 IP address for www.amazon.com</p> <p></p> <p>DNS: root name servers - official, contact-of-last-resort by name servers that can not resolve name - incredibly important Internet function     - Internet couldn\u2019t function without it!     - DNSSEC \u2013 provides security (authentication, message integrity) - ICANN (Internet Corporation for Assigned Names and Numbers) manages root DNS domain 13 logical root name \u201cservers\u201d worldwide each \u201cserver\u201d replicated many times (~200 servers in US)</p> <p>Top-Level Domain, and authoritative servers Top-Level Domain (TLD) servers: - responsible for .com, .org, .net, .edu, .aero, .jobs, .museums, and all top-level country domains, e.g.: .cn, .uk, .fr, .ca, .jp//\u8d1f\u8d23\u9876\u7ea7\u57df\u540d\uff08\u5982com,org,net,edu,gov\uff09\u548c\u6240\u6709\u56fd\u5bb6\u7ea7\u7684\u9876\u7ea7\u57df\u540d\uff08\u5982cn,uk,fr,ca,jp\uff09 - Network Solutions: authoritative registry for .com, .net TLD//Network solutions\u516c\u53f8\u7ef4\u62a4com TLD\u670d\u52a1\u5668 - Educause: .edu TLD //Educause\u516c\u53f8\u7ef4\u62a4edu TLD\u670d\u52a1\u5668</p> <p>authoritative DNS servers: - organization\u2019s own DNS server(s), providing authoritative hostname to IP mappings for organization\u2019s named hosts - can be maintained by organization or service provider</p> <p>Local DNS name servers - when host makes DNS query, it is sent to its local DNS server     - Local DNS server returns reply, answering:         - from its local cache of recent name-to-address translation pairs (possibly out of date!)         - forwarding request into DNS hierarchy for resolution     - each ISP has local DNS name server; to find yours:\u6bcf\u4e2aISP\u90fd\u6709\u4e00\u4e2a\u672c\u5730DNS\u670d\u52a1\u5668         - MacOS: % scutil --dns         - Windows: &gt;ipconfig /all - local DNS server doesn\u2019t strictly belong to hierarchy\u672c\u5730DNS\u670d\u52a1\u5668\u5e76\u4e0d\u4e25\u683c\u5c5e\u4e8e\u5c42\u6b21\u7ed3\u6784</p> <p></p> <p> DNS name resolution(\u57df\u540d\u89e3\u6790): iterated query Example: host at cse.nyu.edu wants IP address for gaia.cs.umass.edu Iterated query: - contacted server replies with name of server to contact\u5f53\u524d\u8054\u7edc\u7684\u670d\u52a1\u5668\u7ed9\u51fa\u53ef\u4ee5\u8054\u7cfb\u7684\u670d\u52a1\u5668\u7684\u540d\u5b57 - \u201cI don\u2019t know this name, but ask this server\u201d\u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u540d\u5b57\uff0c\u4f46\u53ef\u4ee5\u5411\u8fd9\u4e2a\u670d\u52a1\u5668\u8bf7\u6c42</p> <p> DNS name resolution: recursive query Recursive query: - puts burden of name resolution on contacted name server - heavy load at upper levels of hierarchy? - \u540d\u5b57\u89e3\u6790\u8d1f\u62c5\u90fd\u653e\u5728\u5f53\u524d\u8054\u7edc\u7684\u540d\u5b57\u670d\u52a1\u5668\u4e0a - \u95ee\u9898\uff1a\u6839\u670d\u52a1\u5668\u7684\u8d1f\u62c5\u592a\u91cd - \u89e3\u51b3\uff1a\u8fed\u4ee3\u67e5\u8be2</p>"},{"location":"SpecializedCourse/internet/2.4%20DNS---The%20Internet%27s%20Directory%20Service/#dns-caching","title":"DNS caching","text":"<p>Caching DNS Information - once (any) name server learns mapping, it caches mapping, and immediately returns a cached mapping in response to a query\u4e00\u65e6\u540d\u5b57\u670d\u52a1\u5668\u5b66\u5230\u4e00\u4e2a\u6620\u5c04\uff0c\u5c31\u5c06\u8be5\u6620\u5c04\u7f13\u5b58\u8d77\u6765\uff0c     - caching improves response time     - cache entries timeout (disappear) after some time (TTL)     - TLD servers typically cached in local name servers//TLD\u670d\u52a1\u5668\u901a\u5e38\u90fd\u5728\u672c\u5730\u670d\u52a1\u5668\u4e2d\u7f13\u5b58\u7740 - cached entries may be out-of-date\u7f13\u5b58\u6761\u76ee\u53ef\u80fd\u4f1a\u8fc7\u671f     - if named host changes IP address, may not be known Internet-wide until all TTLs expire!     - best-effort name-to-address translation!</p>"},{"location":"SpecializedCourse/internet/2.4%20DNS---The%20Internet%27s%20Directory%20Service/#243-dns-records-and-messages","title":"2.4.3 DNS Records and Messages","text":"<p>DNS: distributed database storing resource records (RR)\u4fdd\u5b58\u8d44\u6e90\u8bb0\u5f55\uff08RR\uff09\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93 RR format: (name, value, type, ttl) type=A - name is hostname - value is IP address type=CNAME - name is alias name for some \u201ccanonical\u201d (the real) name - www.ibm.com is really servereast.backup2.ibm.com - value is canonical name type=NS - name is domain (e.g., foo.com) - value is hostname of authoritative name server for this domain type=MX - value is name of SMTP mail server associated with name</p> <p>TTL\uff1a\u751f\u5b58\u65f6\u95f4\uff0c\u51b3\u5b9a\u4e86\u8d44\u6e90\u8bb0\u5f55\u5e94\u5f53\u4ece\u7f13\u5b58\u4e2d\u5220\u9664\u7684\u65f6\u95f4</p>"},{"location":"SpecializedCourse/internet/2.4%20DNS---The%20Internet%27s%20Directory%20Service/#dns-messages","title":"DNS Messages","text":"<p>DNS protocol messages DNS query and reply messages, both have same\u00a0 format:</p> <p>message header: - identification: 16 bit # for query, reply to query uses same #   \u6807\u8bc6\u7b26id - flags:     - query or reply\u67e5\u8be2/\u5e94\u7b54     - recursion desired\u5e0c\u671b\u9012\u5f52     - recursion available\u9012\u5f52\u53ef\u7528     - reply is authoritative\u5e94\u7b54\u4e3a\u6743\u5a01</p> <p></p>"},{"location":"SpecializedCourse/internet/2.4%20DNS---The%20Internet%27s%20Directory%20Service/#inserting-records-into-the-dns-database","title":"inserting Records into the DNS Database","text":"<p>Getting your info into the DNS</p> <p>\u95ee\u98983\uff1a\u7ef4\u62a4\u95ee\u9898\uff1a\u65b0\u589e\u4e00\u4e2a\u57df - \u5728\u4e0a\u7ea7\u57df\u7684\u540d\u5b57\u670d\u52a1\u5668\u4e2d\u589e\u52a0\u4e24\u6761\u8bb0\u5f55\uff0c\u6307\u5411\u8fd9\u4e2a\u65b0\u589e\u7684\u5b50\u57df\u7684\u57df\u540d\u548c\u57df\u540d\u670d\u52a1\u5668\u7684\u5730\u5740 - \u5728\u65b0\u589e\u5b50\u57df\u7684\u540d\u5b57\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u540d\u5b57\u670d\u52a1\u5668\uff0c\u8d1f\u8d23\u672c\u57df\u7684\u540d\u5b57\u89e3\u6790\uff1a\u540d\u5b57-&gt;IP\u5730\u5740</p> <p>example: new startup \u201cNetwork Utopia\u201d - register name networkuptopia.com at DNS registrar (e.g., Network Solutions)\u5230\u6ce8\u518c\u767b\u8bb0\u673a\u6784\u6ce8\u518c\u57df\u540dnetworkuptopia.com     - provide names, IP addresses of authoritative name server (primary and secondary)\u9700\u8981\u5411\u8be5\u673a\u6784\u63d0\u4f9b\u6743\u5a01DNS\u670d\u52a1\u5668\uff08\u57fa\u672c\u7684\u3001\u548c\u8f85\u52a9\u7684\uff09\u7684\u540d\u5b57\u548cIP\u5730\u5740     - registrar inserts NS, A RRs into .com TLD server:\u767b\u8bb0\u673a\u6784\u5728com TLD\u670d\u52a1\u5668\u4e0a\u63d2\u5165\u4e24\u6761RR\u8bb0\u5f55     (networkutopia.com, dns1.networkutopia.com, NS)     \u00a0(dns1.networkutopia.com, 212.212.212.1, A) - create authoritative server locally with IP address 212.212.212.1     - type A record for www.networkuptopia.com     - type MX record for networkutopia.com</p>"},{"location":"SpecializedCourse/internet/2.5%20Peer-to-Peer%20File%20Distribution/","title":"2.5 Peer-to-Peer File Distribution","text":""},{"location":"SpecializedCourse/internet/2.5%20Peer-to-Peer%20File%20Distribution/#scalability-of-p2p-architectures","title":"Scalability of P2P Architectures","text":""},{"location":"SpecializedCourse/internet/3.1%20Introduction%20and%20Transport-Layer%20Services/","title":"3.1 Introduction and Transport-Layer Services","text":"<p>Transport services and protocols - provide logical communication between application processes running on different hosts - transport protocols actions in end systems:     - sender: breaks application messages into segments, passes to\u00a0 network layer     - receiver: reassembles segments into messages, passes to application layer\u91cd\u7ec4\u62a5\u6587\u6bb5\u6210\u62a5\u6587\uff0c\u7136\u540e\u4f20\u9012\u7ed9\u5e94\u7528\u5c42 - two transport protocols available to Internet applications     - TCP, UDP</p>"},{"location":"SpecializedCourse/internet/3.1%20Introduction%20and%20Transport-Layer%20Services/#311-relationship-between-transport-and-network-layers","title":"3.1.1 Relationship Between Transport and Network Layers","text":"<p>Transport vs. network layer services and protocols household analogy: 12 kids in Ann\u2019s house sending letters to 12 kids in Bill\u2019s house: - hosts = houses - processes = kids - app messages = letters in envelopes - transport protocol = Ann and Bill who demux to in-house siblings - network-layer protocol = postal service\u90ae\u653f\u670d\u52a1</p> <ul> <li>transport layer: communication between processes<ul> <li>relies on, enhances, network layer services\u4f9d\u8d56\u5e76\u52a0\u5f3a\u7f51\u7edc\u5c42\u7684\u670d\u52a1</li> <li>\u4f9d\u8d56\u4e8e\u7f51\u7edc\u5c42\u7684\u670d\u52a1<ul> <li>\u5ef6\u65f6\u3001\u5e26\u5bbd</li> </ul> </li> <li>\u5bf9\u7f51\u7edc\u5c42\u7684\u670d\u52a1\u8fdb\u884c\u52a0\u5f3a<ul> <li>\u6570\u636e\u4e22\u5931\u3001\u987a\u5e8f\u6df7\u4e71\u3001\u52a0\u5bc6</li> </ul> </li> </ul> </li> <li>network layer: communication between hosts \u6709\u4e9b\u670d\u52a1\u662f\u53ef\u4ee5\u52a0\u5f3a\u7684\uff1a\u4e0d\u53ef\u9760-&gt;\u53ef\u9760\uff1b\u5b89\u5168 \u4f46\u6709\u4e9b\u670d\u52a1\u662f\u4e0d\u53ef\u4ee5\u88ab\u52a0\u5f3a\u7684\uff1a\u5e26\u5bbd\uff0c\u5ef6\u8fdf</li> </ul>"},{"location":"SpecializedCourse/internet/3.1%20Introduction%20and%20Transport-Layer%20Services/#312-overview-of-the-transport-layer-in-the-internet","title":"3.1.2 Overview of the Transport Layer in the Internet","text":"<p>Transport Layer Actions Sender: - is passed an application-layer message - determines segment header fields values - creates segment - passes segment to IP Receiver: - receives segment from IP - checks header values - extracts application-layer message - demultiplexes message up to application via socket</p> <p>Two principal Internet transport protocols TCP: Transmission Control Protocol - reliable, in-order delivery - congestion control - flow control - connection setup UDP: User Datagram Protocol - unreliable, unordered delivery - no-frills extension of \u201cbest-effort\u201d IP\u6ca1\u6709\u4e3a\u5c3d\u529b\u800c\u4e3a\u7684IP\u670d\u52a1\u6dfb\u52a0\u66f4\u591a\u7684\u5176\u4ed6\u989d\u5916\u670d\u52a1 services not available:\u90fd\u4e0d\u63d0\u4f9b\u7684\u670d\u52a1 - delay guarantees - bandwidth guarantees</p>"},{"location":"SpecializedCourse/internet/3.2%20Multiplexing%20and%20Demultiplexing/","title":"3.2 Multiplexing and Demultiplexing","text":"<p>multiplexing as sender:\u5728\u53d1\u9001\u65b9\u4e3b\u673a\u591a\u8def\u590d\u7528 handle data from multiple sockets, add transport header (later used for demultiplexing) \u4ece\u591a\u4e2a\u5957\u63a5\u5b57\u63a5\u6536\u6765\u81ea\u591a\u4e2a\u8fdb\u7a0b\u7684\u62a5\u6587\uff0c\u6839\u636e\u5957\u63a5\u5b57\u5bf9\u5e94\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u7b49\u4fe1\u606f\u5bf9\u62a5\u6587\u6bb5\u7528\u5934\u90e8\u52a0\u4ee5\u5c01\u88c5\uff08\u8be5\u5934\u90e8\u4fe1\u606f\u7528\u4e8e\u4ee5\u540e\u7684\u89e3\u590d\u7528\uff09</p> <p>demultiplexing as receiver:\u5728\u63a5\u6536\u65b9\u4e3b\u673a\u591a\u8def\u89e3\u590d\u7528\uff08\u591a\u8def\u5206\u7528\uff09 use header info to deliver received segments to correct socket \u6839\u636e\u62a5\u6587\u6bb5\u7684\u5934\u90e8\u4fe1\u606f\u4e2d\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u5c06\u63a5\u6536\u5230\u7684\u62a5\u6587\u6bb5\u53d1\u7ed9\u6b63\u786e\u7684\u5957\u63a5\u5b57\uff08\u548c\u5bf9\u5e94\u7684\u5e94\u7528\u8fdb\u7a0b\uff09</p> <p>[!question] Q: how did transport layer know to deliver message to Firefox browser process rather then Netflix process or Skype process? </p> <p></p> <p>How demultiplexing works\u591a\u8def\u89e3\u590d\u7528\u5de5\u4f5c\u539f\u7406 \u89e3\u590d\u7528\u4f5c\u7528\uff1aTCP\u6216\u8005UDP\u5b9e\u4f53\u91c7\u7528\u54ea\u4e9b\u4fe1\u606f\uff0c\u5c06\u62a5\u6587\u6bb5\u7684\u6570\u636e\u90e8\u5206\u4ea4\u7ed9\u6b63\u786e\u7684socket\uff0c\u4ece\u800c\u4ea4\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b</p> <ul> <li>host receives IP datagrams<ul> <li>each datagram has source IP address, destination IP address</li> <li>each datagram carries one transport-layer segment</li> <li>each segment has source, destination port number</li> </ul> </li> <li>host uses IP addresses &amp; port numbers to direct segment to appropriate socket</li> </ul>"},{"location":"SpecializedCourse/internet/3.2%20Multiplexing%20and%20Demultiplexing/#connectionless-multiplexing-and-demultiplexing","title":"Connectionless Multiplexing and Demultiplexing","text":"<p>Recall: - when creating socket, must specify host-local port #: DatagramSocket mySocket1 = new DatagramSocket(12534); - when creating datagram to send into UDP socket, must specify     - destination IP address     - destination port #</p> <p>when receiving host receives UDP segment: - checks destination port # in segment - directs UDP segment to socket with that port # IP/UDP datagrams with same dest. port #, but different source IP addresses and/or source port numbers will be directed to same socket at receiving host</p> <p>Connectionless demultiplexing: an example </p>"},{"location":"SpecializedCourse/internet/3.2%20Multiplexing%20and%20Demultiplexing/#connection-oriented-multiplexing-and-demultiplexing","title":"Connection-Oriented Multiplexing and Demultiplexing","text":"<p>TCP socket identified by 4-tuple: \u2022source IP address \u2022source port number \u2022dest IP address \u2022dest port number</p> <p>demux: receiver uses all four values (4-tuple) to direct segment to appropriate socket</p> <p>server may support many simultaneous TCP sockets: \u2022each socket identified by its own 4-tuple \u2022each socket associated with a different connecting client</p> <p>Connection-oriented demultiplexing: example </p> <p>Summary - Multiplexing, demultiplexing: based on segment, datagram header field values - UDP: demultiplexing using destination port number (only) - TCP: demultiplexing using 4-tuple: source and destination IP addresses, and port numbers - Multiplexing/demultiplexing happen at all layers</p> <p></p> <p></p>"},{"location":"SpecializedCourse/internet/3.2%20Multiplexing%20and%20Demultiplexing/#web-servers-and-tcp","title":"Web Servers and TCP","text":""},{"location":"SpecializedCourse/internet/3.3%20Connectionless%20Transport%20UDP/","title":"3.3 Connectionless Transport: UDP","text":"<p>UDP: User Datagram Protocol [RFC 768] - \u201cno frills,\u201d \u201cbare bones\u201d Internet transport protocol - \u201cbest effort\u201d service, UDP segments may be:     - lost     - delivered out-of-order to app - connectionless:     - no handshaking between UDP sender, receiver     - each UDP segment handled independently of others</p> <p>Why is there a UDP? - no connection establishment (which can add RTT delay) - simple: no connection state at sender, receiver - small header size - no congestion control     - UDP can blast away as fast as desired!     - can function in the face of congestion</p> <ul> <li>UDP use:<ul> <li>streaming multimedia apps (loss tolerant, rate sensitive)</li> <li>DNS</li> <li>SNMP</li> <li>HTTP/3</li> </ul> </li> <li>if reliable transfer needed over UDP (e.g., HTTP/3):<ul> <li>add needed reliability at application layer</li> <li>add congestion control at application layer</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/3.3%20Connectionless%20Transport%20UDP/#331-udp-segment-structure","title":"3.3.1 UDP Segment Structure","text":"<p>UDP: Transport Layer Actions UDP sender actions: is passed an application-layer message determines UDP segment header fields values creates UDP segment passes segment to IP</p> <p></p> <p>length, in bytes of UDP segment, including header data to/from application layer</p>"},{"location":"SpecializedCourse/internet/3.3%20Connectionless%20Transport%20UDP/#332-udp-checksum","title":"3.3.2 UDP Checksum","text":"<p>Goal: detect errors (i.e., flipped bits) in transmitted segment</p> <p></p> <p>Internet checksum sender: - treat contents of UDP segment (including UDP header fields and IP addresses) as sequence of 16-bit integers - checksum: addition (one\u2019s complement sum) of segment content - checksum value put into UDP checksum field receiver: - compute checksum of received segment - check if computed checksum equals checksum field value:     - not equal - error detected     - equal - no error detected. But maybe errors nonetheless? More later \u2026. Even though numbers have changed (bit flips), no change in checksum!\u6b8b\u5b58\u9519\u8bef</p> <p>Internet checksum: an example</p> <p></p> <p>Note: when adding numbers, a carryout from the most significant bit needs to be added to the result</p> <p>Summary: UDP - \u201cno frills\u201d protocol:     - segments may be lost, delivered out of order     - best effort service: \u201csend and hope for the best\u201d - UDP has its plusses:     - no setup/handshaking needed (no RTT incurred)     - can function when network service is compromised     - helps with reliability (checksum) - build additional functionality on top of UDP in application layer (e.g., HTTP/3)</p>"},{"location":"SpecializedCourse/internet/3.4%20Principles%20of%20Reliable%20Data%20Transfer/","title":"3.4 Principles of Reliable Data Transfer","text":"<p>\u4ec0\u4e48\u662f\u53ef\u9760\uff1f - \u4e0d\u9519\u3001\u4e0d\u4e22\u3001\u4e0d\u4e71 \u53ef\u9760\u6570\u636e\u4f20\u8f93\u534f\u8bae - \u53ef\u9760\u6570\u636e\u4f20\u8f93\u5bf9\u5e94\u7528\u5c42\u3001\u4f20\u8f93\u5c42\u3001\u94fe\u8def\u5c42\u90fd\u5f88\u91cd\u8981 - \u7f51\u7edctop10\u95ee\u9898 - \u4fe1\u9053\u7684\u4e0d\u53ef\u9760\u7279\u6027\u51b3\u5b9a\u4e86\u53ef\u9760\u6570\u636e\u4f20\u8f93\u534f\u8bae(rdt)\u7684\u590d\u6742\u6027</p> <p></p> <p>reliable service abstraction reliable service implementation Complexity of reliable data transfer protocol\u00a0 will depend (strongly) on characteristics of unreliable channel (lose, corrupt, reorder data?) Sender, receiver do not know the \u201cstate\u201d of each other, e.g., was a message received? - unless communicated via a message</p> <p>Reliable data transfer protocol (rdt): interfaces rdt_send(): called from above, (e.g., by app.). Passed data to deliver to receiver upper layer</p> <p>udt_send(): called by rdt to transfer packet over unreliable channel to receiver</p> <p>deliver_data(): called by rdt to deliver data to upper layer</p> <p>rdt_rcv(): called when packet arrives on receiver side of channel</p> <p>Reliable data transfer: getting started We will: - incrementally develop sender, receiver sides of reliable data transfer protocol (rdt) - consider only unidirectional data transfer     - but control info will flow in both directions! - use finite state machines (FSM)\u00a0 to specify sender, receiver</p> <p></p>"},{"location":"SpecializedCourse/internet/3.4%20Principles%20of%20Reliable%20Data%20Transfer/#341-building-a-reliable-data-transfer-protocol","title":"3.4.1 Building a Reliable Data Transfer Protocol","text":""},{"location":"SpecializedCourse/internet/3.4%20Principles%20of%20Reliable%20Data%20Transfer/#reliable-data-transfer-over-a-perfectly-reliable-channel-rdt10","title":"Reliable Data Transfer over a Perfectly Reliable Channel: rdt1.0","text":"<ul> <li>underlying channel perfectly reliable<ul> <li>no bit errors</li> <li>no loss of packets</li> </ul> </li> <li>separate FSMs for sender, receiver:<ul> <li>sender sends data into underlying channel</li> <li>receiver reads data from underlying channel</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/3.4%20Principles%20of%20Reliable%20Data%20Transfer/#reliable-data-transfer-over-a-channel-with-bit-errors-rdt20","title":"Reliable Data Transfer over a Channel with Bit Errors: rdt2.0","text":"<ul> <li>underlying channel may flip bits in packet\u5e95\u5c42\u4fe1\u9053\u53ef\u80fd\u7ffb\u8f6c\u5206\u7ec4\u4e2d\u7684\u4f4d<ul> <li>checksum (e.g., Internet checksum) to detect bit errors</li> </ul> </li> <li>the question: how to recover from errors?</li> </ul> <p>[!question] How do humans recover from \u201cerrors\u201d during conversation? </p> <p>\u2022acknowledgements (ACKs): receiver explicitly tells sender that pkt received OK</p> <p>\u2022negative acknowledgements (NAKs): receiver explicitly tells sender that pkt had errors</p> <p>\u2022sender retransmits pkt on receipt of NAK</p> <p>\u57fa\u4e8e\u8fd9\u79cd\u91cd\u4f20\u673a\u5236\u7684rdt\u534f\u8bae\u79f0\u4e3aARQ(Automatic Repeat reQuest)\u534f\u8bae</p> <p>Rdt2.0\u4e2d\u5f15\u5165\u7684\u65b0\u673a\u5236 - \u5dee\u9519\u68c0\u6d4b - \u63a5\u6536\u65b9\u53cd\u9988\u63a7\u5236\u4fe1\u606f\uff1aACK/NAK - \u91cd\u4f20</p> <p>stop and wait sender sends one packet,\u00a0 then waits for receiver\u00a0 response</p> <p>rdt2.0: FSM specifications Rdt 2.0: FSM\u89c4\u7ea6</p> <p></p> <p>Note: \u201cstate\u201d of receiver (did the receiver get my message correctly?) isn\u2019t known to sender unless somehow communicated from receiver to sender - that\u2019s why we need a protocol!</p> <p>rdt2.0: operation with no errors rdt2.0: corrupted packet scenario</p> <p>rdt2.0 has a fatal flaw! what happens if ACK/NAK corrupted? - sender doesn\u2019t know what happened at receiver!     - \u4e3aACK/NAK\u589e\u52a0\u6821\u9a8c\u548c\uff0c\u68c0\u9519\u5e76\u7ea0\u9519     - \u53d1\u9001\u65b9\u6536\u5230\u88ab\u7834\u574fACK/NAK\u65f6\u4e0d\u77e5\u9053\u63a5\u6536\u65b9\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u6dfb\u52a0\u989d\u5916\u7684\u63a7\u5236\u6d88\u606f     - \u5982\u679cACK/NAK\u574f\u6389\uff0c\u53d1\u9001\u65b9\u91cd\u4f20     - \u4e0d\u80fd\u7b80\u5355\u7684\u91cd\u4f20\uff1a\u4ea7\u751f\u91cd\u590d\u5206\u7ec4 - can\u2019t just retransmit: possible duplicate handling duplicates: - sender retransmits current pkt if ACK/NAK corrupted - sender adds sequence number to each pkt - receiver discards (doesn\u2019t deliver up) duplicate pkt</p> <p>rdt2.1: sender, handling garbled ACK/NAKs </p> <p>rdt2.1: receiver, handling garbled ACK/NAKs </p> <p>rdt2.1: discussion</p> <p>sender: - seq # added to pkt - two seq. # s(0,1) will suffice.\u00a0 Why? - must check if received ACK/NAK corrupted - twice as many states     - state must \u201cremember\u201d whether \u201cexpected\u201d pkt should have seq # of 0 or 1 receiver: - must check if received packet is duplicate     - state indicates whether 0 or 1 is expected pkt seq # - note: receiver can not know if its last ACK/NAK received OK at sender</p> <p>\u6211\u4eec\u771f\u7684\u9700\u8981\u4e24\u79cd\u786e\u8ba4\u6d88\u606f\uff08ACK+NAK\uff09\u5417\uff1f rdt2.2: a NAK-free protocol - same functionality as rdt2.1, using ACKs only - instead of NAK, receiver sends ACK for last pkt received OK     - receiver must explicitly include seq # of pkt being ACKed - duplicate ACK at sender results in same action as NAK: retransmit current pkt</p> <p>As we will see, TCP uses this approach to be NAK-free</p> <p></p> <p></p>"},{"location":"SpecializedCourse/internet/3.4%20Principles%20of%20Reliable%20Data%20Transfer/#reliable-data-transfer-over-a-lossy-channel-with-bit-errors-rdt30","title":"Reliable Data Transfer over a Lossy Channel with Bit Errors: rdt3.0","text":"<p>rdt3.0: channels with errors and loss</p> <p>New channel assumption: underlying channel can also lose packets (data, ACKs)</p> <p>\u2022checksum, sequence # s, ACKs, retransmissions will be of help \u2026 but not quite enough</p> <p>[!question] Q: How do humans handle lost sender-to-receiver words in conversation? </p> <p>Approach: sender waits \u201creasonable\u201d amount of time for ACK - retransmits if no ACK received in this time - if pkt (or ACK) just delayed (not lost):     - retransmission will be\u00a0 duplicate, but seq # s already handles this!     - receiver must specify seq # of packet being ACKed - use countdown timer to interrupt after \u201creasonable\u201d amount of time</p> <p></p> <p></p>"},{"location":"SpecializedCourse/internet/3.4%20Principles%20of%20Reliable%20Data%20Transfer/#342-pipelined-reliable-data-transfer-protocols","title":"3.4.2 Pipelined Reliable Data Transfer Protocols","text":"<p>Performance of rdt3.0 (stop-and-wait) - U sender: utilization \u2013 fraction of time sender busy sending - example: 1 Gbps link, 15 ms prop. delay, 8000 bit packet     - time to transmit packet into channel: Dtrans=L(packet length in bits)/R(transmission rate,bps)=8000 bits/109 bits/sec=8 microsecs</p> <p>\u53d1\u9001\u65b9\u5229\u7528\u7387\uff1a\u53d1\u9001\u65b9\u53d1\u9001\u65f6\u95f4\u767e\u5206\u6bd4</p> <p>rdt 3.0 protocol performance stinks! Protocol limits performance of underlying infrastructure (channel)</p> <p></p> <p>rdt3.0: pipelined protocols operation pipelining: sender allows multiple, \u201cin-flight\u201d, yet-to-be-acknowledged packets \u2022range of sequence numbers must be increased \u2022buffering at sender and/or receiver</p> <p></p>"},{"location":"SpecializedCourse/internet/3.4%20Principles%20of%20Reliable%20Data%20Transfer/#343-go-back-ngbn","title":"3.4.3 Go-Back-N(GBN)","text":"<p>\u6ed1\u52a8\u7a97\u53e3\u534f\u8bae\uff1aSliding-window protocol \u7a97\u53e3 - \u5141\u8bb8\u4f7f\u7528\u7684\u5e8f\u5217\u53f7\u8303\u56f4 - \u7a97\u53e3\u5c3a\u5bf8\u4e3aN\uff1a\u6700\u591a\u6709N\u4e2a\u7b49\u5f85\u786e\u8ba4\u7684\u6d88\u606f \u6ed1\u52a8\u7a97\u53e3 - \u968f\u7740\u534f\u8bae\u7684\u8fd0\u884c\uff0c\u7a97\u53e3\u5728\u5e8f\u5217\u53f7\u7a7a\u95f4\u5185\u5411\u524d\u6ed1\u52a8 \u6ed1\u52a8\u7a97\u53e3\u534f\u8bae\uff1aGBN,SR</p> <p>Go-Back-N: sender - sender: \u201cwindow\u201d of up to N, consecutive transmitted but unACKed pkts     - k-bit seq # in pkt header</p> <ul> <li>cumulative ACK: ACK(n): ACKs all packets up to, including seq # n<ul> <li>on receiving ACK(n): move window forward to begin at n+1</li> </ul> </li> <li>timer for oldest in-flight packet</li> <li>timeout(n): retransmit packet n and all higher seq # packets in window</li> </ul> <p></p> <p>GBN:\u53d1\u9001\u65b9\u6269\u5c55FSM</p> <p></p> <p></p> <ul> <li>ACK-only: always send ACK for correctly-received packet so far, with highest in-order seq #<ul> <li>may generate duplicate ACKs</li> <li>need only remember rcv_base</li> </ul> </li> <li>on receipt of out-of-order packet:<ul> <li>can discard (don\u2019t buffer) or buffer: an implementation decision</li> <li>re-ACK pkt with highest in-order seq #</li> </ul> </li> </ul> <p>Go-Back-N in action</p> <p></p>"},{"location":"SpecializedCourse/internet/3.4%20Principles%20of%20Reliable%20Data%20Transfer/#344-selective-repeatsr","title":"3.4.4 Selective Repeat(SR)","text":"<ul> <li>GBN\u6709\u4ec0\u4e48\u7f3a\u9677\uff1f</li> <li>\u63a5\u6536\u65b9\u5bf9\u6bcf\u4e2a\u5206\u7ec4\u5355\u72ec\u8fdb\u884c\u786e\u8ba4<ul> <li>\u8bbe\u7f6e\u7f13\u5b58\u673a\u5236\uff0c\u7f13\u5b58\u4e71\u5e8f\u5230\u8fbe\u7684\u5206\u7ec4</li> </ul> </li> <li>\u53d1\u9001\u65b9\u53ea\u91cd\u4f20\u90a3\u4e9b\u6ca1\u6536\u5230ACK\u7684\u5206\u7ec4<ul> <li>\u4e3a\u6bcf\u4e2a\u5206\u7ec4\u8bbe\u7f6e\u5b9a\u65f6\u5668</li> </ul> </li> <li>\u53d1\u9001\u65b9\u7a97\u53e3<ul> <li>N\u4e2a\u8fde\u7eed\u7684\u5e8f\u5217\u53f7</li> <li>\u9650\u5236\u5df2\u53d1\u9001\u4e14\u672a\u786e\u8ba4\u7684\u5206\u7ec4</li> </ul> </li> </ul> <p>Selective repeat: the approach - pipelining: \u00a0multiple packets in flight - receiver individually ACKs all correctly received packets     - buffers packets, as needed, for in-order delivery to upper layer sender: - maintains (conceptually) a timer for each unACKed pkt     - timeout: retransmits single unACKed packet\u00a0 associated with timeout - maintains (conceptually) \u201cwindow\u201d over \u00a0N consecutive seq # s     - limits pipelined, \u201cin flight\u201d packets to be within this window</p> <p>Selective repeat: sender, receiver windows</p> <p></p> <p>Selective repeat: sender and receiver</p> <p> sender data from above: - if next available seq # in window, send packet timeout(n): - resend packet n, restart timer ACK(n) in \u3010sendbase,sendbase+N-1\u3011: - mark packet n as received - if n smallest unACKed packet, advance window base to next unACKed seq #</p> <p></p> <p>receiver packet n in [rcvbase, rcvbase+N-1] - send ACK(n) - out-of-order: buffer - in-order: deliver (also deliver buffered, in-order packets), advance window to next not-yet-received packet packet n in [rcvbase-N,rcvbase-1] - ACK(n) otherwise: - ignore</p> <p>Selective Repeat in action</p> <p></p> <p>Selective repeat:  a dilemma!  example:</p> <p>seq # s: 0, 1, 2, 3 (base 4 counting) window size=3</p> <p>receiver can\u2019t see sender side</p> <p>receiver behavior identical in both cases!</p> <p>something\u2019s (very) wrong!</p> <p>Q: what relationship is needed between sequence # size and window size to avoid problem in scenario (b)?</p> <p>summary </p>"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/","title":"3.5 Connection-Oriented Transport: TCP","text":"<p>TCP: overview\u00a0 RFCs: 793,1122, 2018, 5681, 7323 - point-to-point:     - one sender, one receiver - reliable, in-order byte steam:     - no \u201cmessage boundaries\" - full duplex data:(\u5168\u53cc\u5de5)     - bi-directional data flow in same connection     - MSS: maximum segment size - cumulative ACKs - pipelining:     - TCP congestion and flow control set window size - \u53d1\u9001\u65b9/\u63a5\u6536\u65b9\u7f13\u5b58 - connection-oriented:     - handshaking (exchange of control messages) initializes sender, receiver state before data exchange     - \u901a\u4fe1\u53cc\u65b9\u5728\u53d1\u9001\u6570\u636e\u4e4b\u524d\u5fc5\u987b\u5efa\u7acb\u8fde\u63a5     - \u8fde\u63a5\u72b6\u6001\u53ea\u5728\u8fde\u63a5\u7684\u4e24\u7aef\u4e2d\u7ef4\u62a4\uff0c\u5728\u6cbf\u9014\u8282\u70b9\u4e2d\u5e76\u4e0d\u7ef4\u62a4\u72b6\u6001     - TCP\u8fde\u63a5\u5305\u62ec\uff1a\u4e24\u53f0\u4e3b\u673a\u4e0a\u7684\u7f13\u5b58\u3001\u8fde\u63a5\u72b6\u6001\u53d8\u91cf\u3001socket\u7b49 - flow controlled:     - sender will not overwhelm receiver</p> <ul> <li>TCP\u5728IP\u5c42\u63d0\u4f9b\u7684\u4e0d\u53ef\u9760\u670d\u52a1\u57fa\u7840\u4e0a\u5b9e\u73b0\u53ef\u9760\u6570\u636e\u4f20\u8f93\u670d\u52a1</li> <li>\u6d41\u6c34\u7ebf\u673a\u5236</li> <li>\u7d2f\u79ef\u786e\u8ba4</li> <li>TCP\u4f7f\u7528\u5355\u4e00\u91cd\u4f20\u5b9a\u65f6\u5668</li> <li>\u89e6\u53d1\u91cd\u4f20\u7684\u4e8b\u4ef6<ul> <li>\u8d85\u65f6</li> <li>\u6536\u5230\u91cd\u590dACK</li> </ul> </li> <li>\u6e10\u8fdb\u5f0f<ul> <li>\u6682\u4e0d\u8003\u8651\u91cd\u590dACK</li> <li>\u6682\u4e0d\u8003\u8651\u6d41\u91cf\u63a7\u5236</li> <li>\u6682\u4e0d\u8003\u8651\u62e5\u585e\u63a7\u5236</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#351-the-tcp-connection","title":"3.5.1 The TCP Connection","text":""},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#352-tcp-segment-structure","title":"3.5.2 TCP Segment Structure","text":"<p>segment seq\u00a0 #: counting bytes of data into bytestream (not segments!) ACK: seq # of next expected byte; A bit: this is an ACK length (of TCP header) Internet checksum flow control: # bytes receiver willing to accept C, E: congestion notification TCP options RST, SYN, FIN: connection management data sent by application into TCP socket</p>"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#sequence-numbers-and-acknowledgment-numbers","title":"Sequence Numbers and Acknowledgment Numbers","text":"<p>TCP sequence numbers, ACKs Sequence numbers: - byte stream \u201cnumber\u201d of first byte in segment\u2019s data\u5e8f\u5217\u53f7\u6307\u7684\u662fsegment\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u7f16\u53f7\uff0c\u800c\u4e0d\u662fsegment\u7684\u7f16\u53f7 - \u5efa\u7acbTCP\u8fde\u63a5\u65f6\uff0c\u53cc\u65b9\u968f\u673a\u9009\u62e9\u5e8f\u5217\u53f7 Acknowledgements: - seq # of next byte expected from other side\u5e0c\u671b\u63a5\u6536\u5230\u7684\u4e0b\u4e00\u4e2a\u5b57\u8282\u7684\u5e8f\u5217\u53f7 - cumulative ACK\u7d2f\u79ef\u786e\u8ba4\uff1a\u8be5\u5e8f\u5217\u53f7\u4e4b\u524d\u7684\u6240\u6709\u5b57\u8282\u5747\u5df2\u88ab\u6b63\u786e\u63a5\u6536\u5230</p> <p>Q: how receiver handles out-of-order segments - A: TCP spec doesn\u2019t say, - up to implementor</p>"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#telnet-a-case-study-for-sequence-and-acknowledgment-numbers","title":"Telnet: A Case Study for Sequence and Acknowledgment Numbers","text":""},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#353-round-trip-time-estimation-and-timeout","title":"3.5.3 Round-Trip Time Estimation and Timeout","text":""},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#estimating-the-round-trip-time","title":"Estimating the Round-Trip Time","text":"<p>TCP round trip time, timeout Q: how to set TCP timeout value? - longer than RTT, but RTT varies!\u5927\u4e8eRTT\uff0c\u4f46\u662fRTT\u662f\u53d8\u5316\u7684 - too short: premature timeout, unnecessary retransmissions - too long: slow reaction to segment loss Q: how to estimate RTT? - SampleRTT:measured time from segment transmission until ACK receipt     - ignore retransmissions - SampleRTT will vary, want estimated RTT \u201csmoother\u201d     - average several recent measurements, not just current SampleRTT</p>"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#setting-and-managing-the-retransmission-timeout-interval","title":"Setting and Managing the Retransmission Timeout Interval","text":"<p>EstimatedRTT = (1- a)*EstimatedRTT + a*SampleRTT</p> <p>exponential weighted moving average (EWMA)\u6307\u6570\u52a0\u6743\u79fb\u52a8\u5e73\u5747</p> <p>influence of past sample decreases exponentially fast typical value: a = 0.125</p> <ul> <li>timeout interval: EstimatedRTT plus \u201csafety margin\u201d<ul> <li>large variation in\u00a0 EstimatedRTT: want a larger safety margin</li> </ul> </li> </ul> <p>TimeoutInterval = EstimatedRTT + 4*DevRTT                 estimated RTT                                 \u201csafety margin\u201d</p> <p>DevRTT: EWMA of SampleRTT deviation from EstimatedRTT: DevRTT = (1-b)*DevRTT + b*|SampleRTT-EstimatedRTT| (typically, b = 0.25)</p>"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#354-reliable-data-transfer","title":"3.5.4 Reliable Data Transfer","text":"<p>TCP Sender (simplified) event: data received from application - create segment with seq # - seq # is byte-stream number of first data byte in\u00a0 segment - start timer if not already running     - think of timer as for oldest unACKed segment     - expiration interval: TimeOutInterval</p> <p>event: timeout - retransmit segment that caused timeout - restart timer</p> <p>event: ACK received - if ACK acknowledges previously unACKed segments     - update what is known to be ACKed(SendBase)     - start timer if there are\u00a0 still unACKed segments</p> <p></p> <p>TCP Receiver: ACK generation [RFC 5681]</p> Event at Receiver TCP Receiver action Arrival of in-order segment with expected seq #. All data up to expected seq # already ACKed Delayed ACK. Wait up to 500ms for next segment. If no next segment, send ACK Arrival of in-order segment with expected seq #. One other segment has ACK pending Immediately send single cumulative ACK, ACKing both in-order segments Arrival of out-of-order segment higher-than-expect seq. # . Gap detected Immediately send duplicate ACK, indicating seq. # of next expected byte Arrival of segment that partially or completely fills gap Immediate send ACK, provided that segment startsat lower end of gap"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#a-few-interesting-scenarios","title":"A Few Interesting Scenarios","text":""},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#doubling-the-timeout-interval","title":"Doubling the Timeout Interval","text":""},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#fast-retransmit","title":"Fast Retransmit","text":"<p>TCP fast retransmit</p> <p>TCP\u7684\u5b9e\u73b0\u4e2d\uff0c\u5982\u679c\u53d1\u751f\u8d85\u65f6\uff0c\u8d85\u65f6\u65f6\u95f4\u95f4\u9694\u5c06\u91cd\u65b0\u8bbe\u7f6e\uff0c\u5373\u5c06\u8d85\u65f6\u65f6\u95f4\u95f4\u9694\u52a0\u500d\uff0c\u5bfc\u81f4\u5176\u5f88\u5927 - \u91cd\u53d1\u4e22\u5931\u7684\u5206\u7ec4\u4e4b\u524d\u8981\u7b49\u5f85\u5f88\u957f\u65f6\u95f4 \u901a\u8fc7\u91cd\u590dACK\u68c0\u6d4b\u5206\u7ec4\u4e22\u5931 - Sender\u4f1a\u80cc\u9760\u80cc\u5730\u53d1\u9001\u591a\u4e2a\u5206\u7ec4 - \u5982\u679c\u67d0\u4e2a\u5206\u7ec4\u4e22\u5931\uff0c\u53ef\u80fd\u4f1a\u5f15\u53d1\u591a\u4e2a\u91cd\u590d\u7684ACK</p> <p>if sender receives 3 additional ACKs for same data (\u201ctriple duplicate ACKs\u201d), resend unACKed segment with smallest seq # - likely that unACKed segment lost, so don\u2019t wait for timeout</p> <p>\u5982\u679csender\u6536\u5230\u5bf9\u540c\u4e00\u6570\u636e\u76843\u4e2aACK\uff0c\u5219\u5047\u5b9a\u8be5\u6570\u636e\u4e4b\u540e\u7684\u6bb5\u5df2\u7ecf\u4e22\u5931 - \u5feb\u901f\u91cd\u4f20\uff1a\u5728\u5b9a\u65f6\u5668\u8d85\u65f6\u4e4b\u524d\u5373\u8fdb\u884c\u91cd\u4f20</p> <p>Receipt of three duplicate ACKs indicates 3 segments received after a missing segment \u2013 lost segment is likely. So retransmit!</p> <p></p> <pre><code>event: ACK received, with ACK field value of y\n    if (y &gt; SendBase) {\n        SendBase = y\n        if (there are currently not- yet - acknowledged segments)\n            start timer\n    }\n    else {//a duplicate ACK for already ACKed segment\n        increment count of dup ACKs received for y\n        if (count of dup ACKs received for y = 3) {\n            resend segment with sequence number y             //fast retransmit\n        }\n</code></pre>"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#go-back-n-or-selective-repeat","title":"Go-Back-N or Selective Repeat?","text":""},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#355-flow-control","title":"3.5.5 Flow Control","text":"<p>[!question] Q: What happens if network layer delivers data faster than application layer removes data from socket buffers? </p> <p>receiver controls sender, so sender won\u2019t overflow receiver\u2019s buffer by transmitting too much, too fast</p> <p></p> <p>TCP receiver \u201cadvertises\u201d free buffer space in rwnd field in TCP header</p> <p>\u2022RcvBuffer size set via socket options (typical default is 4096 bytes)</p> <p>\u2022many operating systems auto-adjust RcvBuffer</p> <p>sender limits amount of unACKed (\u201cin-flight\u201d) data to received rwnd</p> <p>guarantees receive buffer will not overflow</p> <p></p> <p>\u63a5\u6536\u65b9\u4e3aTCP\u8fde\u63a5\u5206\u914dbuffer - \u4e0a\u5c42\u5e94\u7528\u53ef\u80fd\u5904\u7406buffer\u4e2d\u6570\u636e\u7684\u901f\u5ea6\u8f83\u6162 \u53d1\u9001\u65b9\u4e0d\u4f1a\u4f20\u8f93\u7684\u592a\u591a\u3001\u592a\u5feb\u4ee5\u81f3\u4e8e\u6df9\u6ca1\u63a5\u6536\u65b9\uff08buffer\u6ea2\u51fa\uff09 \u901f\u5ea6\u5339\u914d\u673a\u5236</p> <p>(\u5047\u5b9aTCP receiver\u4e22\u5f03\u4e71\u5e8f\u7684segments) Buffer\u4e2d\u7684\u53ef\u7528\u7a7a\u95f4(spare room) = RcvWindow = RcvBuffer - [LastByteRcvd - LastByteRead]</p> <p>Receiver\u901a\u8fc7\u5728Segment\u7684\u5934\u90e8\u5b57\u6bb5\u5c06RcvWindow\u544a\u8bc9sender</p> <p>Sender\u9650\u5236\u81ea\u5df1\u5df2\u7ecf\u53d1\u9001\u7684\u4f46\u8fd8\u672a\u6536\u5230ACK\u7684\u6570\u636e\u4e0d\u8d85\u8fc7\u63a5\u6536\u65b9\u7684\u7a7a\u95f2RcvWindow\u5c3a\u5bf8</p> <p>Receiver\u544a\u77e5Sender RcvWindow=0, \u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff1f</p>"},{"location":"SpecializedCourse/internet/3.5%20Connection-Oriented%20Transport%20TCP/#356-tcp-connection-management","title":"3.5.6 TCP Connection Management","text":"<p>before exchanging data, sender/receiver \u201chandshake\u201d: - agree to establish connection (each knowing the other willing to establish connection) - agree on connection parameters (e.g., starting seq # s\uff0cBuffer\u548c\u6d41\u91cf\u63a7\u5236\u4fe1\u606f)</p> <p></p> <p>Agreeing to establish a connection</p> <p></p> <p>[!question] Q: will 2-way handshake always work in network? variable delays retransmitted messages (e.g. req_conn(x)) due to message loss message reordering can\u2019t \u201csee\u201d other side</p> <p>2-way handshake scenarios</p> <p></p> <p> \u534a\u8fde\u63a5</p> <p></p> <p></p> <p>Three way handshake: Step1: client host sends TCP SYN segment to server - specifies initial seq # - no data Step2: server host receives SYN,replies with SYNACK segment - server allocates buffers - specifies server initial seq. # Step3: client receives SYNACK, replies with ACK segment, which may contain data</p> <p>TCP\u8fde\u63a5\u7ba1\u7406\uff1a\u5efa\u7acb</p> <p></p> <p>TCP\u8fde\u63a5\u7ba1\u7406\uff1a\u5173\u95ed</p> <p></p> <p>Closing a connection: client closes socket:clientSocket.close();</p> <p>Step1: client\u5411server\u53d1\u9001TCP FIN\u63a7\u5236segment Step2: server\u6536\u5230FIN\uff0c\u56de\u590dACK\uff0c\u5173\u95ed\u8fde\u63a5\uff0c\u53d1\u9001FIN Step3: client\u6536\u5230FIN\uff0c\u56de\u590dACK - \u8fdb\u5165\u201c\u7b49\u5f85\u201d-\u5982\u679c\u6536\u5230FIN\uff0c\u4f1a\u91cd\u65b0\u53d1\u9001ACK Step4: server\u6536\u5230ACK\uff0c\u8fde\u63a5\u5173\u95ed</p> <ul> <li>client, server each close their side of connection<ul> <li>send TCP segment with FIN bit = 1</li> </ul> </li> <li>respond to received FIN with ACK<ul> <li>on receiving FIN, ACK can be combined with own FIN</li> </ul> </li> <li>simultaneous FIN exchanges can be handled</li> </ul> <p></p> <p></p>"},{"location":"SpecializedCourse/internet/3.6%20Principles%20of%20Congestion%20Control/","title":"3.6 Principles of Congestion Control","text":"<p>Congestion: - informally: \u201ctoo many sources sending too much data too fast for network to handle\u201d - manifestations:     - long delays (queueing in router buffers)     - packet loss (buffer overflow at routers)</p> <p>different from flow control! a top-10 problem!</p> <p>congestion control: too many senders, sending too fast flow control: one sender too fast for one receiver</p>"},{"location":"SpecializedCourse/internet/3.6%20Principles%20of%20Congestion%20Control/#361-the-causes-and-the-costs-of-congestion","title":"3.6.1 The Causes and the Costs of Congestion","text":""},{"location":"SpecializedCourse/internet/3.6%20Principles%20of%20Congestion%20Control/#scenario-1-two-senders-a-router-with-infinite-buffers","title":"Scenario 1: Two Senders, a Router with Infinite Buffers","text":"<p>Causes/costs of congestion: scenario 1</p> <p></p> <p>Fugure 3.43 Congestion scenario 1: Two connections sharing a single hop with indinite buffers</p> <p>Simplest scenario: - one router, infinite buffers - input, output link capacity: R - two flows - no retransmissions needed</p> <p>Q: What happens as arrival rate lin approaches R/2?</p> <p></p> <p>Figure 3.44 Congestion scenario 1: Throughput and delay as a function of host sending rate</p> <ul> <li>\u62e5\u585e\u65f6\u5206\u7ec4\u5ef6\u8fdf\u592a\u5927</li> <li>\u8fbe\u5230\u6700\u5927throughput</li> </ul>"},{"location":"SpecializedCourse/internet/3.6%20Principles%20of%20Congestion%20Control/#scenario-2-two-senders-and-a-router-with-finite-buffers","title":"Scenario 2: Two Senders and a Router with Finite Buffers","text":"<p>Causes/costs of congestion: scenario 2</p> <p></p> <ul> <li>one router, finite buffers</li> <li>sender retransmits lost, timed-out packet<ul> <li>application-layer input = application-layer output: lin = lout</li> <li>transport-layer input includes retransmissions : l\u2019in \u00a0\u00a0\u00a0lin</li> </ul> </li> </ul> <p>\u60c5\u51b5a: Idealization: perfect knowledge - sender sends only when router buffers available</p> <p>\u60c5\u51b5b: Idealization: some perfect knowledge - packets can be lost (dropped at router) due\u00a0 to full buffers - sender knows when packet has been dropped: only resends if packet known to be lost</p> <p>\u60c5\u51b5c: Idealization: some perfect knowledge - packets can be lost (dropped at router) due\u00a0 to full buffers - sender knows when packet has been dropped: only resends if packet known to be lost</p> <p>Realistic scenario: un-needed duplicates - packets can be lost, dropped at router due\u00a0 to full buffers \u2013 requiring retransmissions - but sender times can time out prematurely, sending two copies, both of which are delivered</p> <p>\u201ccosts\u201d of congestion: - more work (retransmission) for given receiver throughput - unneeded retransmissions: link carries multiple copies of a packet     - decreasing maximum achievable throughput</p> <p></p>"},{"location":"SpecializedCourse/internet/3.6%20Principles%20of%20Congestion%20Control/#scenario-3-four-senders-routers-with-finite-buffers-and-multihop-paths","title":"Scenario 3: Four Senders, Routers with Finite Buffers, and Multihop Paths","text":"<p>Causes/costs of congestion: scenario 3</p> <p></p> <p></p> <p>four senders multi-hop paths timeout/retransmit</p> <p>Q: what happens as lin and lin\u2019 increase ? A:  as red\u00a0 lin\u2019 increases, all arriving blue pkts at upper queue are dropped, blue throughput -&gt; 0</p> <p>another \u201ccost\u201d of congestion: - when packet dropped, any upstream transmission capacity and buffering used for that packet was wasted!</p> <p></p> <p></p>"},{"location":"SpecializedCourse/internet/3.6%20Principles%20of%20Congestion%20Control/#362-approaches-to-congestion-control","title":"3.6.2 Approaches to Congestion Control","text":"<p>Approaches towards congestion control End-end congestion control: - no explicit feedback from network - congestion inferred from observed loss, delay - approach taken by TCP</p> <p>Network-assisted congestion control: - routers provide direct feedback to sending/receiving hosts with flows passing through congested router - may indicate congestion level or explicitly set sending rate - TCP ECN, ATM, DECbit protocols - \u7b80\u5355\u7684\u62e5\u585e\u6307\u793a(1 bit): SNA,DECbit,TCP/IP ECN,ATM</p>"},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/","title":"3.7 TCP Congestion Control","text":""},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#371-classic-tcp-congestion-control","title":"3.7.1 Classic TCP Congestion Control","text":"<p>TCP congestion control: AIMD - approach: senders can increase sending rate until packet loss (congestion) occurs, then decrease sending rate on loss event - \u539f\u7406\uff1a\u9010\u6e10\u589e\u52a0\u53d1\u9001\u901f\u7387\uff0c\u8c28\u614e\u63a2\u6d4b\u53ef\u7528\u5e26\u5bbd\uff0c\u76f4\u5230\u53d1\u751floss - \u65b9\u6cd5\uff1aAIMD     - Additive Increase: \u6bcf\u4e2aRTT\u5c06CongWin\u589e\u5927\u4e00\u4e2aMSS---\u62e5\u585e\u907f\u514d     - Multiplicative Decrease: \u53d1\u751floss\u540e\u5c06CongWin\u51cf\u534a</p> <ul> <li>\u952f\u9f7f\u884c\u4e3a\uff1a\u63a2\u6d4b\u53ef\u7528\u5e26\u5bbd</li> </ul> <p></p> <p>Multiplicative decrease detail:\u00a0 sending rate is - Cut in half on loss detected by triple duplicate ACK (TCP Reno) - Cut to 1 MSS (maximum segment size) when loss detected by timeout (TCP Tahoe)</p> <p>Why AIMD? \u00a0</p> <ul> <li>AIMD \u2013 a distributed, asynchronous algorithm \u2013 has been shown to:<ul> <li>optimize congested flow rates network wide!</li> <li>have desirable stability properties</li> </ul> </li> </ul> <p>TCP congestion control: details</p> <p></p> <p>\u95ee\u9898\uff1a\u5982\u4f55\u611f\u77e5\u7f51\u7edc\u62e5\u585e\uff1f - Loss\u4e8b\u4ef6=timeout\u62163\u4e2a\u91cd\u590dACK - \u53d1\u751floss\u4e8b\u4ef6\u540e\uff0c\u53d1\u9001\u65b9\u964d\u4f4e\u901f\u7387</p> <p>\u5982\u4f55\u5408\u7406\u5730\u8c03\u6574\u53d1\u9001\u901f\u7387\uff1f - \u52a0\u6027\u589e-\u4e58\u6027\u51cf\uff1aAIMD - \u6162\u542f\u52a8\uff1aSS</p>"},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#slow-start","title":"Slow Start","text":"<ul> <li>\u4f8b\uff1aMSS=500byte\uff0cRTT=200msec</li> <li>\u521d\u59cb\u901f\u7387=20kbps</li> <li>\u53ef\u7528\u5e26\u5bbd\u53ef\u80fd\u8fdc\u8fdc\u9ad8\u4e8e\u521d\u59cb\u901f\u7387\uff1a<ul> <li>\u5e0c\u671b\u5feb\u901f\u589e\u957f</li> </ul> </li> <li>\u539f\u7406\uff1a\u5f53\u8fde\u63a5\u5f00\u59cb\u65f6\uff0c\u6307\u6570\u6027\u589e\u957f</li> </ul> <pre><code>Slowstart algorithm\n\ninitialize:Congwin=1\nfor(each segment ACKed)\n    Congwin++\nuntil(loss event or CongWin&gt;threshold)\n</code></pre> <p>TCP slow start when connection begins, increase rate exponentially until first loss event: \u2022initially cwnd = 1 MSS \u2022double cwnd every RTT \u2022done by incrementing cwnd for every ACK received</p> <p>summary: initial rate is slow, but ramps up exponentially fast</p>"},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#congestion-avoidance","title":"Congestion Avoidance","text":"<p>TCP: from slow start to congestion avoidance</p> <p>Q: when should the exponential increase switch to linear?</p> <p>A: when cwnd gets to \u00bd of its value before timeout.</p> <p>Implementation: - variable ssthresh - on loss event, ssthresh is set to \u00bd of cwnd just before loss event</p> <p></p> <p>Loss\u4e8b\u4ef6\u7684\u5904\u7406 - 3\u4e2a\u91cd\u590dACKs:     - CongWin\u5207\u5230\u4e00\u534a     - \u7136\u540e\u7ebf\u6027\u589e\u957f - Timeout\u4e8b\u4ef6     - CongWin\u76f4\u63a5\u8bbe\u4e3a1\u4e2aMSS     - \u7136\u540e\u6307\u6570\u589e\u957f     - \u8fbe\u5230threshold\u540e\uff0c\u518d\u7ebf\u6027\u589e\u957f</p> <p>Philosophy: - 3\u4e2a\u91cd\u590dACKs\u8868\u793a\u7f51\u7edc\u8fd8\u80fd\u591f\u4f20\u8f93\u4e00\u4e9bsegments - timeout\u4e8b\u4ef6\u8868\u660e\u62e5\u585e\u66f4\u4e3a\u4e25\u91cd</p> <p>TCP\u62e5\u585e\u63a7\u5236\uff1a\u603b\u7ed3 - When CongWin is below Threshold, sender in slow-start phase, window grows exponentially - When CongWin is above Threshold, sender is in congestion-avoidance phase, window grows linearly. - When a triple duplicate ACK occurs,Threshold set to CongWin/2 and CongWin set to Threshold - When timeout occurs, Threshold set to CongWin/2 and CongWin is set to 1 MSS</p>"},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#fast-recovery","title":"Fast Recovery","text":""},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#tcp-congestion-control-retrospective","title":"TCP Congestion Control: Retrospective","text":""},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#tcp-cubic","title":"TCP Cubic","text":""},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#macroscopic-description-of-tcp-reno-throughput","title":"Macroscopic Description of TCP Reno Throughput","text":""},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#372-network-assisted-explicit-congestion-notification-and-delayed-based-congestion-control","title":"3.7.2 Network-Assisted Explicit Congestion Notification and Delayed-based Congestion Control","text":""},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#explicit-congestion-notification","title":"Explicit Congestion Notification","text":""},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#delay-based-congestion-control","title":"Delay-based Congestion Control","text":""},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#373-fairness","title":"3.7.3 Fairness","text":"<p>Fairness goal: if K TCP sessions share same bottleneck link of bandwidth R, each should have average rate of R/K</p> <p></p> <p>[!question] Q: is TCP Fair? </p> <p></p> <p>Example: two competing TCP sessions:</p> <ul> <li>additive increase gives slope of 1, as throughout increases</li> <li>multiplicative decrease decreases throughput proportionally</li> </ul> <p>loss: decrease window by factor of 2 congestion avoidance: additive increase</p> <p>A: Yes, under idealized assumptions: same RTT fixed number of sessions only in congestion avoidance</p> <p>Fairness: must all network apps be \u201cfair\u201d?</p>"},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#fairness-and-udp","title":"Fairness and UDP","text":"<p>Fairness and UDP multimedia apps often do not use TCP \u2022do not want rate throttled by congestion control instead use UDP: \u2022send audio/video at constant rate, tolerate packet loss there is no \u201cInternet police\u201d policing use of congestion control</p>"},{"location":"SpecializedCourse/internet/3.7%20TCP%20Congestion%20Control/#fairness-and-parallel-tcp-connections","title":"Fairness and Parallel TCP Connections","text":"<p>Fairness, parallel TCP connections application can open multiple parallel connections between two hosts web browsers do this , e.g., link of rate R with 9 existing connections: \u2022new app asks for 1 TCP, gets rate R/10 \u2022new app asks for 11 TCPs, gets R/2</p>"},{"location":"SpecializedCourse/internet/4.1%20Overview%20of%20Network%20Layer/","title":"4.1 Overview of Network Layer","text":"<p>Network-layer\u00a0 services and protocols - transport segment from sending to receiving host     - sender: encapsulates segments into datagrams, passes to link layer     - receiver: delivers segments to transport layer protocol - network layer protocols in every Internet device: hosts, routers - routers:     - examines header fields in all IP datagrams passing through it     - moves datagrams from input ports to output ports to transfer datagrams along end-end path</p>"},{"location":"SpecializedCourse/internet/4.1%20Overview%20of%20Network%20Layer/#411-forwarding-and-routing-the-data-and-control-planes","title":"4.1.1 Forwarding and Routing: The Data and Control Planes","text":"<p>Two key network-layer functions network-layer functions: - forwarding: move packets from a router\u2019s input link to appropriate router output link - \u8f6c\u53d1\u8868\u786e\u5b9a\u5728\u672c\u8def\u7531\u5668\u5982\u4f55\u8f6c\u53d1\u5206\u7ec4 - routing: determine route taken by packets from source to destination     - routing algorithms</p> <p>analogy: taking a trip - forwarding: process of getting through single interchange - routing: process of planning trip from source to destination</p> <p>\u7f51\u7edc\u5c42\u6838\u5fc3\u529f\u80fd-\u8fde\u63a5\u5efa\u7acb - \u67d0\u4e9b\u7f51\u7edc\u7684\u91cd\u8981\u529f\u80fd     - ATM\uff0c\u5e27\u4e2d\u7ee7\uff0cX.25 - \u6570\u636e\u5206\u7ec4\u4f20\u8f93\u4e4b\u524d\u4e24\u7aef\u4e3b\u673a\u9700\u8981\u9996\u5148\u5efa\u7acb\u865a\u62df/\u903b\u8f91\u8fde\u63a5     - \u7f51\u7edc\u8bbe\u5907\uff08\u5982\u8def\u7531\u5668\uff09\u53c2\u4e0e\u8fde\u63a5\u7684\u5efa\u7acb - \u7f51\u7edc\u5c42\u8fde\u63a5\u4e0e\u4f20\u8f93\u5c42\u8fde\u63a5\u7684\u5bf9\u6bd4\uff1a     - \u7f51\u7edc\u5c42\u8fde\u63a5\uff1a\u4e24\u4e2a\u4e3b\u673a\u4e4b\u95f4\uff08\u8def\u5f84\u4e0a\u7684\u8def\u7531\u5668\u7b49\u7f51\u7edc\u8bbe\u5907\u53c2\u4e0e\u5176\u4e2d\uff09     - \u4f20\u8f93\u5c42\u8fde\u63a5\uff1a\u4e24\u4e2a\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\uff08\u5bf9\u4e2d\u95f4\u7f51\u7edc\u8bbe\u5907\u900f\u660e\uff09</p> <p>Network layer: data plane, control plane Data plane: - local, per-router function - determines how datagram arriving on router input port is forwarded to router output port</p> <p>Control plane - network-wide logic - determines how datagram is routed among routers along end-end path from source host to destination host</p> <ul> <li>two control-plane approaches:<ul> <li>traditional routing algorithms: implemented in routers</li> <li>software-defined networking (SDN): implemented in (remote) servers</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/4.1%20Overview%20of%20Network%20Layer/#control-plane-the-traditional-approach","title":"Control Plane: The Traditional Approach","text":"<p>Per-router control plane Individual routing algorithm components in each and every router interact in the control plane</p> <p></p>"},{"location":"SpecializedCourse/internet/4.1%20Overview%20of%20Network%20Layer/#control-plane-the-sdn-approach","title":"Control Plane: The SDN Approach","text":"<p>Software-Defined Networking (SDN) control plane Remote controller computes, installs forwarding tables in routers</p> <p></p>"},{"location":"SpecializedCourse/internet/4.1%20Overview%20of%20Network%20Layer/#412-network-service-model","title":"4.1.2 Network Service Model","text":"<p>[!question] Q: What service model for \u201cchannel\u201d transporting datagrams from sender to receiver? </p> <p>example services for individual datagrams: - guaranteed delivery - guaranteed delivery with less than 40 msec delay example services for a flow of datagrams: - in-order datagram delivery - guaranteed minimum bandwidth to flow - restrictions on changes in inter-packet spacing</p> <p>\u7f51\u7edc\u670d\u52a1\u6a21\u578b \u65e0\u8fde\u63a5\u670d\u52a1(connection-less service) - \u4e0d\u4e8b\u5148\u4e3a\u7cfb\u5217\u5206\u7ec4\u7684\u4f20\u8f93\u786e\u5b9a\u4f20\u8f93\u8def\u5f84 - \u6bcf\u4e2a\u5206\u7ec4\u72ec\u7acb\u786e\u5b9a\u4f20\u8f93\u8def\u5f84 - \u4e0d\u540c\u5206\u7ec4\u53ef\u80fd\u4f20\u8f93\u8def\u5f84\u4e0d\u540c - \u6570\u636e\u62a5\u7f51\u7edcdatagram network \u8fde\u63a5\u670d\u52a1(connection service) - \u9996\u5148\u4e3a\u7cfb\u5217\u5206\u7ec4\u7684\u4f20\u8f93\u786e\u5b9a\u4ece\u6e90\u5230\u76ee\u7684\u7ecf\u8fc7\u7684\u8def\u5f84\uff08\u5efa\u7acb\u8fde\u63a5\uff09 - \u7136\u540e\u6cbf\u8be5\u8def\u5f84\uff08\u8fde\u63a5\uff09\u4f20\u8f93\u7cfb\u5217\u5206\u7ec4 - \u7cfb\u5217\u5206\u7ec4\u4f20\u8f93\u8def\u5f84\u76f8\u540c - \u4f20\u8f93\u7ed3\u675f\u540e\u62c6\u9664\u8fde\u63a5 - \u865a\u7535\u8def\u7f51\u7edcvirtual-circuit network</p> <p>\u8fde\u63a5\u670d\u52a1\u4e0e\u65e0\u8fde\u63a5\u670d\u52a1 - \u6570\u636e\u62a5datagram\u7f51\u7edc\u4e0e\u865a\u7535\u8defvirtual-circuit\u7f51\u7edc\u662f\u5178\u578b\u4e24\u7c7b\u5206\u7ec4\u4ea4\u6362\u7f51\u7edc - \u6570\u636e\u62a5\u7f51\u7edc\u63d0\u4f9b\u7f51\u7edc\u5c42\u65e0\u8fde\u63a5\u670d\u52a1 - \u865a\u7535\u8def\u7f51\u7edc\u63d0\u4f9b\u7f51\u7edc\u5c42\u8fde\u63a5\u670d\u52a1 - \u7c7b\u4f3c\u4e8e\u4f20\u8f93\u5c42\u7684\u65e0\u8fde\u63a5\u670d\u52a1(UDP)\u548c\u9762\u5411\u8fde\u63a5\u670d\u52a1(TCP)\uff0c\u4f46\u662f\u7f51\u7edc\u5c42\u670d\u52a1\uff1a     - \u4e3b\u673a\u5230\u4e3b\u673a\u670d\u52a1     - \u7f51\u7edc\u6838\u5fc3\u5b9e\u73b0</p> <p>\u865a\u7535\u8defvirtual circuits \u865a\u7535\u8def\uff1a\u4e00\u6761\u4ece\u6e90\u4e3b\u673a\u5230\u76ee\u7684\u4e3b\u673a\uff0c\u7c7b\u4f3c\u4e8e\u7535\u8def\u7684\u8def\u5f84\uff08\u903b\u8f91\u8fde\u63a5\uff09 - \u5206\u7ec4\u4ea4\u6362 - \u6bcf\u4e2a\u5206\u7ec4\u7684\u4f20\u8f93\u5229\u7528\u94fe\u8def\u7684\u5168\u90e8\u5e26\u5bbd - \u6e90\u5230\u76ee\u7684\u8def\u5f84\u7ecf\u8fc7\u7684\u7f51\u7edc\u5c42\u8bbe\u5907\u5171\u540c\u5b8c\u6210\u865a\u7535\u8def\u529f\u80fd</p> <p>\u901a\u4fe1\u8fc7\u7a0b - \u547c\u53eb\u5efa\u7acb(call setup)-&gt;\u6570\u636e\u4f20\u8f93-&gt;\u62c6\u9664\u547c\u53eb - \u6bcf\u4e2a\u5206\u7ec4\u643a\u5e26\u865a\u7535\u8def\u6807\u8bc6\uff08VCID\uff09\uff0c\u800c\u4e0d\u662f\u76ee\u7684\u4e3b\u673a\u5730\u5740 - \u865a\u7535\u8def\u7ecf\u8fc7\u7684\u6bcf\u4e2a\u7f51\u7edc\u8bbe\u5907\uff08\u5982\u8def\u7531\u5668\uff09\uff0c\u7ef4\u62a4\u6bcf\u6761\u7ecf\u8fc7\u5b83\u7684\u865a\u7535\u8def\u8fde\u63a5\u72b6\u6001 - \u94fe\u8def\u3001\u7f51\u7edc\u8bbe\u5907\u8d44\u6e90\uff08\u5982\u5e26\u5bbd\u3001\u7f13\u5b58\u7b49\uff09\u53ef\u4ee5\u9762\u5411VC\u8fdb\u884c\u9884\u5206\u914d     - \u9884\u5206\u914d\u8d44\u6e90=\u53ef\u9884\u671f\u670d\u52a1\u6027\u80fd     - \u5982ATM\u7684\u7535\u8def\u4eff\u771f\uff08CBR\uff09</p> <p>VC\u7684\u5177\u4f53\u5b9e\u73b0 \u6bcf\u6761\u865a\u7535\u8def\u5305\u62ec\uff1a 1.\u4ece\u6e90\u4e3b\u673a\u5230\u76ee\u7684\u4e3b\u673a\u7684\u4e00\u6761\u8def\u5f84 2.\u865a\u7535\u8def\u53f7\uff08VCID\uff09\uff0c\u6cbf\u8def\u6bcf\u6bb5\u94fe\u8def\u4e00\u4e2a\u7f16\u53f7 3.\u6cbf\u8def\u6bcf\u4e2a\u7f51\u7edc\u5c42\u8bbe\u5907\uff08\u5982\u8def\u7531\u5668\uff09\uff0c\u5229\u7528\u8f6c\u53d1\u8868\u8bb0\u5f55\u7ecf\u8fc7\u7684\u6bcf\u6761\u865a\u7535\u8def</p> <ul> <li>\u6cbf\u67d0\u6761\u865a\u7535\u8def\u4f20\u8f93\u7684\u5206\u7ec4\uff0c\u643a\u5e26\u5bf9\u5e94\u865a\u7535\u8def\u7684VCID\uff0c\u800c\u4e0d\u662f\u76ee\u7684\u5730\u5740</li> <li>\u540c\u4e00\u6761VC\uff0c\u5728\u6bcf\u6bb5\u94fe\u8def\u4e0a\u7684VCID\u901a\u5e38\u4e0d\u540c<ul> <li>\u8def\u7531\u5668\u8f6c\u53d1\u5206\u7ec4\u65f6\u4f9d\u636e\u8f6c\u53d1\u8868\u6539\u5199/\u66ff\u6362\u865a\u7535\u8def\u53f7</li> </ul> </li> </ul> <p>VC\u8f6c\u53d1\u8868 VC\u8def\u5f84\u4e0a\u6bcf\u4e2a\u8def\u7531\u5668\u90fd\u9700\u8981\u7ef4\u62a4VC\u8fde\u63a5\u7684\u72b6\u6001\u4fe1\u606f</p> <p>\u865a\u7535\u8def\u4fe1\u4ee4\u534f\u8bae(signaling protocols) - \u7528\u4e8eVC\u7684\u5efa\u7acb\u3001\u7ef4\u62a4\u4e0e\u62c6\u9664     - \u8def\u5f84\u9009\u62e9 - \u5e94\u7528\u4e8e\u865a\u7535\u8def\u7f51\u7edc     - \u5982ATM\u3001\u5e27\u4e2d\u7ee7\uff08frame-relay\uff09\u7f51\u7edc\u7b49 - \u76ee\u524d\u7684Internet\u4e0d\u91c7\u7528</p> <p>\u6570\u636e\u62a5\u7f51\u7edc - \u7f51\u7edc\u5c42\u65e0\u8fde\u63a5 - \u6bcf\u4e2a\u5206\u7ec4\u643a\u5e26\u76ee\u7684\u5730\u5740 - \u8def\u7531\u5668\u6839\u636e\u5206\u7ec4\u7684\u76ee\u7684\u5730\u5740\u8f6c\u53d1\u5206\u7ec4     - \u57fa\u4e8e\u8def\u7531\u534f\u8bae/\u7b97\u6cd5\u6784\u5efa\u8f6c\u53d1\u8868     - \u68c0\u7d22\u8f6c\u53d1\u8868     - \u6bcf\u4e2a\u5206\u7ec4\u72ec\u7acb\u9009\u8def</p> <p> Internet\u00a0 \u201cbest effort\u201d service model No guarantees on: i.successful datagram delivery to destination ii.timing or order of delivery iii.bandwidth available to end-end flow</p> <p>Reflections on best-effort\u00a0 service: - simplicity of mechanism has allowed Internet to be widely deployed adopted - sufficient provisioning of bandwidth allows performance of real-time applications (e.g., interactive voice, video) to be \u201cgood enough\u201d for \u201cmost of the time\u201d - replicated, application-layer distributed services (datacenters, content distribution networks) connecting close to clients\u2019 networks, allow services to be provided from multiple locations - congestion control of \u201celastic\u201d services helps</p> <p>It\u2019s hard to argue with success of best-effort service model</p>"},{"location":"SpecializedCourse/internet/4.1%20Overview%20of%20Network%20Layer/#an-overview-of-chapter-4","title":"An Overview of Chapter 4","text":""},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/","title":"4.2 What's Inside a Router?","text":"<p>Router architecture overview high-level view of generic router architecture:</p> <p></p> <p>analogy view of generic router architecture:</p>"},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#421-input-port-processing-and-destination-based-forwarding","title":"4.2.1 Input Port Processing and Destination-Based Forwarding","text":"<p>Input port functions physical layer: bit-level reception link layer:e.g., Ethernet(chapter 6)</p> <p>decentralized switching: - using header field values, lookup output port using forwarding table in input port memory (\u201cmatch plus action\u201d) - goal: complete input port processing at \u2018line speed\u2019 - input port queuing: if datagrams arrive faster than forwarding rate into switch fabric</p> <p>destination-based forwarding: forward based only on destination IP address (traditional) generalized forwarding: forward based on any set of header field values</p> <p>Destination-based forwarding</p> <p>Longest prefix matching</p> <p>when looking for forwarding table entry for given destination address, use longest address prefix that matches destination address.</p> <p>we\u2019ll see why longest prefix matching is used shortly, when we study addressing</p> <p>longest prefix matching: often performed using ternary content addressable memories (TCAMs) \u2022content addressable: present address to TCAM: retrieve address in one clock cycle, regardless of table size \u2022Cisco Catalyst:\u00a0 ~1M routing table entries in TCAM</p>"},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#422-switching","title":"4.2.2 Switching","text":"<p>Switching fabrics transfer packet from input link to appropriate output link</p> <p>switching rate: rate at which packets can be transfer from inputs to outputs \u2022often measured as multiple of input/output line rate \u2022N inputs: switching rate N times line rate desirable</p> <p>three major types of switching fabrics:</p> <p></p> <p>Switching via memory first generation routers: - traditional computers with switching under direct control of CPU - packet copied to system\u2019s memory - speed limited by memory bandwidth (2 bus crossings per datagram)</p> <p>Switching via a bus - datagram from input port memory to output port memory via a shared bus - bus contention:\u00a0 switching speed limited by bus bandwidth - 32 Gbps bus, Cisco 5600: sufficient speed for access routers</p> <p>Switching via interconnection network - Crossbar, Clos networks, other interconnection nets initially developed to connect processors in multiprocessor - multistage switch: nxn switch from multiple stages of smaller switches - exploiting parallelism:     - fragment datagram into fixed length cells on entry     - switch cells through the fabric, reassemble datagram at exit</p> <ul> <li> <p>scaling, using multiple switching \u201cplanes\u201d in parallel:</p> <ul> <li>speedup, scaleup via parallelism</li> </ul> </li> <li> <p>Cisco CRS router:</p> <ul> <li>basic unit: 8 switching planes</li> <li>each plane: 3-stage interconnection network</li> <li>up to 100\u2019s Tbps switching capacity</li> </ul> </li> </ul>"},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#423-output-port-processing","title":"4.2.3 Output Port Processing","text":""},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#424-where-does-queuing-occur","title":"4.2.4 Where Does Queuing Occur?","text":""},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#input-queueing","title":"Input queueing","text":"<p>Input port queuing - If switch fabric slower than input ports combined -&gt; queueing may occur at input queues     - queueing delay and loss due to input buffer overflow! - Head-of-the-Line (HOL) blocking: queued datagram at front of queue prevents others in queue from moving forward</p> <p></p>"},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#output-queueing","title":"Output Queueing","text":"<p>Output port queuing</p> <ul> <li>Buffering required when datagrams arrive from fabric faster than link transmission rate. Drop policy: which datagrams to drop if no free buffers?<ul> <li>Datagrams can be lost due to congestion, lack of buffers</li> </ul> </li> <li> <p>Scheduling discipline chooses among queued datagrams for transmission</p> <ul> <li>Priority scheduling \u2013 who gets best performance, network neutrality</li> </ul> </li> <li> <p>buffering when arrival rate via switch exceeds output line speed</p> </li> <li>queueing (delay) and loss due to output port buffer overflow!</li> </ul> <p></p>"},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#how-much-buffering-is-enough","title":"How Much Buffering Is \"Enough?\"","text":"<p>How much buffering? \u7565</p> <p></p>"},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#425-packet-scheduling","title":"4.2.5 Packet Scheduling","text":""},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#first-in-first-outfifo","title":"First-in-First-Out(FIFO)","text":""},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#priority-queuing","title":"Priority Queuing","text":""},{"location":"SpecializedCourse/internet/4.2%20What%27s%20Inside%20a%20Router/#round-robin-and-weighted-fair-queuingwfq","title":"Round Robin and Weighted Fair Queuing(WFQ)","text":""},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/","title":"4.3 The Internet Protocol(IP):IPv4,Addressing,IPv6,and More","text":""},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/#431-ipv4-datagram-format","title":"4.3.1 IPv4 Datagram Format","text":"<p>IP protocol version number header length(bytes) \u201ctype\u201d of service: - diffserv (0:5) - ECN (6:7) TTL: remaining\u00a0 max hops(decremented at each router) upper layer protocol (e.g., TCP or UDP) overhead - 20 bytes of TCP - 20 bytes of IP - = 40 bytes + app layer overhead for TCP+IP total datagram length (bytes) fragmentation/reassembly header checksum 32-bit source IP address Maximum length: 64K bytes Typically: 1500 bytes or less</p> <p>e.g., timestamp, record route taken</p>"},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/#432-ipv4-addressing","title":"4.3.2 IPv4 Addressing","text":"<p>IP addressing: introduction</p> <ul> <li>IP address: 32-bit identifier associated with each host or router interface</li> <li>interface: connection between host/router and physical link<ul> <li>router\u2019s typically have multiple interfaces</li> <li>host typically has one or two interfaces (e.g., wired Ethernet, wireless 802.11)</li> </ul> </li> </ul> <p>dotted-decimal IP address notation: 223.1.1.1 = 11011111 00000001 00000001 00000001</p> <p>Q: how are interfaces actually connected? A: we\u2019ll learn about that in chapters 6, 7</p> <p>A: wired Ethernet interfaces connected by Ethernet switches A: wireless WiFi interfaces connected by WiFi base station</p> <p>For now: don\u2019t need to worry about how one interface is connected to another (with no intervening router)</p> <p>Subnets - What\u2019s a subnet ?     - device interfaces that can physically reach each other without passing through an intervening router - IP addresses have structure:     - subnet part: devices in same subnet have common high order bits     - host part: remaining low order bits</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/#obtaining-a-block-of-address","title":"Obtaining a Block of Address","text":""},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/#obtaining-a-host-address-the-dynamic-host-configuration-protocol","title":"Obtaining a Host Address: The Dynamic Host Configuration Protocol","text":""},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/#433-network-address-translationnat","title":"4.3.3 Network Address Translation(NAT)","text":""},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/#434-ipv6","title":"4.3.4 IPv6","text":""},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/#ipv6-datagram-format","title":"IPv6 Datagram Format","text":""},{"location":"SpecializedCourse/internet/4.3%20The%20Internet%20Protocol%28IP%29%20IPv4%2CAddressing%2CIPv6%2Cand%20More/#transitioning-from-ipv4-to-ipv6","title":"Transitioning from IPv4 to IPv6","text":""},{"location":"SpecializedCourse/internet/4.4%20Generalized%20Forwarding%20and%20SDN/","title":"4.4 Generalized Forwarding and SDN","text":""},{"location":"SpecializedCourse/internet/4.4%20Generalized%20Forwarding%20and%20SDN/#441-match","title":"4.4.1 Match","text":""},{"location":"SpecializedCourse/internet/4.4%20Generalized%20Forwarding%20and%20SDN/#442-action","title":"4.4.2 Action","text":""},{"location":"SpecializedCourse/internet/4.4%20Generalized%20Forwarding%20and%20SDN/#443-openflow-examples-of-match-plus-action-in-action","title":"4.4.3 OpenFlow Examples of Match-plus-action in Action","text":""},{"location":"SpecializedCourse/internet/4.4%20Generalized%20Forwarding%20and%20SDN/#a-first-example-simple-forwarding","title":"A First Example: Simple Forwarding","text":""},{"location":"SpecializedCourse/internet/4.4%20Generalized%20Forwarding%20and%20SDN/#a-second-example-load-balancing","title":"A Second Example: Load Balancing","text":""},{"location":"SpecializedCourse/internet/4.4%20Generalized%20Forwarding%20and%20SDN/#a-third-example-firewalling","title":"A Third Example: Firewalling","text":""},{"location":"SpecializedCourse/internet/FTP/","title":"FTP","text":"<p>ftp(File Transfer Protocol)  - \u5411\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u4f20\u8f93\u6587\u4ef6\u6216\u4ece\u8fdc\u7a0b\u4e3b\u673a\u63a5\u6536\u6587\u4ef6 - \u5ba2\u6237/\u670d\u52a1\u5668\u6a21\u5f0f     - \u5ba2\u6237\u7aef\uff1a\u53d1\u8d77\u4f20\u8f93\u7684\u4e00\u65b9     - \u670d\u52a1\u5668\uff1a\u8fdc\u7a0b\u4e3b\u673a - ftp: RFC 959 - ftp\u670d\u52a1\u5668\uff1a\u7aef\u53e3\u53f7\u4e3a21</p> <p>FTP\uff1a\u63a7\u5236\u8fde\u63a5\u4e0e\u6570\u636e\u8fde\u63a5\u5206\u5f00</p> <p> - FTP\u5ba2\u6237\u7aef\u4e0eFTP\u670d\u52a1\u5668\u901a\u8fc7\u7aef\u53e321\u8054\u7cfb\uff0c\u5e76\u4f7f\u7528TCP\u4e3a\u4f20\u8f93\u534f\u8bae - \u5ba2\u6237\u7aef\u901a\u8fc7\u63a7\u5236\u8fde\u63a5\u83b7\u5f97\u8eab\u4efd\u786e\u8ba4 - \u5ba2\u6237\u7aef\u901a\u8fc7\u63a7\u5236\u8fde\u63a5\u53d1\u9001\u547d\u4ee4\u6d4f\u89c8\u8fdc\u7a0b\u76ee\u5f55 - \u6536\u5230\u4e00\u4e2a\u6587\u4ef6\u4f20\u8f93\u547d\u4ee4\u65f6\uff0c\u670d\u52a1\u5668\u6253\u5f00\u4e00\u4e2a\u5230\u5ba2\u6237\u7aef\u7684\u6570\u636e\u8fde\u63a5 - \u4e00\u4e2a\u6587\u4ef6\u4f20\u8f93\u5b8c\u6210\u540e\uff0c\u670d\u52a1\u5668\u5173\u95ed\u8fde\u63a5 - \u670d\u52a1\u5668\u6253\u5f00\u7b2c\u4e8c\u4e2aTCP\u6570\u636e\u8fde\u63a5\u7528\u6765\u4f20\u8f93\u53e6\u4e00\u4e2a\u6587\u4ef6 - \u63a7\u5236\u8fde\u63a5\uff1a\u5e26\u5916\uff08\"out of band\"\uff09\u4f20\u9001 - FTP\u670d\u52a1\u5668\u7ef4\u62a4\u7528\u6237\u7684\u72b6\u6001\u4fe1\u606f\uff1a\u5f53\u524d\u8def\u5f84\u3001\u7528\u6237\u8d26\u6237\u4e0e\u63a7\u5236\u8fde\u63a5\u5bf9\u5e94\uff08\u6709\u72b6\u6001\uff09</p> <p>FTP\u547d\u4ee4\u3001\u54cd\u5e94 \u547d\u4ee4\u6837\u4f8b\uff1a - \u5728\u63a7\u5236\u8fde\u63a5\u4e0a\u4ee5ASCII\u6587\u672c\u65b9\u5f0f\u4f20\u9001 - USER username - PASS password - LIST\uff1a\u8bf7\u670d\u52a1\u5668\u8fd4\u56de\u8fdc\u7a0b\u4e3b\u673a\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\u5217\u8868 - RETR fileneme\uff1a\u4ece\u8fdc\u7a0b\u4e3b\u673a\u7684\u5f53\u524d\u76ee\u5f55\u68c0\u7d22\u6587\u4ef6\uff08gets\uff09 - STOR filename\uff1a\u5411\u8fdc\u7a0b\u4e3b\u673a\u7684\u5f53\u524d\u76ee\u5f55\u5b58\u653e\u6587\u4ef6\uff08puts\uff09</p> <p>\u8fd4\u56de\u7801\u6837\u4f8b\uff1a - \u72b6\u6001\u7801\u548c\u72b6\u6001\u4fe1\u606f\uff08\u540cHTTP\uff09 - 331 Username OK, password required - 125 data connection already open; transfer starting - 425 Can't open data connection - 452 Error waiting file</p>"},{"location":"SpecializedCourse/os/o/","title":"\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u5c0f\u4e3b\u8bf7\u7a0d\u7b49\uff0c\u7f51\u7ad9\u6b63\u5728\u5168\u901f\u5efa\u8bbe\u4e2d!</p>"},{"location":"home/about/","title":"\u5173\u4e8e\u6211","text":"<p>\u9648\u963f\u660e\u7684\u4e2a\u4eba\u7b80\u5386\u5728\u8fd9\u91cc\uff0c\u5feb\u70b9\u51fb\u67e5\u770b\uff01</p> <p>\u4e0b\u8f7d\u7b80\u5386 :download</p>"},{"location":"math/Discretemathematics/set/","title":"\u79bb\u6563\u6570\u5b66","text":"<p>\u5c0f\u4e3b\u8bf7\u7a0d\u7b49\uff0c\u7f51\u7ad9\u6b63\u5728\u5168\u901f\u5efa\u8bbe\u4e2d!</p>"},{"location":"mkdocs/admonitions/","title":"\u8b66\u544a\u793a\u4f8b","text":"<p>Example of an admonition/callout with a title:</p> <p>Title of the callout</p> <p>lorem</p> Collapsible callout <p>L</p>"},{"location":"mkdocs/code-examples/","title":"\u4ee3\u7801\u793a\u4f8b","text":"<p>An example of a codeblock for python:</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1,num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5,3)\nprintf('The sum is:', result)\n</code></pre>"},{"location":"mkdocs/content-tabs/","title":"\u6807\u7b7e\u793a\u4f8b","text":""},{"location":"mkdocs/content-tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of content tabs.</p>"},{"location":"mkdocs/content-tabs/#generic-content","title":"Generic Content","text":"Plain textUnoederd listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"mkdocs/content-tabs/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":"PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif__name__==\"__main__\":\n    main()\n</code></pre> <pre><code>function main(){\n\n}\n</code></pre>"},{"location":"mkdocs/diagram-examples/","title":"Diagram Examples","text":""},{"location":"mkdocs/diagram-examples/#flowcharts","title":"Flowcharts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre>"},{"location":"mkdocs/diagram-examples/#sequence-diagrams","title":"Sequence Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre>"},{"location":"%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8E%86%E7%A8%8B/","title":"\u535a\u5ba2\u642d\u5efa\u5386\u7a0b","text":"<p>\u53c2\u8003https://squidfunk.github.io/mkdocs-material/</p> <p>All the text here appears in the blog post</p>"},{"location":"life-update/","title":"Life update","text":"<p>This is a blog post about some life updates...</p>"},{"location":"project/GraduationThesis/","title":"\u6bd5\u4e1a\u8bba\u6587","text":"<p>\u60f3\u4e86\u89e3\u9648\u963f\u660e\u7684\u6bd5\u4e1a\u8bba\u6587\u76f8\u5173\u4fe1\u606f\uff0c\u6b22\u8fce\u70b9\u51fb\u4e0b\u9762\u6309\u94ae\u5728\u7ebf\u89c2\u770b\u5427\uff01\u563f\u563f\uff01</p> <p>\u4e0b\u8f7d\u6bd5\u8bbe :download</p>"},{"location":"project/embedded/","title":"\u5d4c\u5165\u5f0f","text":"<p>\u60f3\u4e86\u89e3\u9648\u963f\u660e\u7684\u5d4c\u5165\u5f0f\u9879\u76ee\u76f8\u5173\u4fe1\u606f\uff0c\u6b22\u8fce\u70b9\u51fb\u4e0b\u9762\u6309\u94ae\u5728\u7ebf\u89c2\u770b\u5427\uff01\u563f\u563f\uff01</p> <p>\u57fa\u4e8eArduino\u7684\u667a\u80fd\u5bb6\u5c45\u7684\u5f00\u53d1 :download</p>"},{"location":"archive/2025/","title":"2025","text":""},{"location":"category/tech/","title":"Tech","text":""},{"location":"category/life/","title":"life","text":""}]}